(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    583961,      11166]
NotebookOptionsPosition[    578408,      11009]
NotebookOutlinePosition[    578752,      11024]
CellTagsIndexPosition[    578709,      11021]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Calculate the cost function of a neural network with given architecture\
\>", "Title",
 CellChangeTimes->{{3.6662905917646275`*^9, 3.666290647241801*^9}, {
  3.666291453248902*^9, 3.6662914584932017`*^9}}],

Cell[CellGroupData[{

Cell["The network set up", "Section",
 CellChangeTimes->{{3.666290719831953*^9, 3.6662907347568064`*^9}, {
  3.666352075049206*^9, 3.666352076256692*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"archit", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "5", ",", " ", "6", ",", " ", "3"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"\"\<\[Theta]\>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"i", "-", "1"}], "]"}], "<>", 
         RowBox[{"ToString", "[", "j", "]"}], "<>", 
         RowBox[{"ToString", "[", "k", "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", " ", 
         RowBox[{"archit", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"k", ",", " ", "0", ",", " ", 
         RowBox[{"archit", "[", 
          RowBox[{"[", 
           RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", " ", 
       RowBox[{"Length", "[", "archit", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", " ", 
   RowBox[{"i", "<", 
    RowBox[{"Length", "[", "archit", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{"Print", "[", 
    RowBox[{
     RowBox[{"Superscript", "[", 
      RowBox[{"\"\<\[Theta]\>\"", ",", " ", "i"}], "]"}], ",", "\"\< = \>\"", 
     ",", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{"\[Theta]", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Theta]fix", " ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.65524", ",", "1.16736", ",", "3.69996"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.20181"}], ",", 
        RowBox[{"-", "2.42601"}], ",", 
        RowBox[{"-", "1.84163"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4.34915"}], ",", 
        RowBox[{"-", "2.57031"}], ",", 
        RowBox[{"-", "1.60943"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.85131"}], ",", "3.39521", ",", "0.74772"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"1.80352", ",", "0.10570", ",", "1.68046"}], "}"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.933876"}], ",", 
        RowBox[{"-", "1.361892"}], ",", 
        RowBox[{"-", "2.134440"}], ",", 
        RowBox[{"-", "0.158757"}], ",", 
        RowBox[{"-", "2.515040"}], ",", 
        RowBox[{"-", "0.652101"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3.403622"}], ",", 
        RowBox[{"-", "0.528750"}], ",", 
        RowBox[{"-", "2.913613"}], ",", 
        RowBox[{"-", "0.886336"}], ",", 
        RowBox[{"-", "1.015360"}], ",", 
        RowBox[{"-", "2.560445"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.146044"}], ",", "0.162330", ",", 
        RowBox[{"-", "2.625194"}], ",", "1.021644", ",", 
        RowBox[{"-", "3.260315"}], ",", 
        RowBox[{"-", "0.640995"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.628634"}], ",", 
        RowBox[{"-", "0.511528"}], ",", 
        RowBox[{"-", "4.932531"}], ",", 
        RowBox[{"-", "0.141512"}], ",", 
        RowBox[{"-", "4.251957"}], ",", 
        RowBox[{"-", "0.314281"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.137063"}], ",", "0.089539", ",", 
        RowBox[{"-", "1.858182"}], ",", 
        RowBox[{"-", "3.277080"}], ",", 
        RowBox[{"-", "1.436328"}], ",", 
        RowBox[{"-", "6.152028"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3.840831"}], ",", 
        RowBox[{"-", "0.159956"}], ",", 
        RowBox[{"-", "2.284905"}], ",", 
        RowBox[{"-", "2.694900"}], ",", "0.683331", ",", 
        RowBox[{"-", "3.291150"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1448159", ",", 
        RowBox[{"-", "4.8905595"}], ",", "2.3063216", ",", 
        RowBox[{"-", "0.8244603"}], ",", "1.6471982", ",", 
        RowBox[{"-", "0.7640889"}], ",", 
        RowBox[{"-", "3.2790679"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.5387838"}], ",", 
        RowBox[{"-", "1.8388260"}], ",", 
        RowBox[{"-", "0.3042447"}], ",", "1.2044668", ",", "2.1997910", ",", 
        "0.7212458", ",", 
        RowBox[{"-", "0.3179984"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.0087483", ",", 
        RowBox[{"-", "2.0385048"}], ",", 
        RowBox[{"-", "0.5422693"}], ",", 
        RowBox[{"-", "2.1814523"}], ",", 
        RowBox[{"-", "0.7490863"}], ",", 
        RowBox[{"-", "2.8278831"}], ",", 
        RowBox[{"-", "2.0102060"}]}], "}"}]}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"rule\[Theta]", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[Theta]", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Theta]fix", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"k", ",", " ", "1", ",", " ", 
           RowBox[{"Length", "[", 
            RowBox[{
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", " ", 
       RowBox[{"Length", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6662840534046545`*^9, 3.666284102570467*^9}, {
  3.666284510998828*^9, 3.666284513916995*^9}, {3.6663219532116437`*^9, 
  3.6663219568911257`*^9}, {3.666322637373359*^9, 3.666322638749914*^9}, {
  3.6663245558344965`*^9, 3.666324556009567*^9}, {3.666326017919212*^9, 
  3.6663260231213083`*^9}, {3.6663476055059757`*^9, 3.6663476117374873`*^9}, {
  3.666347769580097*^9, 3.666347770147326*^9}, {3.666352005346115*^9, 
  3.6663520176600776`*^9}, {3.666437689997503*^9, 3.6664377184018908`*^9}, {
  3.666437995341928*^9, 3.666437997509797*^9}, {3.666439660211445*^9, 
  3.6664396617880774`*^9}, {3.6664397798454113`*^9, 3.666439780628725*^9}, {
  3.666440103128029*^9, 3.6664401365044107`*^9}, {3.6665853133255672`*^9, 
  3.6665853186036882`*^9}, {3.6665853513608437`*^9, 3.6665853528844566`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "5", ",", "6", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6662841046755877`*^9, 3.666284514432024*^9, 3.6663207036810846`*^9, 
   3.6663219573873262`*^9, 3.6663220525366716`*^9, 3.6663226394531975`*^9, 
   3.666324557249067*^9, 3.6663257503743916`*^9, 3.666326023728554*^9, 
   3.6663477710436883`*^9, {3.6663520185414333`*^9, 3.6663520451431537`*^9}, {
   3.6664377054046803`*^9, 3.6664377214150996`*^9}, 3.6664379982140827`*^9, 
   3.666439662419331*^9, 3.6664397810779076`*^9, 3.666439923129861*^9, 
   3.6664401375518312`*^9, 3.6665853567540097`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TemplateBox[{"\"\[Theta]\"","1"},
    "Superscript"], "\[InvisibleSpace]", "\<\" = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\[Theta]110", "\[Theta]111", "\[Theta]112"},
       {"\[Theta]120", "\[Theta]121", "\[Theta]122"},
       {"\[Theta]130", "\[Theta]131", "\[Theta]132"},
       {"\[Theta]140", "\[Theta]141", "\[Theta]142"},
       {"\[Theta]150", "\[Theta]151", "\[Theta]152"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
   Superscript["\[Theta]", 1], " = ", 
   MatrixForm[{{$CellContext`\[Theta]110, $CellContext`\[Theta]111, \
$CellContext`\[Theta]112}, {$CellContext`\[Theta]120, \
$CellContext`\[Theta]121, $CellContext`\[Theta]122}, \
{$CellContext`\[Theta]130, $CellContext`\[Theta]131, \
$CellContext`\[Theta]132}, {$CellContext`\[Theta]140, \
$CellContext`\[Theta]141, $CellContext`\[Theta]142}, \
{$CellContext`\[Theta]150, $CellContext`\[Theta]151, \
$CellContext`\[Theta]152}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.666326023730554*^9, 3.666347771046689*^9, {3.666352018562442*^9, 
   3.6663520451641626`*^9}, {3.6664377054416957`*^9, 3.6664377214171004`*^9}, 
   3.666437998218089*^9, 3.666439662422332*^9, 3.666439781080907*^9, 
   3.66643992314987*^9, 3.666440137555833*^9, 3.666585356861053*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TemplateBox[{"\"\[Theta]\"","2"},
    "Superscript"], "\[InvisibleSpace]", "\<\" = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\[Theta]210", "\[Theta]211", "\[Theta]212", "\[Theta]213", 
        "\[Theta]214", "\[Theta]215"},
       {"\[Theta]220", "\[Theta]221", "\[Theta]222", "\[Theta]223", 
        "\[Theta]224", "\[Theta]225"},
       {"\[Theta]230", "\[Theta]231", "\[Theta]232", "\[Theta]233", 
        "\[Theta]234", "\[Theta]235"},
       {"\[Theta]240", "\[Theta]241", "\[Theta]242", "\[Theta]243", 
        "\[Theta]244", "\[Theta]245"},
       {"\[Theta]250", "\[Theta]251", "\[Theta]252", "\[Theta]253", 
        "\[Theta]254", "\[Theta]255"},
       {"\[Theta]260", "\[Theta]261", "\[Theta]262", "\[Theta]263", 
        "\[Theta]264", "\[Theta]265"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
   Superscript["\[Theta]", 2], " = ", 
   MatrixForm[{{$CellContext`\[Theta]210, $CellContext`\[Theta]211, \
$CellContext`\[Theta]212, $CellContext`\[Theta]213, $CellContext`\[Theta]214, \
$CellContext`\[Theta]215}, {$CellContext`\[Theta]220, \
$CellContext`\[Theta]221, $CellContext`\[Theta]222, $CellContext`\[Theta]223, \
$CellContext`\[Theta]224, $CellContext`\[Theta]225}, \
{$CellContext`\[Theta]230, $CellContext`\[Theta]231, \
$CellContext`\[Theta]232, $CellContext`\[Theta]233, $CellContext`\[Theta]234, \
$CellContext`\[Theta]235}, {$CellContext`\[Theta]240, \
$CellContext`\[Theta]241, $CellContext`\[Theta]242, $CellContext`\[Theta]243, \
$CellContext`\[Theta]244, $CellContext`\[Theta]245}, \
{$CellContext`\[Theta]250, $CellContext`\[Theta]251, \
$CellContext`\[Theta]252, $CellContext`\[Theta]253, $CellContext`\[Theta]254, \
$CellContext`\[Theta]255}, {$CellContext`\[Theta]260, \
$CellContext`\[Theta]261, $CellContext`\[Theta]262, $CellContext`\[Theta]263, \
$CellContext`\[Theta]264, $CellContext`\[Theta]265}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.666326023730554*^9, 3.666347771046689*^9, {3.666352018562442*^9, 
   3.6663520451641626`*^9}, {3.6664377054416957`*^9, 3.6664377214171004`*^9}, 
   3.666437998218089*^9, 3.666439662422332*^9, 3.666439781080907*^9, 
   3.66643992314987*^9, 3.666440137555833*^9, 3.6665853568630533`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TemplateBox[{"\"\[Theta]\"","3"},
    "Superscript"], "\[InvisibleSpace]", "\<\" = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\[Theta]310", "\[Theta]311", "\[Theta]312", "\[Theta]313", 
        "\[Theta]314", "\[Theta]315", "\[Theta]316"},
       {"\[Theta]320", "\[Theta]321", "\[Theta]322", "\[Theta]323", 
        "\[Theta]324", "\[Theta]325", "\[Theta]326"},
       {"\[Theta]330", "\[Theta]331", "\[Theta]332", "\[Theta]333", 
        "\[Theta]334", "\[Theta]335", "\[Theta]336"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
   Superscript["\[Theta]", 3], " = ", 
   MatrixForm[{{$CellContext`\[Theta]310, $CellContext`\[Theta]311, \
$CellContext`\[Theta]312, $CellContext`\[Theta]313, $CellContext`\[Theta]314, \
$CellContext`\[Theta]315, $CellContext`\[Theta]316}, \
{$CellContext`\[Theta]320, $CellContext`\[Theta]321, \
$CellContext`\[Theta]322, $CellContext`\[Theta]323, $CellContext`\[Theta]324, \
$CellContext`\[Theta]325, $CellContext`\[Theta]326}, \
{$CellContext`\[Theta]330, $CellContext`\[Theta]331, \
$CellContext`\[Theta]332, $CellContext`\[Theta]333, $CellContext`\[Theta]334, \
$CellContext`\[Theta]335, $CellContext`\[Theta]336}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.666326023730554*^9, 3.666347771046689*^9, {3.666352018562442*^9, 
   3.6663520451641626`*^9}, {3.6664377054416957`*^9, 3.6664377214171004`*^9}, 
   3.666437998218089*^9, 3.666439662422332*^9, 3.666439781080907*^9, 
   3.66643992314987*^9, 3.666440137555833*^9, 3.6665853568660555`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.65524`", ",", "1.16736`", ",", "3.69996`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.20181`"}], ",", 
       RowBox[{"-", "2.42601`"}], ",", 
       RowBox[{"-", "1.84163`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.34915`"}], ",", 
       RowBox[{"-", "2.57031`"}], ",", 
       RowBox[{"-", "1.60943`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.85131`"}], ",", "3.39521`", ",", "0.74772`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"1.80352`", ",", "0.1057`", ",", "1.68046`"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.933876`"}], ",", 
       RowBox[{"-", "1.361892`"}], ",", 
       RowBox[{"-", "2.13444`"}], ",", 
       RowBox[{"-", "0.158757`"}], ",", 
       RowBox[{"-", "2.51504`"}], ",", 
       RowBox[{"-", "0.652101`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.403622`"}], ",", 
       RowBox[{"-", "0.52875`"}], ",", 
       RowBox[{"-", "2.913613`"}], ",", 
       RowBox[{"-", "0.886336`"}], ",", 
       RowBox[{"-", "1.01536`"}], ",", 
       RowBox[{"-", "2.560445`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.146044`"}], ",", "0.16233`", ",", 
       RowBox[{"-", "2.625194`"}], ",", "1.021644`", ",", 
       RowBox[{"-", "3.260315`"}], ",", 
       RowBox[{"-", "0.640995`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.628634`"}], ",", 
       RowBox[{"-", "0.511528`"}], ",", 
       RowBox[{"-", "4.932531`"}], ",", 
       RowBox[{"-", "0.141512`"}], ",", 
       RowBox[{"-", "4.251957`"}], ",", 
       RowBox[{"-", "0.314281`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.137063`"}], ",", "0.089539`", ",", 
       RowBox[{"-", "1.858182`"}], ",", 
       RowBox[{"-", "3.27708`"}], ",", 
       RowBox[{"-", "1.436328`"}], ",", 
       RowBox[{"-", "6.152028`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.840831`"}], ",", 
       RowBox[{"-", "0.159956`"}], ",", 
       RowBox[{"-", "2.284905`"}], ",", 
       RowBox[{"-", "2.6949`"}], ",", "0.683331`", ",", 
       RowBox[{"-", "3.29115`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1448159`", ",", 
       RowBox[{"-", "4.8905595`"}], ",", "2.3063216`", ",", 
       RowBox[{"-", "0.8244603`"}], ",", "1.6471982`", ",", 
       RowBox[{"-", "0.7640889`"}], ",", 
       RowBox[{"-", "3.2790679`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.5387838`"}], ",", 
       RowBox[{"-", "1.838826`"}], ",", 
       RowBox[{"-", "0.3042447`"}], ",", "1.2044668`", ",", "2.199791`", ",", 
       "0.7212458`", ",", 
       RowBox[{"-", "0.3179984`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0087483`", ",", 
       RowBox[{"-", "2.0385048`"}], ",", 
       RowBox[{"-", "0.5422693`"}], ",", 
       RowBox[{"-", "2.1814523`"}], ",", 
       RowBox[{"-", "0.7490863`"}], ",", 
       RowBox[{"-", "2.8278831`"}], ",", 
       RowBox[{"-", "2.010206`"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6662841046755877`*^9, 3.666284514432024*^9, 3.6663207036810846`*^9, 
   3.6663219573873262`*^9, 3.6663220525366716`*^9, 3.6663226394531975`*^9, 
   3.666324557249067*^9, 3.6663257503743916`*^9, 3.666326023728554*^9, 
   3.6663477710436883`*^9, {3.6663520185414333`*^9, 3.6663520451431537`*^9}, {
   3.6664377054046803`*^9, 3.6664377214150996`*^9}, 3.6664379982140827`*^9, 
   3.666439662419331*^9, 3.6664397810779076`*^9, 3.666439923129861*^9, 
   3.6664401375518312`*^9, 3.666585356870056*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Theta]110", "\[Rule]", "1.65524`"}], ",", 
   RowBox[{"\[Theta]111", "\[Rule]", "1.16736`"}], ",", 
   RowBox[{"\[Theta]112", "\[Rule]", "3.69996`"}], ",", 
   RowBox[{"\[Theta]120", "\[Rule]", 
    RowBox[{"-", "2.20181`"}]}], ",", 
   RowBox[{"\[Theta]121", "\[Rule]", 
    RowBox[{"-", "2.42601`"}]}], ",", 
   RowBox[{"\[Theta]122", "\[Rule]", 
    RowBox[{"-", "1.84163`"}]}], ",", 
   RowBox[{"\[Theta]130", "\[Rule]", 
    RowBox[{"-", "4.34915`"}]}], ",", 
   RowBox[{"\[Theta]131", "\[Rule]", 
    RowBox[{"-", "2.57031`"}]}], ",", 
   RowBox[{"\[Theta]132", "\[Rule]", 
    RowBox[{"-", "1.60943`"}]}], ",", 
   RowBox[{"\[Theta]140", "\[Rule]", 
    RowBox[{"-", "1.85131`"}]}], ",", 
   RowBox[{"\[Theta]141", "\[Rule]", "3.39521`"}], ",", 
   RowBox[{"\[Theta]142", "\[Rule]", "0.74772`"}], ",", 
   RowBox[{"\[Theta]150", "\[Rule]", "1.80352`"}], ",", 
   RowBox[{"\[Theta]151", "\[Rule]", "0.1057`"}], ",", 
   RowBox[{"\[Theta]152", "\[Rule]", "1.68046`"}], ",", 
   RowBox[{"\[Theta]210", "\[Rule]", 
    RowBox[{"-", "2.933876`"}]}], ",", 
   RowBox[{"\[Theta]211", "\[Rule]", 
    RowBox[{"-", "1.361892`"}]}], ",", 
   RowBox[{"\[Theta]212", "\[Rule]", 
    RowBox[{"-", "2.13444`"}]}], ",", 
   RowBox[{"\[Theta]213", "\[Rule]", 
    RowBox[{"-", "0.158757`"}]}], ",", 
   RowBox[{"\[Theta]214", "\[Rule]", 
    RowBox[{"-", "2.51504`"}]}], ",", 
   RowBox[{"\[Theta]215", "\[Rule]", 
    RowBox[{"-", "0.652101`"}]}], ",", 
   RowBox[{"\[Theta]220", "\[Rule]", 
    RowBox[{"-", "3.403622`"}]}], ",", 
   RowBox[{"\[Theta]221", "\[Rule]", 
    RowBox[{"-", "0.52875`"}]}], ",", 
   RowBox[{"\[Theta]222", "\[Rule]", 
    RowBox[{"-", "2.913613`"}]}], ",", 
   RowBox[{"\[Theta]223", "\[Rule]", 
    RowBox[{"-", "0.886336`"}]}], ",", 
   RowBox[{"\[Theta]224", "\[Rule]", 
    RowBox[{"-", "1.01536`"}]}], ",", 
   RowBox[{"\[Theta]225", "\[Rule]", 
    RowBox[{"-", "2.560445`"}]}], ",", 
   RowBox[{"\[Theta]230", "\[Rule]", 
    RowBox[{"-", "1.146044`"}]}], ",", 
   RowBox[{"\[Theta]231", "\[Rule]", "0.16233`"}], ",", 
   RowBox[{"\[Theta]232", "\[Rule]", 
    RowBox[{"-", "2.625194`"}]}], ",", 
   RowBox[{"\[Theta]233", "\[Rule]", "1.021644`"}], ",", 
   RowBox[{"\[Theta]234", "\[Rule]", 
    RowBox[{"-", "3.260315`"}]}], ",", 
   RowBox[{"\[Theta]235", "\[Rule]", 
    RowBox[{"-", "0.640995`"}]}], ",", 
   RowBox[{"\[Theta]240", "\[Rule]", 
    RowBox[{"-", "0.628634`"}]}], ",", 
   RowBox[{"\[Theta]241", "\[Rule]", 
    RowBox[{"-", "0.511528`"}]}], ",", 
   RowBox[{"\[Theta]242", "\[Rule]", 
    RowBox[{"-", "4.932531`"}]}], ",", 
   RowBox[{"\[Theta]243", "\[Rule]", 
    RowBox[{"-", "0.141512`"}]}], ",", 
   RowBox[{"\[Theta]244", "\[Rule]", 
    RowBox[{"-", "4.251957`"}]}], ",", 
   RowBox[{"\[Theta]245", "\[Rule]", 
    RowBox[{"-", "0.314281`"}]}], ",", 
   RowBox[{"\[Theta]250", "\[Rule]", 
    RowBox[{"-", "0.137063`"}]}], ",", 
   RowBox[{"\[Theta]251", "\[Rule]", "0.089539`"}], ",", 
   RowBox[{"\[Theta]252", "\[Rule]", 
    RowBox[{"-", "1.858182`"}]}], ",", 
   RowBox[{"\[Theta]253", "\[Rule]", 
    RowBox[{"-", "3.27708`"}]}], ",", 
   RowBox[{"\[Theta]254", "\[Rule]", 
    RowBox[{"-", "1.436328`"}]}], ",", 
   RowBox[{"\[Theta]255", "\[Rule]", 
    RowBox[{"-", "6.152028`"}]}], ",", 
   RowBox[{"\[Theta]260", "\[Rule]", 
    RowBox[{"-", "3.840831`"}]}], ",", 
   RowBox[{"\[Theta]261", "\[Rule]", 
    RowBox[{"-", "0.159956`"}]}], ",", 
   RowBox[{"\[Theta]262", "\[Rule]", 
    RowBox[{"-", "2.284905`"}]}], ",", 
   RowBox[{"\[Theta]263", "\[Rule]", 
    RowBox[{"-", "2.6949`"}]}], ",", 
   RowBox[{"\[Theta]264", "\[Rule]", "0.683331`"}], ",", 
   RowBox[{"\[Theta]265", "\[Rule]", 
    RowBox[{"-", "3.29115`"}]}], ",", 
   RowBox[{"\[Theta]310", "\[Rule]", "0.1448159`"}], ",", 
   RowBox[{"\[Theta]311", "\[Rule]", 
    RowBox[{"-", "4.8905595`"}]}], ",", 
   RowBox[{"\[Theta]312", "\[Rule]", "2.3063216`"}], ",", 
   RowBox[{"\[Theta]313", "\[Rule]", 
    RowBox[{"-", "0.8244603`"}]}], ",", 
   RowBox[{"\[Theta]314", "\[Rule]", "1.6471982`"}], ",", 
   RowBox[{"\[Theta]315", "\[Rule]", 
    RowBox[{"-", "0.7640889`"}]}], ",", 
   RowBox[{"\[Theta]316", "\[Rule]", 
    RowBox[{"-", "3.2790679`"}]}], ",", 
   RowBox[{"\[Theta]320", "\[Rule]", 
    RowBox[{"-", "2.5387838`"}]}], ",", 
   RowBox[{"\[Theta]321", "\[Rule]", 
    RowBox[{"-", "1.838826`"}]}], ",", 
   RowBox[{"\[Theta]322", "\[Rule]", 
    RowBox[{"-", "0.3042447`"}]}], ",", 
   RowBox[{"\[Theta]323", "\[Rule]", "1.2044668`"}], ",", 
   RowBox[{"\[Theta]324", "\[Rule]", "2.199791`"}], ",", 
   RowBox[{"\[Theta]325", "\[Rule]", "0.7212458`"}], ",", 
   RowBox[{"\[Theta]326", "\[Rule]", 
    RowBox[{"-", "0.3179984`"}]}], ",", 
   RowBox[{"\[Theta]330", "\[Rule]", "0.0087483`"}], ",", 
   RowBox[{"\[Theta]331", "\[Rule]", 
    RowBox[{"-", "2.0385048`"}]}], ",", 
   RowBox[{"\[Theta]332", "\[Rule]", 
    RowBox[{"-", "0.5422693`"}]}], ",", 
   RowBox[{"\[Theta]333", "\[Rule]", 
    RowBox[{"-", "2.1814523`"}]}], ",", 
   RowBox[{"\[Theta]334", "\[Rule]", 
    RowBox[{"-", "0.7490863`"}]}], ",", 
   RowBox[{"\[Theta]335", "\[Rule]", 
    RowBox[{"-", "2.8278831`"}]}], ",", 
   RowBox[{"\[Theta]336", "\[Rule]", 
    RowBox[{"-", "2.010206`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6662841046755877`*^9, 3.666284514432024*^9, 3.6663207036810846`*^9, 
   3.6663219573873262`*^9, 3.6663220525366716`*^9, 3.6663226394531975`*^9, 
   3.666324557249067*^9, 3.6663257503743916`*^9, 3.666326023728554*^9, 
   3.6663477710436883`*^9, {3.6663520185414333`*^9, 3.6663520451431537`*^9}, {
   3.6664377054046803`*^9, 3.6664377214150996`*^9}, 3.6664379982140827`*^9, 
   3.666439662419331*^9, 3.6664397810779076`*^9, 3.666439923129861*^9, 
   3.6664401375518312`*^9, 3.66658535692408*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", " ", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", " ", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputSize", " ", "=", " ", 
   RowBox[{"Length", "[", "X", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6663261632467785`*^9, 3.66632621737059*^9}, {
  3.66632629086821*^9, 3.666326291355406*^9}, {3.666335637014693*^9, 
  3.6663356704941845`*^9}, {3.6663454214948225`*^9, 3.666345453559745*^9}, {
  3.666347176881241*^9, 3.666347176985283*^9}, {3.6663473039634542`*^9, 
  3.666347342899146*^9}, {3.666347437461254*^9, 3.6663474377013507`*^9}, {
  3.666347510917857*^9, 3.6663475396304283`*^9}, {3.6663476160482244`*^9, 
  3.666347629183518*^9}, {3.666347680465184*^9, 3.666347689928998*^9}, {
  3.666347775794602*^9, 3.666347784050929*^9}, {3.666438028154084*^9, 
  3.666438035521038*^9}, {3.6665853750713673`*^9, 3.666585403831918*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"A", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<a\>\"", "<>", 
          RowBox[{"ToString", "[", "a", "]"}], "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", 
          RowBox[{"ToString", "[", "j", "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", "1", ",", " ", 
          RowBox[{"archit", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "archit", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", " ", "1", ",", " ", 
      RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Z", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<z\>\"", "<>", 
          RowBox[{"ToString", "[", "a", "]"}], "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", 
          RowBox[{"ToString", "[", "j", "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", "1", ",", " ", 
          RowBox[{"archit", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "archit", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", " ", "1", ",", " ", 
      RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6662909105658617`*^9, 3.666291055416147*^9}, {
  3.666291150679596*^9, 3.666291150997614*^9}, {3.666291866424534*^9, 
  3.666291866507539*^9}, {3.6663207111711025`*^9, 3.6663207193223877`*^9}, {
  3.6663231761905017`*^9, 3.666323182182917*^9}, {3.6663263020537176`*^9, 
  3.6663263993029084`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a111", ",", "a112"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a121", ",", "a122", ",", "a123", ",", "a124", ",", "a125"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "a131", ",", "a132", ",", "a133", ",", "a134", ",", "a135", ",", 
       "a136"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a141", ",", "a142", ",", "a143"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a211", ",", "a212"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a221", ",", "a222", ",", "a223", ",", "a224", ",", "a225"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "a231", ",", "a232", ",", "a233", ",", "a234", ",", "a235", ",", 
       "a236"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a241", ",", "a242", ",", "a243"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a311", ",", "a312"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a321", ",", "a322", ",", "a323", ",", "a324", ",", "a325"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "a331", ",", "a332", ",", "a333", ",", "a334", ",", "a335", ",", 
       "a336"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a341", ",", "a342", ",", "a343"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.666291007485406*^9, 3.666291020185132*^9}, 
   3.666291056074185*^9, 3.666291151783659*^9, 3.6662918670105677`*^9, 
   3.666320720018668*^9, 3.666321959684252*^9, 3.6663220540132666`*^9, 
   3.666322641847163*^9, 3.66632456219506*^9, 3.6663257607165594`*^9, 
   3.666326043874673*^9, 3.6663263517257357`*^9, {3.666326395607419*^9, 
   3.6663263996280403`*^9}, 3.666345455128377*^9, 3.6663455342432604`*^9, 
   3.6663470198969765`*^9, 3.6663471783788443`*^9, 3.6663473145407176`*^9, 
   3.6663473447749023`*^9, 3.6663474392329683`*^9, {3.6663475155277147`*^9, 
   3.666347541336116*^9}, 3.6663476311853247`*^9, 3.666347693619486*^9, 
   3.6663477889479027`*^9, 3.666352047540119*^9, 3.6664377287030215`*^9, 
   3.6664380007701054`*^9, 3.666438037002633*^9, 3.6664397828486166`*^9, 
   3.6664399250746403`*^9, 3.6664401411652803`*^9, 3.6665854120012016`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"z111", ",", "z112"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z121", ",", "z122", ",", "z123", ",", "z124", ",", "z125"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "z131", ",", "z132", ",", "z133", ",", "z134", ",", "z135", ",", 
       "z136"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z141", ",", "z142", ",", "z143"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"z211", ",", "z212"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z221", ",", "z222", ",", "z223", ",", "z224", ",", "z225"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "z231", ",", "z232", ",", "z233", ",", "z234", ",", "z235", ",", 
       "z236"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z241", ",", "z242", ",", "z243"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"z311", ",", "z312"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z321", ",", "z322", ",", "z323", ",", "z324", ",", "z325"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "z331", ",", "z332", ",", "z333", ",", "z334", ",", "z335", ",", 
       "z336"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z341", ",", "z342", ",", "z343"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.666291007485406*^9, 3.666291020185132*^9}, 
   3.666291056074185*^9, 3.666291151783659*^9, 3.6662918670105677`*^9, 
   3.666320720018668*^9, 3.666321959684252*^9, 3.6663220540132666`*^9, 
   3.666322641847163*^9, 3.66632456219506*^9, 3.6663257607165594`*^9, 
   3.666326043874673*^9, 3.6663263517257357`*^9, {3.666326395607419*^9, 
   3.6663263996280403`*^9}, 3.666345455128377*^9, 3.6663455342432604`*^9, 
   3.6663470198969765`*^9, 3.6663471783788443`*^9, 3.6663473145407176`*^9, 
   3.6663473447749023`*^9, 3.6663474392329683`*^9, {3.6663475155277147`*^9, 
   3.666347541336116*^9}, 3.6663476311853247`*^9, 3.666347693619486*^9, 
   3.6663477889479027`*^9, 3.666352047540119*^9, 3.6664377287030215`*^9, 
   3.6664380007701054`*^9, 3.666438037002633*^9, 3.6664397828486166`*^9, 
   3.6664399250746403`*^9, 3.6664401411652803`*^9, 3.666585412003199*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", "x_", "]"}], "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "x"}]]}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.666284545988829*^9, 3.6662845862261305`*^9}, 
   3.666324569659067*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ruleA", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"A", "[", 
             RowBox[{"[", "a", "]"}], "]"}], "[", 
            RowBox[{"[", "l", "]"}], "]"}], "[", 
           RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"l", "\[Equal]", "1"}], ",", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", "a", "]"}], "]"}], "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", 
            RowBox[{"h", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Z", "[", 
                RowBox[{"[", "a", "]"}], "]"}], "[", 
               RowBox[{"[", "l", "]"}], "]"}], "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", " ", "1", ",", " ", 
           RowBox[{"archit", "[", 
            RowBox[{"[", "l", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "1", ",", " ", 
         RowBox[{"Length", "[", "archit", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "1", ",", " ", "inputSize"}], "}"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ruleZ", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Z", "[", 
             RowBox[{"[", "a", "]"}], "]"}], "[", 
            RowBox[{"[", "l", "]"}], "]"}], "[", 
           RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Theta]", "[", 
             RowBox[{"[", 
              RowBox[{"l", "-", "1"}], "]"}], "]"}], "[", 
            RowBox[{"[", "k", "]"}], "]"}], " ", ".", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "1", "}"}], ",", " ", 
             RowBox[{
              RowBox[{"A", "[", 
               RowBox[{"[", "a", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"l", "-", "1"}], "]"}], "]"}]}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", " ", "1", ",", " ", 
           RowBox[{"archit", "[", 
            RowBox[{"[", "l", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "2", ",", " ", 
         RowBox[{"Length", "[", "archit", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "1", ",", " ", "inputSize"}], "}"}]}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.666285763870488*^9, 3.6662857838046284`*^9}, {
   3.6662863647198544`*^9, 3.66628641481472*^9}, {3.666286450172742*^9, 
   3.6662865872455826`*^9}, {3.666286629093976*^9, 3.6662866320011425`*^9}, 
   3.666286684564149*^9, {3.666286722315308*^9, 3.666286878005213*^9}, {
   3.6662869129682126`*^9, 3.666286970039477*^9}, {3.666287005387499*^9, 
   3.6662870955966587`*^9}, {3.666287137726068*^9, 3.6662871825716333`*^9}, {
   3.6662872220408907`*^9, 3.6662872383328223`*^9}, {3.6662874587524295`*^9, 
   3.666287700128236*^9}, {3.6662877732274165`*^9, 3.6662877797647905`*^9}, {
   3.6662878367290487`*^9, 3.6662878518549137`*^9}, {3.6662881033723*^9, 
   3.6662881590974874`*^9}, {3.666290171884612*^9, 3.6662903249963694`*^9}, {
   3.666291186619652*^9, 3.6662911993133774`*^9}, {3.6662916174822955`*^9, 
   3.6662916730584745`*^9}, 3.666292034966174*^9, {3.6663207501087947`*^9, 
   3.6663207594615636`*^9}, {3.6663220428477664`*^9, 3.666322043206911*^9}, {
   3.666323140232011*^9, 3.6663231403360524`*^9}, {3.6663231969368625`*^9, 
   3.666323204729003*^9}, {3.666324356746264*^9, 3.6663243859060154`*^9}, {
   3.6663355776157546`*^9, 3.6663356051688585`*^9}, {3.666335679776925*^9, 
   3.6663357453383465`*^9}, {3.666335776155766*^9, 3.6663357774772987`*^9}, {
   3.666345479267105*^9, 3.6663454852985353`*^9}, {3.666345609668657*^9, 
   3.6663457137666073`*^9}, {3.6663458206796937`*^9, 
   3.6663458212079067`*^9}, {3.666345856281041*^9, 3.6663459327778687`*^9}, {
   3.6663459798918557`*^9, 3.6663459806601653`*^9}, {3.6663460228531694`*^9, 
   3.666346089250928*^9}, {3.666346389367874*^9, 3.666346389831061*^9}, {
   3.666346866816285*^9, 3.6663469451528544`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a111", "\[Rule]", "3"}], ",", 
   RowBox[{"a112", "\[Rule]", "2"}], ",", 
   RowBox[{"a121", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z121"}]]}]]}], ",", 
   RowBox[{"a122", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z122"}]]}]]}], ",", 
   RowBox[{"a123", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z123"}]]}]]}], ",", 
   RowBox[{"a124", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z124"}]]}]]}], ",", 
   RowBox[{"a125", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z125"}]]}]]}], ",", 
   RowBox[{"a131", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z131"}]]}]]}], ",", 
   RowBox[{"a132", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z132"}]]}]]}], ",", 
   RowBox[{"a133", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z133"}]]}]]}], ",", 
   RowBox[{"a134", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z134"}]]}]]}], ",", 
   RowBox[{"a135", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z135"}]]}]]}], ",", 
   RowBox[{"a136", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z136"}]]}]]}], ",", 
   RowBox[{"a141", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z141"}]]}]]}], ",", 
   RowBox[{"a142", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z142"}]]}]]}], ",", 
   RowBox[{"a143", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z143"}]]}]]}], ",", 
   RowBox[{"a211", "\[Rule]", "1"}], ",", 
   RowBox[{"a212", "\[Rule]", "0"}], ",", 
   RowBox[{"a221", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z221"}]]}]]}], ",", 
   RowBox[{"a222", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z222"}]]}]]}], ",", 
   RowBox[{"a223", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z223"}]]}]]}], ",", 
   RowBox[{"a224", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z224"}]]}]]}], ",", 
   RowBox[{"a225", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z225"}]]}]]}], ",", 
   RowBox[{"a231", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z231"}]]}]]}], ",", 
   RowBox[{"a232", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z232"}]]}]]}], ",", 
   RowBox[{"a233", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z233"}]]}]]}], ",", 
   RowBox[{"a234", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z234"}]]}]]}], ",", 
   RowBox[{"a235", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z235"}]]}]]}], ",", 
   RowBox[{"a236", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z236"}]]}]]}], ",", 
   RowBox[{"a241", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z241"}]]}]]}], ",", 
   RowBox[{"a242", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z242"}]]}]]}], ",", 
   RowBox[{"a243", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z243"}]]}]]}], ",", 
   RowBox[{"a311", "\[Rule]", 
    RowBox[{"-", "2"}]}], ",", 
   RowBox[{"a312", "\[Rule]", "1"}], ",", 
   RowBox[{"a321", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z321"}]]}]]}], ",", 
   RowBox[{"a322", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z322"}]]}]]}], ",", 
   RowBox[{"a323", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z323"}]]}]]}], ",", 
   RowBox[{"a324", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z324"}]]}]]}], ",", 
   RowBox[{"a325", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z325"}]]}]]}], ",", 
   RowBox[{"a331", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z331"}]]}]]}], ",", 
   RowBox[{"a332", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z332"}]]}]]}], ",", 
   RowBox[{"a333", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z333"}]]}]]}], ",", 
   RowBox[{"a334", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z334"}]]}]]}], ",", 
   RowBox[{"a335", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z335"}]]}]]}], ",", 
   RowBox[{"a336", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z336"}]]}]]}], ",", 
   RowBox[{"a341", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z341"}]]}]]}], ",", 
   RowBox[{"a342", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z342"}]]}]]}], ",", 
   RowBox[{"a343", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z343"}]]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.666291673985527*^9, 3.666291870054742*^9, 3.66629203611524*^9, 
   3.666320760104823*^9, 3.666321966592036*^9, {3.666322044238327*^9, 
   3.666322055865013*^9}, 3.6663226434488087`*^9, 3.6663231435533495`*^9, 
   3.6663232052922316`*^9, {3.666324362411548*^9, 3.6663243863021755`*^9}, {
   3.666324565639448*^9, 3.666324570844546*^9}, 3.666325765240383*^9, 
   3.6663356074637837`*^9, 3.6663357470150223`*^9, 3.666335777788424*^9, 
   3.6663454588198647`*^9, 3.666345714236799*^9, 3.666345873925152*^9, 
   3.6663460922951546`*^9, 3.6663463905243406`*^9, {3.6663469332030396`*^9, 
   3.6663469460932336`*^9}, 3.6663470212645283`*^9, 3.666347180206581*^9, 
   3.6663473158792567`*^9, 3.6663473462655025`*^9, 3.666347441289798*^9, {
   3.6663475171543713`*^9, 3.666347542657648*^9}, 3.666347634355604*^9, 
   3.6663476950700703`*^9, 3.66634779097472*^9, 3.666352049258812*^9, 
   3.66643774827387*^9, {3.66643801609525*^9, 3.6664380381090765`*^9}, 
   3.6664397840912285`*^9, 3.666439926324141*^9, 3.6664401423597603`*^9, 
   3.6665854137388973`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"z121", "\[Rule]", 
    RowBox[{"\[Theta]110", "+", 
     RowBox[{"a111", " ", "\[Theta]111"}], "+", 
     RowBox[{"a112", " ", "\[Theta]112"}]}]}], ",", 
   RowBox[{"z122", "\[Rule]", 
    RowBox[{"\[Theta]120", "+", 
     RowBox[{"a111", " ", "\[Theta]121"}], "+", 
     RowBox[{"a112", " ", "\[Theta]122"}]}]}], ",", 
   RowBox[{"z123", "\[Rule]", 
    RowBox[{"\[Theta]130", "+", 
     RowBox[{"a111", " ", "\[Theta]131"}], "+", 
     RowBox[{"a112", " ", "\[Theta]132"}]}]}], ",", 
   RowBox[{"z124", "\[Rule]", 
    RowBox[{"\[Theta]140", "+", 
     RowBox[{"a111", " ", "\[Theta]141"}], "+", 
     RowBox[{"a112", " ", "\[Theta]142"}]}]}], ",", 
   RowBox[{"z125", "\[Rule]", 
    RowBox[{"\[Theta]150", "+", 
     RowBox[{"a111", " ", "\[Theta]151"}], "+", 
     RowBox[{"a112", " ", "\[Theta]152"}]}]}], ",", 
   RowBox[{"z131", "\[Rule]", 
    RowBox[{"\[Theta]210", "+", 
     RowBox[{"a121", " ", "\[Theta]211"}], "+", 
     RowBox[{"a122", " ", "\[Theta]212"}], "+", 
     RowBox[{"a123", " ", "\[Theta]213"}], "+", 
     RowBox[{"a124", " ", "\[Theta]214"}], "+", 
     RowBox[{"a125", " ", "\[Theta]215"}]}]}], ",", 
   RowBox[{"z132", "\[Rule]", 
    RowBox[{"\[Theta]220", "+", 
     RowBox[{"a121", " ", "\[Theta]221"}], "+", 
     RowBox[{"a122", " ", "\[Theta]222"}], "+", 
     RowBox[{"a123", " ", "\[Theta]223"}], "+", 
     RowBox[{"a124", " ", "\[Theta]224"}], "+", 
     RowBox[{"a125", " ", "\[Theta]225"}]}]}], ",", 
   RowBox[{"z133", "\[Rule]", 
    RowBox[{"\[Theta]230", "+", 
     RowBox[{"a121", " ", "\[Theta]231"}], "+", 
     RowBox[{"a122", " ", "\[Theta]232"}], "+", 
     RowBox[{"a123", " ", "\[Theta]233"}], "+", 
     RowBox[{"a124", " ", "\[Theta]234"}], "+", 
     RowBox[{"a125", " ", "\[Theta]235"}]}]}], ",", 
   RowBox[{"z134", "\[Rule]", 
    RowBox[{"\[Theta]240", "+", 
     RowBox[{"a121", " ", "\[Theta]241"}], "+", 
     RowBox[{"a122", " ", "\[Theta]242"}], "+", 
     RowBox[{"a123", " ", "\[Theta]243"}], "+", 
     RowBox[{"a124", " ", "\[Theta]244"}], "+", 
     RowBox[{"a125", " ", "\[Theta]245"}]}]}], ",", 
   RowBox[{"z135", "\[Rule]", 
    RowBox[{"\[Theta]250", "+", 
     RowBox[{"a121", " ", "\[Theta]251"}], "+", 
     RowBox[{"a122", " ", "\[Theta]252"}], "+", 
     RowBox[{"a123", " ", "\[Theta]253"}], "+", 
     RowBox[{"a124", " ", "\[Theta]254"}], "+", 
     RowBox[{"a125", " ", "\[Theta]255"}]}]}], ",", 
   RowBox[{"z136", "\[Rule]", 
    RowBox[{"\[Theta]260", "+", 
     RowBox[{"a121", " ", "\[Theta]261"}], "+", 
     RowBox[{"a122", " ", "\[Theta]262"}], "+", 
     RowBox[{"a123", " ", "\[Theta]263"}], "+", 
     RowBox[{"a124", " ", "\[Theta]264"}], "+", 
     RowBox[{"a125", " ", "\[Theta]265"}]}]}], ",", 
   RowBox[{"z141", "\[Rule]", 
    RowBox[{"\[Theta]310", "+", 
     RowBox[{"a131", " ", "\[Theta]311"}], "+", 
     RowBox[{"a132", " ", "\[Theta]312"}], "+", 
     RowBox[{"a133", " ", "\[Theta]313"}], "+", 
     RowBox[{"a134", " ", "\[Theta]314"}], "+", 
     RowBox[{"a135", " ", "\[Theta]315"}], "+", 
     RowBox[{"a136", " ", "\[Theta]316"}]}]}], ",", 
   RowBox[{"z142", "\[Rule]", 
    RowBox[{"\[Theta]320", "+", 
     RowBox[{"a131", " ", "\[Theta]321"}], "+", 
     RowBox[{"a132", " ", "\[Theta]322"}], "+", 
     RowBox[{"a133", " ", "\[Theta]323"}], "+", 
     RowBox[{"a134", " ", "\[Theta]324"}], "+", 
     RowBox[{"a135", " ", "\[Theta]325"}], "+", 
     RowBox[{"a136", " ", "\[Theta]326"}]}]}], ",", 
   RowBox[{"z143", "\[Rule]", 
    RowBox[{"\[Theta]330", "+", 
     RowBox[{"a131", " ", "\[Theta]331"}], "+", 
     RowBox[{"a132", " ", "\[Theta]332"}], "+", 
     RowBox[{"a133", " ", "\[Theta]333"}], "+", 
     RowBox[{"a134", " ", "\[Theta]334"}], "+", 
     RowBox[{"a135", " ", "\[Theta]335"}], "+", 
     RowBox[{"a136", " ", "\[Theta]336"}]}]}], ",", 
   RowBox[{"z221", "\[Rule]", 
    RowBox[{"\[Theta]110", "+", 
     RowBox[{"a211", " ", "\[Theta]111"}], "+", 
     RowBox[{"a212", " ", "\[Theta]112"}]}]}], ",", 
   RowBox[{"z222", "\[Rule]", 
    RowBox[{"\[Theta]120", "+", 
     RowBox[{"a211", " ", "\[Theta]121"}], "+", 
     RowBox[{"a212", " ", "\[Theta]122"}]}]}], ",", 
   RowBox[{"z223", "\[Rule]", 
    RowBox[{"\[Theta]130", "+", 
     RowBox[{"a211", " ", "\[Theta]131"}], "+", 
     RowBox[{"a212", " ", "\[Theta]132"}]}]}], ",", 
   RowBox[{"z224", "\[Rule]", 
    RowBox[{"\[Theta]140", "+", 
     RowBox[{"a211", " ", "\[Theta]141"}], "+", 
     RowBox[{"a212", " ", "\[Theta]142"}]}]}], ",", 
   RowBox[{"z225", "\[Rule]", 
    RowBox[{"\[Theta]150", "+", 
     RowBox[{"a211", " ", "\[Theta]151"}], "+", 
     RowBox[{"a212", " ", "\[Theta]152"}]}]}], ",", 
   RowBox[{"z231", "\[Rule]", 
    RowBox[{"\[Theta]210", "+", 
     RowBox[{"a221", " ", "\[Theta]211"}], "+", 
     RowBox[{"a222", " ", "\[Theta]212"}], "+", 
     RowBox[{"a223", " ", "\[Theta]213"}], "+", 
     RowBox[{"a224", " ", "\[Theta]214"}], "+", 
     RowBox[{"a225", " ", "\[Theta]215"}]}]}], ",", 
   RowBox[{"z232", "\[Rule]", 
    RowBox[{"\[Theta]220", "+", 
     RowBox[{"a221", " ", "\[Theta]221"}], "+", 
     RowBox[{"a222", " ", "\[Theta]222"}], "+", 
     RowBox[{"a223", " ", "\[Theta]223"}], "+", 
     RowBox[{"a224", " ", "\[Theta]224"}], "+", 
     RowBox[{"a225", " ", "\[Theta]225"}]}]}], ",", 
   RowBox[{"z233", "\[Rule]", 
    RowBox[{"\[Theta]230", "+", 
     RowBox[{"a221", " ", "\[Theta]231"}], "+", 
     RowBox[{"a222", " ", "\[Theta]232"}], "+", 
     RowBox[{"a223", " ", "\[Theta]233"}], "+", 
     RowBox[{"a224", " ", "\[Theta]234"}], "+", 
     RowBox[{"a225", " ", "\[Theta]235"}]}]}], ",", 
   RowBox[{"z234", "\[Rule]", 
    RowBox[{"\[Theta]240", "+", 
     RowBox[{"a221", " ", "\[Theta]241"}], "+", 
     RowBox[{"a222", " ", "\[Theta]242"}], "+", 
     RowBox[{"a223", " ", "\[Theta]243"}], "+", 
     RowBox[{"a224", " ", "\[Theta]244"}], "+", 
     RowBox[{"a225", " ", "\[Theta]245"}]}]}], ",", 
   RowBox[{"z235", "\[Rule]", 
    RowBox[{"\[Theta]250", "+", 
     RowBox[{"a221", " ", "\[Theta]251"}], "+", 
     RowBox[{"a222", " ", "\[Theta]252"}], "+", 
     RowBox[{"a223", " ", "\[Theta]253"}], "+", 
     RowBox[{"a224", " ", "\[Theta]254"}], "+", 
     RowBox[{"a225", " ", "\[Theta]255"}]}]}], ",", 
   RowBox[{"z236", "\[Rule]", 
    RowBox[{"\[Theta]260", "+", 
     RowBox[{"a221", " ", "\[Theta]261"}], "+", 
     RowBox[{"a222", " ", "\[Theta]262"}], "+", 
     RowBox[{"a223", " ", "\[Theta]263"}], "+", 
     RowBox[{"a224", " ", "\[Theta]264"}], "+", 
     RowBox[{"a225", " ", "\[Theta]265"}]}]}], ",", 
   RowBox[{"z241", "\[Rule]", 
    RowBox[{"\[Theta]310", "+", 
     RowBox[{"a231", " ", "\[Theta]311"}], "+", 
     RowBox[{"a232", " ", "\[Theta]312"}], "+", 
     RowBox[{"a233", " ", "\[Theta]313"}], "+", 
     RowBox[{"a234", " ", "\[Theta]314"}], "+", 
     RowBox[{"a235", " ", "\[Theta]315"}], "+", 
     RowBox[{"a236", " ", "\[Theta]316"}]}]}], ",", 
   RowBox[{"z242", "\[Rule]", 
    RowBox[{"\[Theta]320", "+", 
     RowBox[{"a231", " ", "\[Theta]321"}], "+", 
     RowBox[{"a232", " ", "\[Theta]322"}], "+", 
     RowBox[{"a233", " ", "\[Theta]323"}], "+", 
     RowBox[{"a234", " ", "\[Theta]324"}], "+", 
     RowBox[{"a235", " ", "\[Theta]325"}], "+", 
     RowBox[{"a236", " ", "\[Theta]326"}]}]}], ",", 
   RowBox[{"z243", "\[Rule]", 
    RowBox[{"\[Theta]330", "+", 
     RowBox[{"a231", " ", "\[Theta]331"}], "+", 
     RowBox[{"a232", " ", "\[Theta]332"}], "+", 
     RowBox[{"a233", " ", "\[Theta]333"}], "+", 
     RowBox[{"a234", " ", "\[Theta]334"}], "+", 
     RowBox[{"a235", " ", "\[Theta]335"}], "+", 
     RowBox[{"a236", " ", "\[Theta]336"}]}]}], ",", 
   RowBox[{"z321", "\[Rule]", 
    RowBox[{"\[Theta]110", "+", 
     RowBox[{"a311", " ", "\[Theta]111"}], "+", 
     RowBox[{"a312", " ", "\[Theta]112"}]}]}], ",", 
   RowBox[{"z322", "\[Rule]", 
    RowBox[{"\[Theta]120", "+", 
     RowBox[{"a311", " ", "\[Theta]121"}], "+", 
     RowBox[{"a312", " ", "\[Theta]122"}]}]}], ",", 
   RowBox[{"z323", "\[Rule]", 
    RowBox[{"\[Theta]130", "+", 
     RowBox[{"a311", " ", "\[Theta]131"}], "+", 
     RowBox[{"a312", " ", "\[Theta]132"}]}]}], ",", 
   RowBox[{"z324", "\[Rule]", 
    RowBox[{"\[Theta]140", "+", 
     RowBox[{"a311", " ", "\[Theta]141"}], "+", 
     RowBox[{"a312", " ", "\[Theta]142"}]}]}], ",", 
   RowBox[{"z325", "\[Rule]", 
    RowBox[{"\[Theta]150", "+", 
     RowBox[{"a311", " ", "\[Theta]151"}], "+", 
     RowBox[{"a312", " ", "\[Theta]152"}]}]}], ",", 
   RowBox[{"z331", "\[Rule]", 
    RowBox[{"\[Theta]210", "+", 
     RowBox[{"a321", " ", "\[Theta]211"}], "+", 
     RowBox[{"a322", " ", "\[Theta]212"}], "+", 
     RowBox[{"a323", " ", "\[Theta]213"}], "+", 
     RowBox[{"a324", " ", "\[Theta]214"}], "+", 
     RowBox[{"a325", " ", "\[Theta]215"}]}]}], ",", 
   RowBox[{"z332", "\[Rule]", 
    RowBox[{"\[Theta]220", "+", 
     RowBox[{"a321", " ", "\[Theta]221"}], "+", 
     RowBox[{"a322", " ", "\[Theta]222"}], "+", 
     RowBox[{"a323", " ", "\[Theta]223"}], "+", 
     RowBox[{"a324", " ", "\[Theta]224"}], "+", 
     RowBox[{"a325", " ", "\[Theta]225"}]}]}], ",", 
   RowBox[{"z333", "\[Rule]", 
    RowBox[{"\[Theta]230", "+", 
     RowBox[{"a321", " ", "\[Theta]231"}], "+", 
     RowBox[{"a322", " ", "\[Theta]232"}], "+", 
     RowBox[{"a323", " ", "\[Theta]233"}], "+", 
     RowBox[{"a324", " ", "\[Theta]234"}], "+", 
     RowBox[{"a325", " ", "\[Theta]235"}]}]}], ",", 
   RowBox[{"z334", "\[Rule]", 
    RowBox[{"\[Theta]240", "+", 
     RowBox[{"a321", " ", "\[Theta]241"}], "+", 
     RowBox[{"a322", " ", "\[Theta]242"}], "+", 
     RowBox[{"a323", " ", "\[Theta]243"}], "+", 
     RowBox[{"a324", " ", "\[Theta]244"}], "+", 
     RowBox[{"a325", " ", "\[Theta]245"}]}]}], ",", 
   RowBox[{"z335", "\[Rule]", 
    RowBox[{"\[Theta]250", "+", 
     RowBox[{"a321", " ", "\[Theta]251"}], "+", 
     RowBox[{"a322", " ", "\[Theta]252"}], "+", 
     RowBox[{"a323", " ", "\[Theta]253"}], "+", 
     RowBox[{"a324", " ", "\[Theta]254"}], "+", 
     RowBox[{"a325", " ", "\[Theta]255"}]}]}], ",", 
   RowBox[{"z336", "\[Rule]", 
    RowBox[{"\[Theta]260", "+", 
     RowBox[{"a321", " ", "\[Theta]261"}], "+", 
     RowBox[{"a322", " ", "\[Theta]262"}], "+", 
     RowBox[{"a323", " ", "\[Theta]263"}], "+", 
     RowBox[{"a324", " ", "\[Theta]264"}], "+", 
     RowBox[{"a325", " ", "\[Theta]265"}]}]}], ",", 
   RowBox[{"z341", "\[Rule]", 
    RowBox[{"\[Theta]310", "+", 
     RowBox[{"a331", " ", "\[Theta]311"}], "+", 
     RowBox[{"a332", " ", "\[Theta]312"}], "+", 
     RowBox[{"a333", " ", "\[Theta]313"}], "+", 
     RowBox[{"a334", " ", "\[Theta]314"}], "+", 
     RowBox[{"a335", " ", "\[Theta]315"}], "+", 
     RowBox[{"a336", " ", "\[Theta]316"}]}]}], ",", 
   RowBox[{"z342", "\[Rule]", 
    RowBox[{"\[Theta]320", "+", 
     RowBox[{"a331", " ", "\[Theta]321"}], "+", 
     RowBox[{"a332", " ", "\[Theta]322"}], "+", 
     RowBox[{"a333", " ", "\[Theta]323"}], "+", 
     RowBox[{"a334", " ", "\[Theta]324"}], "+", 
     RowBox[{"a335", " ", "\[Theta]325"}], "+", 
     RowBox[{"a336", " ", "\[Theta]326"}]}]}], ",", 
   RowBox[{"z343", "\[Rule]", 
    RowBox[{"\[Theta]330", "+", 
     RowBox[{"a331", " ", "\[Theta]331"}], "+", 
     RowBox[{"a332", " ", "\[Theta]332"}], "+", 
     RowBox[{"a333", " ", "\[Theta]333"}], "+", 
     RowBox[{"a334", " ", "\[Theta]334"}], "+", 
     RowBox[{"a335", " ", "\[Theta]335"}], "+", 
     RowBox[{"a336", " ", "\[Theta]336"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.666291673985527*^9, 3.666291870054742*^9, 3.66629203611524*^9, 
   3.666320760104823*^9, 3.666321966592036*^9, {3.666322044238327*^9, 
   3.666322055865013*^9}, 3.6663226434488087`*^9, 3.6663231435533495`*^9, 
   3.6663232052922316`*^9, {3.666324362411548*^9, 3.6663243863021755`*^9}, {
   3.666324565639448*^9, 3.666324570844546*^9}, 3.666325765240383*^9, 
   3.6663356074637837`*^9, 3.6663357470150223`*^9, 3.666335777788424*^9, 
   3.6663454588198647`*^9, 3.666345714236799*^9, 3.666345873925152*^9, 
   3.6663460922951546`*^9, 3.6663463905243406`*^9, {3.6663469332030396`*^9, 
   3.6663469460932336`*^9}, 3.6663470212645283`*^9, 3.666347180206581*^9, 
   3.6663473158792567`*^9, 3.6663473462655025`*^9, 3.666347441289798*^9, {
   3.6663475171543713`*^9, 3.666347542657648*^9}, 3.666347634355604*^9, 
   3.6663476950700703`*^9, 3.66634779097472*^9, 3.666352049258812*^9, 
   3.66643774827387*^9, {3.66643801609525*^9, 3.6664380381090765`*^9}, 
   3.6664397840912285`*^9, 3.666439926324141*^9, 3.6664401423597603`*^9, 
   3.666585413771911*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"J", " ", "[", " ", 
   RowBox[{"Y_", ",", " ", "\[Theta]_", ",", "\[Lambda]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    FractionBox["1", "inputSize"], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            RowBox[{"Y", "[", 
             RowBox[{"[", "a", "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], 
          RowBox[{"Log", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"A", "[", 
              RowBox[{"[", "a", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"Y", "[", 
              RowBox[{"[", "a", "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ")"}], 
          RowBox[{"Log", "[", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{
              RowBox[{"A", "[", 
               RowBox[{"[", "a", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "1", ",", " ", 
          RowBox[{"Length", "[", 
           RowBox[{"Y", "[", 
            RowBox[{"[", "a", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", " ", "1", ",", " ", "inputSize"}], "}"}]}], "]"}]}], 
   "+", 
   RowBox[{
    FractionBox["\[Lambda]", 
     RowBox[{"2", "inputSize"}]], 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", "\[Theta]", "]"}], " ", "^", "2"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6662846018580246`*^9, 3.6662846160098343`*^9}, {
   3.6662846464095726`*^9, 3.666284671989036*^9}, {3.6662847109462643`*^9, 
   3.666284750665536*^9}, 3.666285190010665*^9, {3.6662852344242053`*^9, 
   3.6662852981698513`*^9}, {3.6662853442594876`*^9, 
   3.6662854565759115`*^9}, {3.666285527825987*^9, 3.6662855512033243`*^9}, {
   3.6662884796128197`*^9, 3.6662885504698725`*^9}, {3.6662900999264965`*^9, 
   3.6662901254439554`*^9}, {3.6662904702506776`*^9, 3.666290477553095*^9}, {
   3.666320847068869*^9, 3.666320908053446*^9}, {3.666340568097911*^9, 
   3.666340589278447*^9}, {3.666340666938744*^9, 3.6663406808033314`*^9}, {
   3.6663453596478987`*^9, 3.6663453678962226`*^9}, {3.6663471334657445`*^9, 
   3.666347142655448*^9}, {3.6664394750702143`*^9, 3.666439504559037*^9}, {
   3.666439619332055*^9, 3.6664396268880844`*^9}, {3.66643973489739*^9, 
   3.666439736041849*^9}, 3.666439965588884*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"costF", "=", 
  RowBox[{
   RowBox[{"J", "[", 
    RowBox[{"Y", ",", "\[Theta]", ",", " ", "\[Lambda]"}], "]"}], "//.", 
   RowBox[{"Join", "[", 
    RowBox[{"ruleA", ",", "ruleZ"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6662885551451397`*^9, 3.666288593838353*^9}, {
   3.666290129785204*^9, 3.6662901299552135`*^9}, {3.6662903709779997`*^9, 
   3.6662903738451633`*^9}, {3.666290407141068*^9, 3.666290438858882*^9}, 
   3.6662904922119336`*^9, {3.66632091798845*^9, 3.666320924868222*^9}, 
   3.6663220629018483`*^9, {3.6663220953259153`*^9, 3.6663220972857046`*^9}, {
   3.666340440517497*^9, 3.666340442469283*^9}, {3.666340709168763*^9, 
   3.6663407305853944`*^9}, {3.6663464412147684`*^9, 
   3.6663464509266825`*^9}, {3.666348157032241*^9, 3.666348159767343*^9}, {
   3.6663483618027625`*^9, 3.666348367002858*^9}, {3.666439750246544*^9, 
   3.666439751262952*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "6"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Theta]110", "2"], "+", 
     SuperscriptBox["\[Theta]111", "2"], "+", 
     SuperscriptBox["\[Theta]112", "2"], "+", 
     SuperscriptBox["\[Theta]120", "2"], "+", 
     SuperscriptBox["\[Theta]121", "2"], "+", 
     SuperscriptBox["\[Theta]122", "2"], "+", 
     SuperscriptBox["\[Theta]130", "2"], "+", 
     SuperscriptBox["\[Theta]131", "2"], "+", 
     SuperscriptBox["\[Theta]132", "2"], "+", 
     SuperscriptBox["\[Theta]140", "2"], "+", 
     SuperscriptBox["\[Theta]141", "2"], "+", 
     SuperscriptBox["\[Theta]142", "2"], "+", 
     SuperscriptBox["\[Theta]150", "2"], "+", 
     SuperscriptBox["\[Theta]151", "2"], "+", 
     SuperscriptBox["\[Theta]152", "2"], "+", 
     SuperscriptBox["\[Theta]210", "2"], "+", 
     SuperscriptBox["\[Theta]211", "2"], "+", 
     SuperscriptBox["\[Theta]212", "2"], "+", 
     SuperscriptBox["\[Theta]213", "2"], "+", 
     SuperscriptBox["\[Theta]214", "2"], "+", 
     SuperscriptBox["\[Theta]215", "2"], "+", 
     SuperscriptBox["\[Theta]220", "2"], "+", 
     SuperscriptBox["\[Theta]221", "2"], "+", 
     SuperscriptBox["\[Theta]222", "2"], "+", 
     SuperscriptBox["\[Theta]223", "2"], "+", 
     SuperscriptBox["\[Theta]224", "2"], "+", 
     SuperscriptBox["\[Theta]225", "2"], "+", 
     SuperscriptBox["\[Theta]230", "2"], "+", 
     SuperscriptBox["\[Theta]231", "2"], "+", 
     SuperscriptBox["\[Theta]232", "2"], "+", 
     SuperscriptBox["\[Theta]233", "2"], "+", 
     SuperscriptBox["\[Theta]234", "2"], "+", 
     SuperscriptBox["\[Theta]235", "2"], "+", 
     SuperscriptBox["\[Theta]240", "2"], "+", 
     SuperscriptBox["\[Theta]241", "2"], "+", 
     SuperscriptBox["\[Theta]242", "2"], "+", 
     SuperscriptBox["\[Theta]243", "2"], "+", 
     SuperscriptBox["\[Theta]244", "2"], "+", 
     SuperscriptBox["\[Theta]245", "2"], "+", 
     SuperscriptBox["\[Theta]250", "2"], "+", 
     SuperscriptBox["\[Theta]251", "2"], "+", 
     SuperscriptBox["\[Theta]252", "2"], "+", 
     SuperscriptBox["\[Theta]253", "2"], "+", 
     SuperscriptBox["\[Theta]254", "2"], "+", 
     SuperscriptBox["\[Theta]255", "2"], "+", 
     SuperscriptBox["\[Theta]260", "2"], "+", 
     SuperscriptBox["\[Theta]261", "2"], "+", 
     SuperscriptBox["\[Theta]262", "2"], "+", 
     SuperscriptBox["\[Theta]263", "2"], "+", 
     SuperscriptBox["\[Theta]264", "2"], "+", 
     SuperscriptBox["\[Theta]265", "2"], "+", 
     SuperscriptBox["\[Theta]310", "2"], "+", 
     SuperscriptBox["\[Theta]311", "2"], "+", 
     SuperscriptBox["\[Theta]312", "2"], "+", 
     SuperscriptBox["\[Theta]313", "2"], "+", 
     SuperscriptBox["\[Theta]314", "2"], "+", 
     SuperscriptBox["\[Theta]315", "2"], "+", 
     SuperscriptBox["\[Theta]316", "2"], "+", 
     SuperscriptBox["\[Theta]320", "2"], "+", 
     SuperscriptBox["\[Theta]321", "2"], "+", 
     SuperscriptBox["\[Theta]322", "2"], "+", 
     SuperscriptBox["\[Theta]323", "2"], "+", 
     SuperscriptBox["\[Theta]324", "2"], "+", 
     SuperscriptBox["\[Theta]325", "2"], "+", 
     SuperscriptBox["\[Theta]326", "2"], "+", 
     SuperscriptBox["\[Theta]330", "2"], "+", 
     SuperscriptBox["\[Theta]331", "2"], "+", 
     SuperscriptBox["\[Theta]332", "2"], "+", 
     SuperscriptBox["\[Theta]333", "2"], "+", 
     SuperscriptBox["\[Theta]334", "2"], "+", 
     SuperscriptBox["\[Theta]335", "2"], "+", 
     SuperscriptBox["\[Theta]336", "2"]}], ")"}], " ", "\[Lambda]"}], "+", 
  RowBox[{
   FractionBox["1", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]310"}], "-", 
            FractionBox["\[Theta]311", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]210"}], "-", 
                FractionBox["\[Theta]211", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", 
                    RowBox[{"3", " ", "\[Theta]111"}], "-", 
                    RowBox[{"2", " ", "\[Theta]112"}]}]]}]], "-", 
                FractionBox["\[Theta]212", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", 
                    RowBox[{"3", " ", "\[Theta]121"}], "-", 
                    RowBox[{"2", " ", "\[Theta]122"}]}]]}]], "-", 
                FractionBox["\[Theta]213", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", 
                    RowBox[{"3", " ", "\[Theta]131"}], "-", 
                    RowBox[{"2", " ", "\[Theta]132"}]}]]}]], "-", 
                FractionBox["\[Theta]214", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", 
                    RowBox[{"3", " ", "\[Theta]141"}], "-", 
                    RowBox[{"2", " ", "\[Theta]142"}]}]]}]], "-", 
                FractionBox["\[Theta]215", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    RowBox[{"3", " ", "\[Theta]151"}], "-", 
                    RowBox[{"2", " ", "\[Theta]152"}]}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]312", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]220"}], "-", 
                FractionBox["\[Theta]221", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", 
                    RowBox[{"3", " ", "\[Theta]111"}], "-", 
                    RowBox[{"2", " ", "\[Theta]112"}]}]]}]], "-", 
                FractionBox["\[Theta]222", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", 
                    RowBox[{"3", " ", "\[Theta]121"}], "-", 
                    RowBox[{"2", " ", "\[Theta]122"}]}]]}]], "-", 
                FractionBox["\[Theta]223", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", 
                    RowBox[{"3", " ", "\[Theta]131"}], "-", 
                    RowBox[{"2", " ", "\[Theta]132"}]}]]}]], "-", 
                FractionBox["\[Theta]224", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", 
                    RowBox[{"3", " ", "\[Theta]141"}], "-", 
                    RowBox[{"2", " ", "\[Theta]142"}]}]]}]], "-", 
                FractionBox["\[Theta]225", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    RowBox[{"3", " ", "\[Theta]151"}], "-", 
                    RowBox[{"2", " ", "\[Theta]152"}]}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]313", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]230"}], "-", 
                FractionBox["\[Theta]231", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", 
                    RowBox[{"3", " ", "\[Theta]111"}], "-", 
                    RowBox[{"2", " ", "\[Theta]112"}]}]]}]], "-", 
                FractionBox["\[Theta]232", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", 
                    RowBox[{"3", " ", "\[Theta]121"}], "-", 
                    RowBox[{"2", " ", "\[Theta]122"}]}]]}]], "-", 
                FractionBox["\[Theta]233", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", 
                    RowBox[{"3", " ", "\[Theta]131"}], "-", 
                    RowBox[{"2", " ", "\[Theta]132"}]}]]}]], "-", 
                FractionBox["\[Theta]234", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", 
                    RowBox[{"3", " ", "\[Theta]141"}], "-", 
                    RowBox[{"2", " ", "\[Theta]142"}]}]]}]], "-", 
                FractionBox["\[Theta]235", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    RowBox[{"3", " ", "\[Theta]151"}], "-", 
                    RowBox[{"2", " ", "\[Theta]152"}]}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]314", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]240"}], "-", 
                FractionBox["\[Theta]241", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", 
                    RowBox[{"3", " ", "\[Theta]111"}], "-", 
                    RowBox[{"2", " ", "\[Theta]112"}]}]]}]], "-", 
                FractionBox["\[Theta]242", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", 
                    RowBox[{"3", " ", "\[Theta]121"}], "-", 
                    RowBox[{"2", " ", "\[Theta]122"}]}]]}]], "-", 
                FractionBox["\[Theta]243", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", 
                    RowBox[{"3", " ", "\[Theta]131"}], "-", 
                    RowBox[{"2", " ", "\[Theta]132"}]}]]}]], "-", 
                FractionBox["\[Theta]244", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", 
                    RowBox[{"3", " ", "\[Theta]141"}], "-", 
                    RowBox[{"2", " ", "\[Theta]142"}]}]]}]], "-", 
                FractionBox["\[Theta]245", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    RowBox[{"3", " ", "\[Theta]151"}], "-", 
                    RowBox[{"2", " ", "\[Theta]152"}]}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]315", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]250"}], "-", 
                FractionBox["\[Theta]251", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", 
                    RowBox[{"3", " ", "\[Theta]111"}], "-", 
                    RowBox[{"2", " ", "\[Theta]112"}]}]]}]], "-", 
                FractionBox["\[Theta]252", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", 
                    RowBox[{"3", " ", "\[Theta]121"}], "-", 
                    RowBox[{"2", " ", "\[Theta]122"}]}]]}]], "-", 
                FractionBox["\[Theta]253", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", 
                    RowBox[{"3", " ", "\[Theta]131"}], "-", 
                    RowBox[{"2", " ", "\[Theta]132"}]}]]}]], "-", 
                FractionBox["\[Theta]254", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", 
                    RowBox[{"3", " ", "\[Theta]141"}], "-", 
                    RowBox[{"2", " ", "\[Theta]142"}]}]]}]], "-", 
                FractionBox["\[Theta]255", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    RowBox[{"3", " ", "\[Theta]151"}], "-", 
                    RowBox[{"2", " ", "\[Theta]152"}]}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]316", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]260"}], "-", 
                FractionBox["\[Theta]261", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", 
                    RowBox[{"3", " ", "\[Theta]111"}], "-", 
                    RowBox[{"2", " ", "\[Theta]112"}]}]]}]], "-", 
                FractionBox["\[Theta]262", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", 
                    RowBox[{"3", " ", "\[Theta]121"}], "-", 
                    RowBox[{"2", " ", "\[Theta]122"}]}]]}]], "-", 
                FractionBox["\[Theta]263", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", 
                    RowBox[{"3", " ", "\[Theta]131"}], "-", 
                    RowBox[{"2", " ", "\[Theta]132"}]}]]}]], "-", 
                FractionBox["\[Theta]264", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", 
                    RowBox[{"3", " ", "\[Theta]141"}], "-", 
                    RowBox[{"2", " ", "\[Theta]142"}]}]]}]], "-", 
                FractionBox["\[Theta]265", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    RowBox[{"3", " ", "\[Theta]151"}], "-", 
                    RowBox[{"2", " ", "\[Theta]152"}]}]]}]]}]]}]]}]]}], 
         ")"}]}], "]"}]}], "-", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Theta]330"}], "-", 
           FractionBox["\[Theta]331", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]210"}], "-", 
               FractionBox["\[Theta]211", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]110"}], "-", "\[Theta]111"}]]}]], 
               "-", 
               FractionBox["\[Theta]212", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]120"}], "-", "\[Theta]121"}]]}]], 
               "-", 
               FractionBox["\[Theta]213", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]130"}], "-", "\[Theta]131"}]]}]], 
               "-", 
               FractionBox["\[Theta]214", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]140"}], "-", "\[Theta]141"}]]}]], 
               "-", 
               FractionBox["\[Theta]215", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]150"}], "-", 
                   "\[Theta]151"}]]}]]}]]}]], "-", 
           FractionBox["\[Theta]332", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]220"}], "-", 
               FractionBox["\[Theta]221", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]110"}], "-", "\[Theta]111"}]]}]], 
               "-", 
               FractionBox["\[Theta]222", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]120"}], "-", "\[Theta]121"}]]}]], 
               "-", 
               FractionBox["\[Theta]223", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]130"}], "-", "\[Theta]131"}]]}]], 
               "-", 
               FractionBox["\[Theta]224", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]140"}], "-", "\[Theta]141"}]]}]], 
               "-", 
               FractionBox["\[Theta]225", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]150"}], "-", 
                   "\[Theta]151"}]]}]]}]]}]], "-", 
           FractionBox["\[Theta]333", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]230"}], "-", 
               FractionBox["\[Theta]231", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]110"}], "-", "\[Theta]111"}]]}]], 
               "-", 
               FractionBox["\[Theta]232", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]120"}], "-", "\[Theta]121"}]]}]], 
               "-", 
               FractionBox["\[Theta]233", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]130"}], "-", "\[Theta]131"}]]}]], 
               "-", 
               FractionBox["\[Theta]234", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]140"}], "-", "\[Theta]141"}]]}]], 
               "-", 
               FractionBox["\[Theta]235", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]150"}], "-", 
                   "\[Theta]151"}]]}]]}]]}]], "-", 
           FractionBox["\[Theta]334", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]240"}], "-", 
               FractionBox["\[Theta]241", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]110"}], "-", "\[Theta]111"}]]}]], 
               "-", 
               FractionBox["\[Theta]242", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]120"}], "-", "\[Theta]121"}]]}]], 
               "-", 
               FractionBox["\[Theta]243", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]130"}], "-", "\[Theta]131"}]]}]], 
               "-", 
               FractionBox["\[Theta]244", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]140"}], "-", "\[Theta]141"}]]}]], 
               "-", 
               FractionBox["\[Theta]245", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]150"}], "-", 
                   "\[Theta]151"}]]}]]}]]}]], "-", 
           FractionBox["\[Theta]335", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]250"}], "-", 
               FractionBox["\[Theta]251", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]110"}], "-", "\[Theta]111"}]]}]], 
               "-", 
               FractionBox["\[Theta]252", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]120"}], "-", "\[Theta]121"}]]}]], 
               "-", 
               FractionBox["\[Theta]253", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]130"}], "-", "\[Theta]131"}]]}]], 
               "-", 
               FractionBox["\[Theta]254", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]140"}], "-", "\[Theta]141"}]]}]], 
               "-", 
               FractionBox["\[Theta]255", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]150"}], "-", 
                   "\[Theta]151"}]]}]]}]]}]], "-", 
           FractionBox["\[Theta]336", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]260"}], "-", 
               FractionBox["\[Theta]261", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]110"}], "-", "\[Theta]111"}]]}]], 
               "-", 
               FractionBox["\[Theta]262", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]120"}], "-", "\[Theta]121"}]]}]], 
               "-", 
               FractionBox["\[Theta]263", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]130"}], "-", "\[Theta]131"}]]}]], 
               "-", 
               FractionBox["\[Theta]264", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]140"}], "-", "\[Theta]141"}]]}]], 
               "-", 
               FractionBox["\[Theta]265", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]150"}], "-", 
                   "\[Theta]151"}]]}]]}]]}]]}]]}], ")"}]}], "]"}], "-", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Theta]330"}], "-", 
           FractionBox["\[Theta]331", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]210"}], "-", 
               FractionBox["\[Theta]211", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]110"}], "+", 
                   RowBox[{"2", " ", "\[Theta]111"}], "-", 
                   "\[Theta]112"}]]}]], "-", 
               FractionBox["\[Theta]212", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]120"}], "+", 
                   RowBox[{"2", " ", "\[Theta]121"}], "-", 
                   "\[Theta]122"}]]}]], "-", 
               FractionBox["\[Theta]213", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]130"}], "+", 
                   RowBox[{"2", " ", "\[Theta]131"}], "-", 
                   "\[Theta]132"}]]}]], "-", 
               FractionBox["\[Theta]214", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]140"}], "+", 
                   RowBox[{"2", " ", "\[Theta]141"}], "-", 
                   "\[Theta]142"}]]}]], "-", 
               FractionBox["\[Theta]215", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]150"}], "+", 
                   RowBox[{"2", " ", "\[Theta]151"}], "-", 
                   "\[Theta]152"}]]}]]}]]}]], "-", 
           FractionBox["\[Theta]332", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]220"}], "-", 
               FractionBox["\[Theta]221", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]110"}], "+", 
                   RowBox[{"2", " ", "\[Theta]111"}], "-", 
                   "\[Theta]112"}]]}]], "-", 
               FractionBox["\[Theta]222", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]120"}], "+", 
                   RowBox[{"2", " ", "\[Theta]121"}], "-", 
                   "\[Theta]122"}]]}]], "-", 
               FractionBox["\[Theta]223", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]130"}], "+", 
                   RowBox[{"2", " ", "\[Theta]131"}], "-", 
                   "\[Theta]132"}]]}]], "-", 
               FractionBox["\[Theta]224", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]140"}], "+", 
                   RowBox[{"2", " ", "\[Theta]141"}], "-", 
                   "\[Theta]142"}]]}]], "-", 
               FractionBox["\[Theta]225", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]150"}], "+", 
                   RowBox[{"2", " ", "\[Theta]151"}], "-", 
                   "\[Theta]152"}]]}]]}]]}]], "-", 
           FractionBox["\[Theta]333", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]230"}], "-", 
               FractionBox["\[Theta]231", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]110"}], "+", 
                   RowBox[{"2", " ", "\[Theta]111"}], "-", 
                   "\[Theta]112"}]]}]], "-", 
               FractionBox["\[Theta]232", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]120"}], "+", 
                   RowBox[{"2", " ", "\[Theta]121"}], "-", 
                   "\[Theta]122"}]]}]], "-", 
               FractionBox["\[Theta]233", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]130"}], "+", 
                   RowBox[{"2", " ", "\[Theta]131"}], "-", 
                   "\[Theta]132"}]]}]], "-", 
               FractionBox["\[Theta]234", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]140"}], "+", 
                   RowBox[{"2", " ", "\[Theta]141"}], "-", 
                   "\[Theta]142"}]]}]], "-", 
               FractionBox["\[Theta]235", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]150"}], "+", 
                   RowBox[{"2", " ", "\[Theta]151"}], "-", 
                   "\[Theta]152"}]]}]]}]]}]], "-", 
           FractionBox["\[Theta]334", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]240"}], "-", 
               FractionBox["\[Theta]241", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]110"}], "+", 
                   RowBox[{"2", " ", "\[Theta]111"}], "-", 
                   "\[Theta]112"}]]}]], "-", 
               FractionBox["\[Theta]242", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]120"}], "+", 
                   RowBox[{"2", " ", "\[Theta]121"}], "-", 
                   "\[Theta]122"}]]}]], "-", 
               FractionBox["\[Theta]243", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]130"}], "+", 
                   RowBox[{"2", " ", "\[Theta]131"}], "-", 
                   "\[Theta]132"}]]}]], "-", 
               FractionBox["\[Theta]244", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]140"}], "+", 
                   RowBox[{"2", " ", "\[Theta]141"}], "-", 
                   "\[Theta]142"}]]}]], "-", 
               FractionBox["\[Theta]245", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]150"}], "+", 
                   RowBox[{"2", " ", "\[Theta]151"}], "-", 
                   "\[Theta]152"}]]}]]}]]}]], "-", 
           FractionBox["\[Theta]335", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]250"}], "-", 
               FractionBox["\[Theta]251", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]110"}], "+", 
                   RowBox[{"2", " ", "\[Theta]111"}], "-", 
                   "\[Theta]112"}]]}]], "-", 
               FractionBox["\[Theta]252", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]120"}], "+", 
                   RowBox[{"2", " ", "\[Theta]121"}], "-", 
                   "\[Theta]122"}]]}]], "-", 
               FractionBox["\[Theta]253", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]130"}], "+", 
                   RowBox[{"2", " ", "\[Theta]131"}], "-", 
                   "\[Theta]132"}]]}]], "-", 
               FractionBox["\[Theta]254", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]140"}], "+", 
                   RowBox[{"2", " ", "\[Theta]141"}], "-", 
                   "\[Theta]142"}]]}]], "-", 
               FractionBox["\[Theta]255", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]150"}], "+", 
                   RowBox[{"2", " ", "\[Theta]151"}], "-", 
                   "\[Theta]152"}]]}]]}]]}]], "-", 
           FractionBox["\[Theta]336", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]260"}], "-", 
               FractionBox["\[Theta]261", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]110"}], "+", 
                   RowBox[{"2", " ", "\[Theta]111"}], "-", 
                   "\[Theta]112"}]]}]], "-", 
               FractionBox["\[Theta]262", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]120"}], "+", 
                   RowBox[{"2", " ", "\[Theta]121"}], "-", 
                   "\[Theta]122"}]]}]], "-", 
               FractionBox["\[Theta]263", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]130"}], "+", 
                   RowBox[{"2", " ", "\[Theta]131"}], "-", 
                   "\[Theta]132"}]]}]], "-", 
               FractionBox["\[Theta]264", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]140"}], "+", 
                   RowBox[{"2", " ", "\[Theta]141"}], "-", 
                   "\[Theta]142"}]]}]], "-", 
               FractionBox["\[Theta]265", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]150"}], "+", 
                   RowBox[{"2", " ", "\[Theta]151"}], "-", 
                   "\[Theta]152"}]]}]]}]]}]]}]]}], ")"}]}], "]"}], "-", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]310"}], "-", 
            FractionBox["\[Theta]311", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]210"}], "-", 
                FractionBox["\[Theta]211", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", "\[Theta]111"}]]}]], 
                "-", 
                FractionBox["\[Theta]212", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", "\[Theta]121"}]]}]], 
                "-", 
                FractionBox["\[Theta]213", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", "\[Theta]131"}]]}]], 
                "-", 
                FractionBox["\[Theta]214", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", "\[Theta]141"}]]}]], 
                "-", 
                FractionBox["\[Theta]215", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    "\[Theta]151"}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]312", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]220"}], "-", 
                FractionBox["\[Theta]221", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", "\[Theta]111"}]]}]], 
                "-", 
                FractionBox["\[Theta]222", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", "\[Theta]121"}]]}]], 
                "-", 
                FractionBox["\[Theta]223", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", "\[Theta]131"}]]}]], 
                "-", 
                FractionBox["\[Theta]224", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", "\[Theta]141"}]]}]], 
                "-", 
                FractionBox["\[Theta]225", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    "\[Theta]151"}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]313", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]230"}], "-", 
                FractionBox["\[Theta]231", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", "\[Theta]111"}]]}]], 
                "-", 
                FractionBox["\[Theta]232", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", "\[Theta]121"}]]}]], 
                "-", 
                FractionBox["\[Theta]233", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", "\[Theta]131"}]]}]], 
                "-", 
                FractionBox["\[Theta]234", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", "\[Theta]141"}]]}]], 
                "-", 
                FractionBox["\[Theta]235", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    "\[Theta]151"}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]314", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]240"}], "-", 
                FractionBox["\[Theta]241", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", "\[Theta]111"}]]}]], 
                "-", 
                FractionBox["\[Theta]242", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", "\[Theta]121"}]]}]], 
                "-", 
                FractionBox["\[Theta]243", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", "\[Theta]131"}]]}]], 
                "-", 
                FractionBox["\[Theta]244", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", "\[Theta]141"}]]}]], 
                "-", 
                FractionBox["\[Theta]245", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    "\[Theta]151"}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]315", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]250"}], "-", 
                FractionBox["\[Theta]251", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", "\[Theta]111"}]]}]], 
                "-", 
                FractionBox["\[Theta]252", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", "\[Theta]121"}]]}]], 
                "-", 
                FractionBox["\[Theta]253", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", "\[Theta]131"}]]}]], 
                "-", 
                FractionBox["\[Theta]254", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", "\[Theta]141"}]]}]], 
                "-", 
                FractionBox["\[Theta]255", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    "\[Theta]151"}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]316", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]260"}], "-", 
                FractionBox["\[Theta]261", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", "\[Theta]111"}]]}]], 
                "-", 
                FractionBox["\[Theta]262", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", "\[Theta]121"}]]}]], 
                "-", 
                FractionBox["\[Theta]263", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", "\[Theta]131"}]]}]], 
                "-", 
                FractionBox["\[Theta]264", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", "\[Theta]141"}]]}]], 
                "-", 
                FractionBox["\[Theta]265", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    "\[Theta]151"}]]}]]}]]}]]}]]}], ")"}]}]}], "]"}], "-", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]310"}], "-", 
            FractionBox["\[Theta]311", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]210"}], "-", 
                FractionBox["\[Theta]211", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "+", 
                    RowBox[{"2", " ", "\[Theta]111"}], "-", 
                    "\[Theta]112"}]]}]], "-", 
                FractionBox["\[Theta]212", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "+", 
                    RowBox[{"2", " ", "\[Theta]121"}], "-", 
                    "\[Theta]122"}]]}]], "-", 
                FractionBox["\[Theta]213", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "+", 
                    RowBox[{"2", " ", "\[Theta]131"}], "-", 
                    "\[Theta]132"}]]}]], "-", 
                FractionBox["\[Theta]214", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "+", 
                    RowBox[{"2", " ", "\[Theta]141"}], "-", 
                    "\[Theta]142"}]]}]], "-", 
                FractionBox["\[Theta]215", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "+", 
                    RowBox[{"2", " ", "\[Theta]151"}], "-", 
                    "\[Theta]152"}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]312", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]220"}], "-", 
                FractionBox["\[Theta]221", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "+", 
                    RowBox[{"2", " ", "\[Theta]111"}], "-", 
                    "\[Theta]112"}]]}]], "-", 
                FractionBox["\[Theta]222", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "+", 
                    RowBox[{"2", " ", "\[Theta]121"}], "-", 
                    "\[Theta]122"}]]}]], "-", 
                FractionBox["\[Theta]223", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "+", 
                    RowBox[{"2", " ", "\[Theta]131"}], "-", 
                    "\[Theta]132"}]]}]], "-", 
                FractionBox["\[Theta]224", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "+", 
                    RowBox[{"2", " ", "\[Theta]141"}], "-", 
                    "\[Theta]142"}]]}]], "-", 
                FractionBox["\[Theta]225", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "+", 
                    RowBox[{"2", " ", "\[Theta]151"}], "-", 
                    "\[Theta]152"}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]313", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]230"}], "-", 
                FractionBox["\[Theta]231", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "+", 
                    RowBox[{"2", " ", "\[Theta]111"}], "-", 
                    "\[Theta]112"}]]}]], "-", 
                FractionBox["\[Theta]232", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "+", 
                    RowBox[{"2", " ", "\[Theta]121"}], "-", 
                    "\[Theta]122"}]]}]], "-", 
                FractionBox["\[Theta]233", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "+", 
                    RowBox[{"2", " ", "\[Theta]131"}], "-", 
                    "\[Theta]132"}]]}]], "-", 
                FractionBox["\[Theta]234", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "+", 
                    RowBox[{"2", " ", "\[Theta]141"}], "-", 
                    "\[Theta]142"}]]}]], "-", 
                FractionBox["\[Theta]235", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "+", 
                    RowBox[{"2", " ", "\[Theta]151"}], "-", 
                    "\[Theta]152"}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]314", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]240"}], "-", 
                FractionBox["\[Theta]241", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "+", 
                    RowBox[{"2", " ", "\[Theta]111"}], "-", 
                    "\[Theta]112"}]]}]], "-", 
                FractionBox["\[Theta]242", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "+", 
                    RowBox[{"2", " ", "\[Theta]121"}], "-", 
                    "\[Theta]122"}]]}]], "-", 
                FractionBox["\[Theta]243", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "+", 
                    RowBox[{"2", " ", "\[Theta]131"}], "-", 
                    "\[Theta]132"}]]}]], "-", 
                FractionBox["\[Theta]244", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "+", 
                    RowBox[{"2", " ", "\[Theta]141"}], "-", 
                    "\[Theta]142"}]]}]], "-", 
                FractionBox["\[Theta]245", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "+", 
                    RowBox[{"2", " ", "\[Theta]151"}], "-", 
                    "\[Theta]152"}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]315", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]250"}], "-", 
                FractionBox["\[Theta]251", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "+", 
                    RowBox[{"2", " ", "\[Theta]111"}], "-", 
                    "\[Theta]112"}]]}]], "-", 
                FractionBox["\[Theta]252", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "+", 
                    RowBox[{"2", " ", "\[Theta]121"}], "-", 
                    "\[Theta]122"}]]}]], "-", 
                FractionBox["\[Theta]253", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "+", 
                    RowBox[{"2", " ", "\[Theta]131"}], "-", 
                    "\[Theta]132"}]]}]], "-", 
                FractionBox["\[Theta]254", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "+", 
                    RowBox[{"2", " ", "\[Theta]141"}], "-", 
                    "\[Theta]142"}]]}]], "-", 
                FractionBox["\[Theta]255", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "+", 
                    RowBox[{"2", " ", "\[Theta]151"}], "-", 
                    "\[Theta]152"}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]316", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]260"}], "-", 
                FractionBox["\[Theta]261", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "+", 
                    RowBox[{"2", " ", "\[Theta]111"}], "-", 
                    "\[Theta]112"}]]}]], "-", 
                FractionBox["\[Theta]262", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "+", 
                    RowBox[{"2", " ", "\[Theta]121"}], "-", 
                    "\[Theta]122"}]]}]], "-", 
                FractionBox["\[Theta]263", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "+", 
                    RowBox[{"2", " ", "\[Theta]131"}], "-", 
                    "\[Theta]132"}]]}]], "-", 
                FractionBox["\[Theta]264", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "+", 
                    RowBox[{"2", " ", "\[Theta]141"}], "-", 
                    "\[Theta]142"}]]}]], "-", 
                FractionBox["\[Theta]265", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "+", 
                    RowBox[{"2", " ", "\[Theta]151"}], "-", 
                    "\[Theta]152"}]]}]]}]]}]]}]]}], ")"}]}]}], "]"}], "-", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]320"}], "-", 
            FractionBox["\[Theta]321", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]210"}], "-", 
                FractionBox["\[Theta]211", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", "\[Theta]111"}]]}]], 
                "-", 
                FractionBox["\[Theta]212", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", "\[Theta]121"}]]}]], 
                "-", 
                FractionBox["\[Theta]213", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", "\[Theta]131"}]]}]], 
                "-", 
                FractionBox["\[Theta]214", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", "\[Theta]141"}]]}]], 
                "-", 
                FractionBox["\[Theta]215", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    "\[Theta]151"}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]322", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]220"}], "-", 
                FractionBox["\[Theta]221", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", "\[Theta]111"}]]}]], 
                "-", 
                FractionBox["\[Theta]222", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", "\[Theta]121"}]]}]], 
                "-", 
                FractionBox["\[Theta]223", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", "\[Theta]131"}]]}]], 
                "-", 
                FractionBox["\[Theta]224", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", "\[Theta]141"}]]}]], 
                "-", 
                FractionBox["\[Theta]225", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    "\[Theta]151"}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]323", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]230"}], "-", 
                FractionBox["\[Theta]231", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", "\[Theta]111"}]]}]], 
                "-", 
                FractionBox["\[Theta]232", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", "\[Theta]121"}]]}]], 
                "-", 
                FractionBox["\[Theta]233", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", "\[Theta]131"}]]}]], 
                "-", 
                FractionBox["\[Theta]234", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", "\[Theta]141"}]]}]], 
                "-", 
                FractionBox["\[Theta]235", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    "\[Theta]151"}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]324", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]240"}], "-", 
                FractionBox["\[Theta]241", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", "\[Theta]111"}]]}]], 
                "-", 
                FractionBox["\[Theta]242", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", "\[Theta]121"}]]}]], 
                "-", 
                FractionBox["\[Theta]243", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", "\[Theta]131"}]]}]], 
                "-", 
                FractionBox["\[Theta]244", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", "\[Theta]141"}]]}]], 
                "-", 
                FractionBox["\[Theta]245", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    "\[Theta]151"}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]325", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]250"}], "-", 
                FractionBox["\[Theta]251", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", "\[Theta]111"}]]}]], 
                "-", 
                FractionBox["\[Theta]252", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", "\[Theta]121"}]]}]], 
                "-", 
                FractionBox["\[Theta]253", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", "\[Theta]131"}]]}]], 
                "-", 
                FractionBox["\[Theta]254", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", "\[Theta]141"}]]}]], 
                "-", 
                FractionBox["\[Theta]255", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    "\[Theta]151"}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]326", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]260"}], "-", 
                FractionBox["\[Theta]261", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", "\[Theta]111"}]]}]], 
                "-", 
                FractionBox["\[Theta]262", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", "\[Theta]121"}]]}]], 
                "-", 
                FractionBox["\[Theta]263", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", "\[Theta]131"}]]}]], 
                "-", 
                FractionBox["\[Theta]264", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", "\[Theta]141"}]]}]], 
                "-", 
                FractionBox["\[Theta]265", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    "\[Theta]151"}]]}]]}]]}]]}]]}], ")"}]}]}], "]"}], "-", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]320"}], "-", 
            FractionBox["\[Theta]321", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]210"}], "-", 
                FractionBox["\[Theta]211", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", 
                    RowBox[{"3", " ", "\[Theta]111"}], "-", 
                    RowBox[{"2", " ", "\[Theta]112"}]}]]}]], "-", 
                FractionBox["\[Theta]212", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", 
                    RowBox[{"3", " ", "\[Theta]121"}], "-", 
                    RowBox[{"2", " ", "\[Theta]122"}]}]]}]], "-", 
                FractionBox["\[Theta]213", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", 
                    RowBox[{"3", " ", "\[Theta]131"}], "-", 
                    RowBox[{"2", " ", "\[Theta]132"}]}]]}]], "-", 
                FractionBox["\[Theta]214", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", 
                    RowBox[{"3", " ", "\[Theta]141"}], "-", 
                    RowBox[{"2", " ", "\[Theta]142"}]}]]}]], "-", 
                FractionBox["\[Theta]215", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    RowBox[{"3", " ", "\[Theta]151"}], "-", 
                    RowBox[{"2", " ", "\[Theta]152"}]}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]322", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]220"}], "-", 
                FractionBox["\[Theta]221", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", 
                    RowBox[{"3", " ", "\[Theta]111"}], "-", 
                    RowBox[{"2", " ", "\[Theta]112"}]}]]}]], "-", 
                FractionBox["\[Theta]222", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", 
                    RowBox[{"3", " ", "\[Theta]121"}], "-", 
                    RowBox[{"2", " ", "\[Theta]122"}]}]]}]], "-", 
                FractionBox["\[Theta]223", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", 
                    RowBox[{"3", " ", "\[Theta]131"}], "-", 
                    RowBox[{"2", " ", "\[Theta]132"}]}]]}]], "-", 
                FractionBox["\[Theta]224", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", 
                    RowBox[{"3", " ", "\[Theta]141"}], "-", 
                    RowBox[{"2", " ", "\[Theta]142"}]}]]}]], "-", 
                FractionBox["\[Theta]225", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    RowBox[{"3", " ", "\[Theta]151"}], "-", 
                    RowBox[{"2", " ", "\[Theta]152"}]}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]323", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]230"}], "-", 
                FractionBox["\[Theta]231", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", 
                    RowBox[{"3", " ", "\[Theta]111"}], "-", 
                    RowBox[{"2", " ", "\[Theta]112"}]}]]}]], "-", 
                FractionBox["\[Theta]232", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", 
                    RowBox[{"3", " ", "\[Theta]121"}], "-", 
                    RowBox[{"2", " ", "\[Theta]122"}]}]]}]], "-", 
                FractionBox["\[Theta]233", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", 
                    RowBox[{"3", " ", "\[Theta]131"}], "-", 
                    RowBox[{"2", " ", "\[Theta]132"}]}]]}]], "-", 
                FractionBox["\[Theta]234", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", 
                    RowBox[{"3", " ", "\[Theta]141"}], "-", 
                    RowBox[{"2", " ", "\[Theta]142"}]}]]}]], "-", 
                FractionBox["\[Theta]235", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    RowBox[{"3", " ", "\[Theta]151"}], "-", 
                    RowBox[{"2", " ", "\[Theta]152"}]}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]324", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]240"}], "-", 
                FractionBox["\[Theta]241", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", 
                    RowBox[{"3", " ", "\[Theta]111"}], "-", 
                    RowBox[{"2", " ", "\[Theta]112"}]}]]}]], "-", 
                FractionBox["\[Theta]242", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", 
                    RowBox[{"3", " ", "\[Theta]121"}], "-", 
                    RowBox[{"2", " ", "\[Theta]122"}]}]]}]], "-", 
                FractionBox["\[Theta]243", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", 
                    RowBox[{"3", " ", "\[Theta]131"}], "-", 
                    RowBox[{"2", " ", "\[Theta]132"}]}]]}]], "-", 
                FractionBox["\[Theta]244", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", 
                    RowBox[{"3", " ", "\[Theta]141"}], "-", 
                    RowBox[{"2", " ", "\[Theta]142"}]}]]}]], "-", 
                FractionBox["\[Theta]245", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    RowBox[{"3", " ", "\[Theta]151"}], "-", 
                    RowBox[{"2", " ", "\[Theta]152"}]}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]325", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]250"}], "-", 
                FractionBox["\[Theta]251", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", 
                    RowBox[{"3", " ", "\[Theta]111"}], "-", 
                    RowBox[{"2", " ", "\[Theta]112"}]}]]}]], "-", 
                FractionBox["\[Theta]252", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", 
                    RowBox[{"3", " ", "\[Theta]121"}], "-", 
                    RowBox[{"2", " ", "\[Theta]122"}]}]]}]], "-", 
                FractionBox["\[Theta]253", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", 
                    RowBox[{"3", " ", "\[Theta]131"}], "-", 
                    RowBox[{"2", " ", "\[Theta]132"}]}]]}]], "-", 
                FractionBox["\[Theta]254", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", 
                    RowBox[{"3", " ", "\[Theta]141"}], "-", 
                    RowBox[{"2", " ", "\[Theta]142"}]}]]}]], "-", 
                FractionBox["\[Theta]255", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    RowBox[{"3", " ", "\[Theta]151"}], "-", 
                    RowBox[{"2", " ", "\[Theta]152"}]}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]326", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]260"}], "-", 
                FractionBox["\[Theta]261", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", 
                    RowBox[{"3", " ", "\[Theta]111"}], "-", 
                    RowBox[{"2", " ", "\[Theta]112"}]}]]}]], "-", 
                FractionBox["\[Theta]262", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", 
                    RowBox[{"3", " ", "\[Theta]121"}], "-", 
                    RowBox[{"2", " ", "\[Theta]122"}]}]]}]], "-", 
                FractionBox["\[Theta]263", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", 
                    RowBox[{"3", " ", "\[Theta]131"}], "-", 
                    RowBox[{"2", " ", "\[Theta]132"}]}]]}]], "-", 
                FractionBox["\[Theta]264", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", 
                    RowBox[{"3", " ", "\[Theta]141"}], "-", 
                    RowBox[{"2", " ", "\[Theta]142"}]}]]}]], "-", 
                FractionBox["\[Theta]265", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    RowBox[{"3", " ", "\[Theta]151"}], "-", 
                    RowBox[{"2", " ", "\[Theta]152"}]}]]}]]}]]}]]}]]}], 
         ")"}]}]}], "]"}], "-", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]320"}], "-", 
            FractionBox["\[Theta]321", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]210"}], "-", 
                FractionBox["\[Theta]211", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "+", 
                    RowBox[{"2", " ", "\[Theta]111"}], "-", 
                    "\[Theta]112"}]]}]], "-", 
                FractionBox["\[Theta]212", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "+", 
                    RowBox[{"2", " ", "\[Theta]121"}], "-", 
                    "\[Theta]122"}]]}]], "-", 
                FractionBox["\[Theta]213", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "+", 
                    RowBox[{"2", " ", "\[Theta]131"}], "-", 
                    "\[Theta]132"}]]}]], "-", 
                FractionBox["\[Theta]214", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "+", 
                    RowBox[{"2", " ", "\[Theta]141"}], "-", 
                    "\[Theta]142"}]]}]], "-", 
                FractionBox["\[Theta]215", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "+", 
                    RowBox[{"2", " ", "\[Theta]151"}], "-", 
                    "\[Theta]152"}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]322", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]220"}], "-", 
                FractionBox["\[Theta]221", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "+", 
                    RowBox[{"2", " ", "\[Theta]111"}], "-", 
                    "\[Theta]112"}]]}]], "-", 
                FractionBox["\[Theta]222", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "+", 
                    RowBox[{"2", " ", "\[Theta]121"}], "-", 
                    "\[Theta]122"}]]}]], "-", 
                FractionBox["\[Theta]223", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "+", 
                    RowBox[{"2", " ", "\[Theta]131"}], "-", 
                    "\[Theta]132"}]]}]], "-", 
                FractionBox["\[Theta]224", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "+", 
                    RowBox[{"2", " ", "\[Theta]141"}], "-", 
                    "\[Theta]142"}]]}]], "-", 
                FractionBox["\[Theta]225", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "+", 
                    RowBox[{"2", " ", "\[Theta]151"}], "-", 
                    "\[Theta]152"}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]323", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]230"}], "-", 
                FractionBox["\[Theta]231", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "+", 
                    RowBox[{"2", " ", "\[Theta]111"}], "-", 
                    "\[Theta]112"}]]}]], "-", 
                FractionBox["\[Theta]232", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "+", 
                    RowBox[{"2", " ", "\[Theta]121"}], "-", 
                    "\[Theta]122"}]]}]], "-", 
                FractionBox["\[Theta]233", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "+", 
                    RowBox[{"2", " ", "\[Theta]131"}], "-", 
                    "\[Theta]132"}]]}]], "-", 
                FractionBox["\[Theta]234", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "+", 
                    RowBox[{"2", " ", "\[Theta]141"}], "-", 
                    "\[Theta]142"}]]}]], "-", 
                FractionBox["\[Theta]235", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "+", 
                    RowBox[{"2", " ", "\[Theta]151"}], "-", 
                    "\[Theta]152"}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]324", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]240"}], "-", 
                FractionBox["\[Theta]241", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "+", 
                    RowBox[{"2", " ", "\[Theta]111"}], "-", 
                    "\[Theta]112"}]]}]], "-", 
                FractionBox["\[Theta]242", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "+", 
                    RowBox[{"2", " ", "\[Theta]121"}], "-", 
                    "\[Theta]122"}]]}]], "-", 
                FractionBox["\[Theta]243", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "+", 
                    RowBox[{"2", " ", "\[Theta]131"}], "-", 
                    "\[Theta]132"}]]}]], "-", 
                FractionBox["\[Theta]244", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "+", 
                    RowBox[{"2", " ", "\[Theta]141"}], "-", 
                    "\[Theta]142"}]]}]], "-", 
                FractionBox["\[Theta]245", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "+", 
                    RowBox[{"2", " ", "\[Theta]151"}], "-", 
                    "\[Theta]152"}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]325", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]250"}], "-", 
                FractionBox["\[Theta]251", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "+", 
                    RowBox[{"2", " ", "\[Theta]111"}], "-", 
                    "\[Theta]112"}]]}]], "-", 
                FractionBox["\[Theta]252", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "+", 
                    RowBox[{"2", " ", "\[Theta]121"}], "-", 
                    "\[Theta]122"}]]}]], "-", 
                FractionBox["\[Theta]253", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "+", 
                    RowBox[{"2", " ", "\[Theta]131"}], "-", 
                    "\[Theta]132"}]]}]], "-", 
                FractionBox["\[Theta]254", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "+", 
                    RowBox[{"2", " ", "\[Theta]141"}], "-", 
                    "\[Theta]142"}]]}]], "-", 
                FractionBox["\[Theta]255", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "+", 
                    RowBox[{"2", " ", "\[Theta]151"}], "-", 
                    "\[Theta]152"}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]326", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]260"}], "-", 
                FractionBox["\[Theta]261", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "+", 
                    RowBox[{"2", " ", "\[Theta]111"}], "-", 
                    "\[Theta]112"}]]}]], "-", 
                FractionBox["\[Theta]262", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "+", 
                    RowBox[{"2", " ", "\[Theta]121"}], "-", 
                    "\[Theta]122"}]]}]], "-", 
                FractionBox["\[Theta]263", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "+", 
                    RowBox[{"2", " ", "\[Theta]131"}], "-", 
                    "\[Theta]132"}]]}]], "-", 
                FractionBox["\[Theta]264", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "+", 
                    RowBox[{"2", " ", "\[Theta]141"}], "-", 
                    "\[Theta]142"}]]}]], "-", 
                FractionBox["\[Theta]265", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "+", 
                    RowBox[{"2", " ", "\[Theta]151"}], "-", 
                    "\[Theta]152"}]]}]]}]]}]]}]]}], ")"}]}]}], "]"}], "-", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]330"}], "-", 
            FractionBox["\[Theta]331", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]210"}], "-", 
                FractionBox["\[Theta]211", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", 
                    RowBox[{"3", " ", "\[Theta]111"}], "-", 
                    RowBox[{"2", " ", "\[Theta]112"}]}]]}]], "-", 
                FractionBox["\[Theta]212", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", 
                    RowBox[{"3", " ", "\[Theta]121"}], "-", 
                    RowBox[{"2", " ", "\[Theta]122"}]}]]}]], "-", 
                FractionBox["\[Theta]213", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", 
                    RowBox[{"3", " ", "\[Theta]131"}], "-", 
                    RowBox[{"2", " ", "\[Theta]132"}]}]]}]], "-", 
                FractionBox["\[Theta]214", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", 
                    RowBox[{"3", " ", "\[Theta]141"}], "-", 
                    RowBox[{"2", " ", "\[Theta]142"}]}]]}]], "-", 
                FractionBox["\[Theta]215", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    RowBox[{"3", " ", "\[Theta]151"}], "-", 
                    RowBox[{"2", " ", "\[Theta]152"}]}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]332", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]220"}], "-", 
                FractionBox["\[Theta]221", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", 
                    RowBox[{"3", " ", "\[Theta]111"}], "-", 
                    RowBox[{"2", " ", "\[Theta]112"}]}]]}]], "-", 
                FractionBox["\[Theta]222", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", 
                    RowBox[{"3", " ", "\[Theta]121"}], "-", 
                    RowBox[{"2", " ", "\[Theta]122"}]}]]}]], "-", 
                FractionBox["\[Theta]223", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", 
                    RowBox[{"3", " ", "\[Theta]131"}], "-", 
                    RowBox[{"2", " ", "\[Theta]132"}]}]]}]], "-", 
                FractionBox["\[Theta]224", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", 
                    RowBox[{"3", " ", "\[Theta]141"}], "-", 
                    RowBox[{"2", " ", "\[Theta]142"}]}]]}]], "-", 
                FractionBox["\[Theta]225", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    RowBox[{"3", " ", "\[Theta]151"}], "-", 
                    RowBox[{"2", " ", "\[Theta]152"}]}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]333", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]230"}], "-", 
                FractionBox["\[Theta]231", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", 
                    RowBox[{"3", " ", "\[Theta]111"}], "-", 
                    RowBox[{"2", " ", "\[Theta]112"}]}]]}]], "-", 
                FractionBox["\[Theta]232", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", 
                    RowBox[{"3", " ", "\[Theta]121"}], "-", 
                    RowBox[{"2", " ", "\[Theta]122"}]}]]}]], "-", 
                FractionBox["\[Theta]233", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", 
                    RowBox[{"3", " ", "\[Theta]131"}], "-", 
                    RowBox[{"2", " ", "\[Theta]132"}]}]]}]], "-", 
                FractionBox["\[Theta]234", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", 
                    RowBox[{"3", " ", "\[Theta]141"}], "-", 
                    RowBox[{"2", " ", "\[Theta]142"}]}]]}]], "-", 
                FractionBox["\[Theta]235", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    RowBox[{"3", " ", "\[Theta]151"}], "-", 
                    RowBox[{"2", " ", "\[Theta]152"}]}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]334", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]240"}], "-", 
                FractionBox["\[Theta]241", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", 
                    RowBox[{"3", " ", "\[Theta]111"}], "-", 
                    RowBox[{"2", " ", "\[Theta]112"}]}]]}]], "-", 
                FractionBox["\[Theta]242", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", 
                    RowBox[{"3", " ", "\[Theta]121"}], "-", 
                    RowBox[{"2", " ", "\[Theta]122"}]}]]}]], "-", 
                FractionBox["\[Theta]243", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", 
                    RowBox[{"3", " ", "\[Theta]131"}], "-", 
                    RowBox[{"2", " ", "\[Theta]132"}]}]]}]], "-", 
                FractionBox["\[Theta]244", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", 
                    RowBox[{"3", " ", "\[Theta]141"}], "-", 
                    RowBox[{"2", " ", "\[Theta]142"}]}]]}]], "-", 
                FractionBox["\[Theta]245", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    RowBox[{"3", " ", "\[Theta]151"}], "-", 
                    RowBox[{"2", " ", "\[Theta]152"}]}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]335", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]250"}], "-", 
                FractionBox["\[Theta]251", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", 
                    RowBox[{"3", " ", "\[Theta]111"}], "-", 
                    RowBox[{"2", " ", "\[Theta]112"}]}]]}]], "-", 
                FractionBox["\[Theta]252", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", 
                    RowBox[{"3", " ", "\[Theta]121"}], "-", 
                    RowBox[{"2", " ", "\[Theta]122"}]}]]}]], "-", 
                FractionBox["\[Theta]253", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", 
                    RowBox[{"3", " ", "\[Theta]131"}], "-", 
                    RowBox[{"2", " ", "\[Theta]132"}]}]]}]], "-", 
                FractionBox["\[Theta]254", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", 
                    RowBox[{"3", " ", "\[Theta]141"}], "-", 
                    RowBox[{"2", " ", "\[Theta]142"}]}]]}]], "-", 
                FractionBox["\[Theta]255", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    RowBox[{"3", " ", "\[Theta]151"}], "-", 
                    RowBox[{"2", " ", "\[Theta]152"}]}]]}]]}]]}]], "-", 
            FractionBox["\[Theta]336", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Theta]260"}], "-", 
                FractionBox["\[Theta]261", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]110"}], "-", 
                    RowBox[{"3", " ", "\[Theta]111"}], "-", 
                    RowBox[{"2", " ", "\[Theta]112"}]}]]}]], "-", 
                FractionBox["\[Theta]262", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]120"}], "-", 
                    RowBox[{"3", " ", "\[Theta]121"}], "-", 
                    RowBox[{"2", " ", "\[Theta]122"}]}]]}]], "-", 
                FractionBox["\[Theta]263", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]130"}], "-", 
                    RowBox[{"3", " ", "\[Theta]131"}], "-", 
                    RowBox[{"2", " ", "\[Theta]132"}]}]]}]], "-", 
                FractionBox["\[Theta]264", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]140"}], "-", 
                    RowBox[{"3", " ", "\[Theta]141"}], "-", 
                    RowBox[{"2", " ", "\[Theta]142"}]}]]}]], "-", 
                FractionBox["\[Theta]265", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Theta]150"}], "-", 
                    RowBox[{"3", " ", "\[Theta]151"}], "-", 
                    RowBox[{"2", " ", "\[Theta]152"}]}]]}]]}]]}]]}]]}], 
         ")"}]}]}], "]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.6662885845418215`*^9, 3.666288594395385*^9}, {
   3.6662901083659787`*^9, 3.66629013041224*^9}, 3.6662903744481983`*^9, {
   3.6662904080061173`*^9, 3.6662904397919354`*^9}, {3.666290479312196*^9, 
   3.6662904928159685`*^9}, {3.6663209111777053`*^9, 3.6663209256285295`*^9}, 
   3.6663219704685984`*^9, 3.66632206364815*^9, 3.6663220978419294`*^9, 
   3.6663226455056367`*^9, 3.6663243963622293`*^9, 3.6663245726452713`*^9, 
   3.666325835397656*^9, 3.6663259199667373`*^9, 3.666340418172492*^9, 
   3.6663404636848345`*^9, {3.666340682841153*^9, 3.6663407312816744`*^9}, 
   3.6663453700510917`*^9, 3.666346408134437*^9, 3.666346451706997*^9, 
   3.666347033792577*^9, 3.666347145706678*^9, 3.6663471817311954`*^9, 
   3.6663473176629777`*^9, 3.666347349765913*^9, {3.666347519454298*^9, 
   3.666347547560624*^9}, 3.666347698828585*^9, 3.666347794398101*^9, 
   3.666348160241534*^9, 3.66634836750206*^9, 3.66635205123761*^9, 
   3.6664377546244144`*^9, 3.6664380396196814`*^9, {3.66643973956026*^9, 
   3.6664397518411846`*^9}, 3.6664397855577016`*^9, 3.666439858899108*^9, {
   3.666439904792508*^9, 3.6664399280428305`*^9}, 3.6664399677747602`*^9, 
   3.6664401447016983`*^9, 3.6665854177315006`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"costF", "/.", 
    RowBox[{"\[Lambda]", "\[Rule]", "5"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]110", ",", " ", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]111", ",", " ", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6664380481551037`*^9, 3.6664380901619453`*^9}, {
  3.6664381677390504`*^9, 3.6664381751630263`*^9}, {3.666439765366606*^9, 
  3.6664398118872585`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nXdcT+/7x9ta2nvvvffiHEkyUpJVZFRGskVLZrJHyCojpMgmUTpvRdkS
4lMy3ohE2iqNn8fHua7z6/b9fP55Pz7Pbudc53Vf5x7Xue771p+5MChSSEBA
IH6AgIDw71/9Gv/LfX2yPPjN+VGWeU+Apmctu3Agb74U8lkVYi5pvl70aSnF
1fOrxZB/eZAX767qTjdkxswyGiGEfEnCru3Tl7rQkf9e5xcD3Oo7T6kvxIkt
34y8L8FKRvmxA8v5yPMWlf5z7qE9LcD+B/zupMK+LxPsoTwFXGRDzM6OaODN
yIcHLApyl3UAe5BfPp+t7j3YEeyngbsx5xV/dTnB8yL/cChtQZavK+iD/GzX
p62FBh7w/8hThzn4r905CP8fdLUTuOzT8sUTdYbfz9vrDh6yckOdgecv7Zqa
0O2EOgP31u455TkJn4sBPkl5SOt5yg51Br5Vsjtsb6Q16gzcJKiszSHcEnUG
vrZ+dvWuWAvUGfhw30Mq07MsUGfgY6afVC39bok6Azfw+p62K9AGdQbOmzZY
8PgXO9QZeNnioaOi3B1RZ+Bdh2Q3f9R0QZ2BN666pLV/pzvqDPrtGX1455MZ
blgOuGbPsfzcY1i/yEN6TogNX2iPOgNvmqUiuma3NeoMXOJwho/ZDHPUGfg9
h7e6ksNNUGfgRyyTO02GGaHOwB0yOsI7Qw1RZ7xOSnfZ1q2GqDNwt9G1I4+8
MkKdgUdsPT/krLcp6gxcvH5JV9YjC9QZ+N6MG4baibaoM3BtkxXz95xyQJ2B
v5FwXNtigPrzQCclrYHiBcucUWfgy5Q9nRvO2OO/B87M1G31/WyFOsOva9G7
UV/3mKLOwG/paa9aG4Y6IC9t0C8/662HOgPfV2y1oXmNFuoM3FhTfVXBZQ3U
GXiFsevTTdqaqDPwWBXnsN4SbdQZ27mXwqbzJ+ijzsB/jPvH/lSDEeoM/KXz
5jOfz5ijzsAPei8L2rHNFnUGPjfx4ulPfo6oM+hh06B9+ZolvhfIh7TO7dx5
xgZ1Bq6wjjkRbWSG1wWeuubOi0G3DFBn+I3X9VWv7tNCnYHryn3Yva9QBXUG
3u57YaV2ngLqDHyq88flad/kUGfgzvUF5e0z5VFn4KNbOqdZ6iihzsAHrJ+x
dJihOuoMXKCo8p9MDz3UGfjzHWOeqUsao87Ac0OuCHj2WaDOwBvzvQPLpO0J
f25mGPmBei832BP+3MzsrXDUHj3KkvDnZuaQu+HYGaeNCH9uZiamtoe/C9Uh
/LmZGWioNPjQeWXCn5sZr9P7i9SPyRD+3MysmrHYeHOCGOHPzYyA7PzIHQ1C
hD83M/Hh2TymV5jw52bmxBnvdVcvSxD+3MzcOHVguoSkAuHPzUx6o+bEZbvU
CX/+3Z/ImRwckK9P+HMzMyl3w8FhFaaEPzczZqbteU+VbQmd+Yzb9xGTJyXa
ETrzma1S/NneluaEznwmV+dpxaZ4A0JnPrPh1+OxEs/VCZ35TIvi6NOruuUI
nfnMyuhJRe5NIoTOfObWkjrlwOGdVH+d+Uxq6ISmuYNBR9D593WWSTR+qG6l
+uvMZ7Kydj3o2C1A6MxnQkyZGnqbFKEznzmRcUCUylImdP5tj/kvu21vdAmd
+YzaqoWVvfYmhM58JvDj8EHqadaoMzzHRhF9x5MinM7Aj1v5tBp4mKHOwH/I
mK+q2IDtG3L1+Cmr739S5d5D9r/ERfF5LrIyqDNws7XrFoaLCKJ9wLX2mJ6+
md6EOqPe7l293ja1qDPw3ekVr9X1v6POwHNjN8+ObMT2AjlvQE3690QJ1Bn4
cKfDtw/8o4Q6A9/ve0JxzmBOZ+DDYmNm9zYao87AO7b8unUkzJr0Z+qKXVnj
DL2//JmKcRwcbphgRvoztX7184GfKvVJf6aWf5h4a+ElNdKfKUm/c79uy/7l
z1Tct4AU86PCpD9TgTfKzih9+Un6M/Uf/kz9sLIM0fVsJ/2ZOmNyUEjikyDp
z5QV0+WRN2sg6c/U1atyaa/KVEh/psQd46fWp+qR/kzZTVSs1ub/5c/UxKn+
MmJjbMj2mdILOmw9+B2pczOVN328aZSmBdk+UxLdibJZRwwJnZupBS5VCicz
tMj2mVKbMue79Tglsn2mljcJULWMNNk+U+EbUnRerRcl22fqP9pnat/g1LLF
bdD+YPtMRUVUCdXtkSLbZ+rCgmEXl89SJNtnKnm0W/b5AE2yfaY6/B9WFxcb
kO0z5aoTudNUyJxsnymnZ3WP1tjbkeMNKvFnZKbWTAdyvEFJyq7bNs3Pmhxv
ULEJJ/3ym0xQZ+B17666FvD0yfEGFelmJxAVjeMu5M4q/9wcekIZdQaek3im
T8jkr/EG9R/jDWrNVd4Y+Za/xhuUy3dhl1UuyuR4g9Kat2JrXp4G6ozj67Da
Fcae+uR4g1qwb47tYy8TcrxB1VKHoqNnWpHjDSrzfNf0mZXkeEOIbr3xvNvj
sBM5fqYTE479mFxvR46f6Xj993obdluS42f61fL8HcwyE3L8TAfaz5vfh/0m
jp/pme5KhSojdcnxMz38molA2jtNwp+F6P8YP9MG9oMm1hb9NX6mj9+I8B7a
p0P4sxC9p/SqW6O7AeHPQvSYQ4INT2VMyPEzrbPiblL27/EbMX6mhxU8awhN
sSPHz/TGmrqrkbpO5HyQjvKb8Nwv1pWcD9KjV7+5bPLQkZwP0um3Nz6suWiH
OgNvGhg0iRlnRc4H6dRalY3UbDPUGfjZmhdxZw4Zk/NBen3gsrcKDYaoM/D/
mA/SH2cO5B/98Nd8kB5/7Edjzzpjcj5IVw116d3rheN/1FXSx/XUnIFW5HyQ
3pTS+WBFgh05H6S/ZXos0VjpSM4H6a6BCYPjpV3J+AadWPRiwfdPHmR8gzZv
X16+nHYl4xv0gc8Nye7Wf8U3aOcma7vzv+ePRHyDDkwLrjGMsSXjG3Rx0x7f
igtWqDNwIVlFm9oBf8U36P+Ib9DzNwW8yRW0RJ2Bq8ZJ223KxHpHvr5cI/NR
iC3qDPzxloFxtntx/ov8c88Yw1xxfN/x94zT2mAJcVcyvkGn3trRnLEb40sQ
Z6N11o8/8vLTYDJeR78O9n82ZrgnGa+jr8h758R4uKHOwHMDj3gPKHIm43X0
gymvvbaUO6LOwAXVvsxlFv0Vr6OnR9mnF2T8Fa+j7/3veB09aavk4/pDf8Xr
aN/LV9q3R/8Vr6OV6G1NV+/+Fa+je+uOTQu+4EzG62iJCVJ0lCHGf5Abxx75
IWzgScbr6LtHo1sG5Q6mb5utMqnOG8iD39Jvu39atmJ55LVVjRfnfhjE2lnP
AJdcbhf+WgvajQrk6yXWiD4shjhYBQV8QMK4ZzvDbeA6yF+fUq0t0LIFe9Cu
INfTOVMuY7wLuceYC/HeSZ543z96tDP8oa128wSl8L7A3Xvu77O+JoH3Bb50
XdVm/x5pVs925He2bPTetkABOTz3+kVLzQ/oSNB6/9rTh+VbPTbLp51TQw7l
XcY+ymqQU0S7gXt/O5y7/QWMK9oZ4Bd1/alTHTLI4fkqXx0xSLASR/3hd1XG
g87jc0RQB+DZ68I2vZDsQTvg74clbhaMrO2iQB/4e8uHocHtp5Bj+Y4Yh7O/
W2Eoh+WnZx7ctbVKAHWG8mFR0etMIr7ieA7KN5eMczkdIYL6Q3led7DkFvM2
0BG5wuyeZmaFMOoJ/Oanj6LD98jRoyf6tPil4vWY7vjDFwIaNZFD+cSHC+P9
b6ujX0H5wKAqn5pJFlgvUP7olQLN62Ot4L6ow6uY3YdGP1EkOfVipuXppsGK
ZH1Rkwafqen2HUCMNyoYHZn2qHH3W8h6oRIimw2fF5Dz8QpGzXfW9sJXdWS9
UHYXLKiJi77j/AT+fnXQ887EDz8ool4oE7tlTc2O9VgvUP7h1q518150U0S9
UB+O6mYKBreT9UJtF2x2HTxVhKwXitcx+ucxI3nUGa6fP2jmrM0J5qTO1JLK
b72L2yyhvpCLV5/0F3HQRg52bdr0fJ1YmC7qD3zMY8VRBwqUyfeIejBcX6ny
Ozl/qaDORmS7/ejh/BLKF02Yq3PRUJgYB1ZQpP5Q/rWY4SUZm25Sf2r0Xdfz
BkWN5PtFFU1fZXlz/S/yPaL067qjV+kKke0MFeV3JDjKXIpsT6gPibk1M+cr
kTpTnzXt1z19aU62M5RUfUTN7QrOn+E+0vnlV+nJ5Hzkd3ssodBctYjzW+C+
auqS7aICxHyknprxM+KeS24X6gB81rlwM428Xop476gN45SUToVa4nsI9pS7
5qgu8ZUl23Pq7PYbpe7xkmR7Ti24JCI0bbAk2Z5TmS+jbYK3yJD9Gn1+3Y+Y
wEYPsl+jS7c+e7jvmRfZr9EtwaMkRM/bkv0aHTFN9u24PX/1a7SZ8Z1O8dS/
+jW6e7D18YWn/urX6IlHx1i6XfPA/4f+jW/zY9TpF15oP9jrleCkdlhhMNoJ
PNyz3KjR0wHtBG530dB3/Gp7tBP4FakdiYsD7dFO4FK+QWJbcu1Je3gi6Q88
Q8s8iXF7O3O7KWbR0/sSOM7BfrZu1NQDZZJ0/3ajmYm3buuzGSNDtBvNjLnf
gyvla5WJ+Xg9w8uf+aW+wY5oV/nMCJGVuU1vJEn/ZLS65JYYvxeg+7erfCZ9
bEi9rsNffsv099sKLE8JF7xT3tFK+jNT8HXppIK+bqJd5TPDbqqrrZ/YTLSf
fGaXpjnf4mEn0X7ymfHpg32fLRcldOAzZ35GDj0ZJU/0X3xGeM+96xKxGsT8
up4JHvq6qsWMjBdVMCZlBWsn2djh+45xP+MP949bcf0U8N4M5UOLmsTwusAT
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
uO+nUtU9ZSaWNJSD553T9nDqB1lj4vt7BZNZoCMzZZsZvfex6ju/VGnsH0fO
89xyz9ECroP1W/LipYfkETLv4nd7lbSjfX+dMVwH/S7d8GH0hWJT0h7q9smv
BfOuGZH2UDEOYetuOnD2gP4W92NXuRiR+Y3VlMGbkIjGdmvSTmqO8Y3Xa37+
ZSflMyBwjauPCdoJfnjz9vbYoRWmeF24v5n3qyzfpVZYL6jTKDWV6UutSTuZ
0SO+nFTPtSD1pCyTvjGlohZke0hdu2qe5VGM33Oxfh2ObmP0203QHleNEeOM
RkjyRo97umfFETP0K2gnInYYjlfb64DtGPjPhwnVZzd72KP+0L6tPXmpq7zQ
iIbrgp1Sj6Z+2BNpQrzXfKpmz+F7qydZ4X3hem5tg2M+jcH8cOTLtSbwD1Bm
qBvcRyTm82jbY+ZoD7QHKdaf3nofMiH8hM8c3DJpm855Y7QTdJ5i2350t5Qp
2gN+NOFdRMfBX1aoA/y7ISEmfjZbLeiV+h8L+/q49QhyNw12mpxwo/+JjC/t
6xuA49iNjzbnyH1wRw7l13u4zF9315l2Pi1X3tcnjOWPxOl+frrIFTmUP6/t
tfXZeEfagI3PQPkAp5yntrOdkUN5f3Xdx22j7Omqf+/7E8sXeI8IMi11RA7l
j7/50Xp5vC1txLaTUP5iaNIBoWQH5FB+6etzt7s/WtGm//K3WP4Fr2bZ/uv2
yKF8UGRCxZthkFeQX0ium9D8Ux71fzL3ltTbfRa0DlvvwA/sfvPCd7Ml/fKP
/cj9foodffW739Rl42BgT4xrbtphLSfkUP5LUkhtjLgd7fRHZ+wnO8aWjg99
6Ywc7fQVuPm91J5+9acesfzepRbtZ3pckUP5cYntVeLNjnTiHz/B8kLhR9w+
bvFADuVjO8K74ze7oF9BPoJkyjHFi+rO6D/ARw4yWvrO0wH9BHhokfmXkzts
0R+AJwlVnQiOt8R6B17hXNk+xdUM6xd43wW/CbtKjbEesfyBZ76CZkZYj+S6
DKhH4MslE0PjNxhiPQLXqrY8fTDZCOsR+DglI9EvISZYX8CvesrrWIibY70A
7370fYTiDivUH/jh2yXii2LtUGdc55IpEyig6og6/2kfhHh+E/Y+GWDsgDoD
v6d0dWz0OhvUGXi9Z4fko93mqDPwlT+SIvPijFFn4MINSTcVnAxQZ+DlKkWT
16zXRZ2B5/iPPGnpp4U6A4e8MtAZeGJEi1ignCbqDHzMwTaPGRraqDPwMyHS
X0ui9FBn4Cl7F1htNjBEnYFnZSdMO3LVBHUGLnbdZ+9YI0vUGfh56blzpVzt
UGfIl/GxFymTPmaLOgMP0/163bnUHHUGbugdHr6w1Ah1Bp7t53Rx71E91Bn4
9U667FiWBuoMvHLqBJnOG8qoM/CS25Xp3xIVUGfgkCcJOgOPb119xyJYHnUG
7rvYwitsoSLqDJx3ViM3dIgq6gxcaHXK7mEPtVBn4Odzw1csFDdAnYFvEsrW
mZligjoD37ny3LLk3/Og/v7czFxK3zlj/1Arwp+bmapppiLpQSaEPzczE4ae
zjjopU/4czNzJUT06U1RDcKfm5nnzpuq2kYpEv7czMi8GvPq6j5pwp+bGbuX
ix59lRAj/LmZEWTzfvv7czNT30Ffvf5amPDnZuaAerpCrK844c/NTPtVn8ZT
jCzht83MWSGZqAYfbcJvm5kZroM19g02JPy2mblwSEnn2g0zQk8+8+54R5qy
lgWhJ58xfKFk91zJiNCTz7g4DbafL6BD6MlnilIGJvnMUSZ04DO72Tzz/jrw
mXMbBnY98Gil+uvAZ6Kdsrxk4nuo/jrwGSVGJ3dBtxjxvHxmvmzXqdZV+vhc
MH5zabyd7Ghpjs8F3K3qe+FTfUN8LuDr9+1fWKjEtUvAf7DrEcB+4N7etdXT
x9WjnRi/Ukm25OeLYH0BN0qgDWYzamg/8E0dHseyHPXJeqFijkxxfBNlTtYL
RX+3Od66ypCsF+rBJeWQb/vJdpVP/Yf+1N3JEz+mLWgj9adqS4xniDzuI/Wn
Nstr6MWcFCf8kE9VqtZ+UD2jQdYLJZ/4rvuaiQH5/lImIyrmS8tZku8v5aS8
VHnfYGPy/aU2yF6u1vfXI99TqnKW/bufqgrke0pdTuPnGTRJku8ptcI1YoCs
gyihD5efT7yn1In9/gl7r4iQ7ynVGiLuJPVdgnxPKcFJwW/bRskT/U4zdaCm
yEoxVJV8f6nRUd3f3xrqku8vJba2WTw9yIh8fynPHxXyQxvMyX6HGmAZfbvK
1Ybsd6gp716rz0wxI/sd6u0NWR2Ny4Zkv0Np9zxybVyuS/Y71J4tAadCh6iT
/Q717Lz/9su3lch+h+LtTl3wolee7Heo/+h3qETjOy1DKv7qdyg/XcfC45FK
ZL9DfdKUfngsS43sdyhXJYOi1Wk6ZL9DtTheK7ytaUj2O9SWIVeLnEtNyX6H
Kl/nu+LaKGtyHEXP+zBcPm+GPTmOoqvS4naONbImx1H0izxTsZHTzchxFK38
fFfS2xVG5DiK3nsv63NJlD45jqJfv1LblrdQhxxH0SXCohe6bmgS/szl5xPj
KHrmObfu1Rl/jaNo71cHB1jZ6pDjKFpz1UdGwUmfHEfRjRdCFWcYGZHjKLrA
enSEQZ0pOY6iO1xWT4heZ0WOo+itq/JMp3bZkfMCOiDu+8/TQ5zIeQG90TFM
bFGsPTkvoK1eH2i86W5Dzgto73inRaumWpDzAnrQuiKhLyGm5LyADo8fNG6Y
3V/zAlqjSuTCk2pD1JnMzyfmBbTN/ZHNZyr+mhfQ1+Vdz9ZqGpPzAvpLqWfn
FFdTcl5AN5XkBfUZWZDzAtrqwsohvz5ak/MCesbjTTHvPO3JeQHtf6F4ntgP
R3JeTzs+8T5hfNWVnL/Tg+p3vhJvdiLn6fQh/wlyQ9MdyPk4basTvUPvsh05
76YP5T/0SZ5nQ86vaYW4ZfQ+XytyHk2nnr55/FebBTmPpv9jHk1f2Nu8clPj
X/No2mpQhmaQhxU5j6YLFo7/eXm8DTlfpsXjBxqPOmZHzovpfSq1bkmrHcj5
L73vwaGF6+46kfNcenjt0C8Jca6oM8Thbronvdue50nGT+gk/u2WMz1uZJyE
lp2slXMh14WMh9CFlTepEWVOZNyDFijhPTo82hF1I/PtQTfgJe0LTZmt9qgb
8IFb23zO2jqgbsCHSyWOM/V1JOMPtMTefWbJhU5knIFeu+Te7sRDLmQ8gd4R
1nhG7oMb6gO/YSZKl1bpcHEkiAtGbOlRFHrigvqcTRglnGo0kHerSOhl1Vsn
1Afiw7P85g7ZOJmL/7x+cWmE0QgZnmtl2YJ6TwfUZzbEqQi/SmLtcb99PezZ
Vi4OA/fd1yd79a2hHeoA972RsnTbEkUH1KGava+NQcrdiCAn1KGFjTfWVS9r
a/vFxUNu5fsez5s/gLdS22jz3s1cPAR+b+rnWabrOKIOTQrn6vxSxXm76p/v
KdWyRx0k2Lig37dR95+I26IOevOV7arzJHgFA4fdpE5b4fvoxsb9KoIO34nT
tsT3MaAscfn8aknepoRtJaNmcu/jGTbO4Ei0e8Ws/UHtoyN9JhmhX1Wx9p84
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
dXCiCDcOgThPe9g+6+SvtuQ6F/rsxirbsdu5553P1stWdr0h8Kks38hywm+p
qHaP4bxSUzK+xOtdly4eZm5PfFcdyFOd/eb2nVW2f8VtYH0fEffjCbPrpIjv
SoykZMB+lzuGRP5eBfO+M3ns0iQuf5KdNzEximcfpk43x/gV+7zM2Kun55oN
10cO9buhO9hAV1efyGerYHqs1wcpPzYhx/PMpKcZxyZ2cfww296+LD970ajS
hPxOR4VUbdLW1f3Lfmpp9ZDMKEPOfvheFpA0TzDe0py0k5ps5NsSMkqffC7K
1Uojw+XOX/ZTUaPvCuqYm5LzTWqVjlDj0fec/SvZ9rk38kfiIClTfF/YeCDv
Zhcz22yjNTle5f1g1wMCh/jed5YT3w2ZeRafxM7V//W8zPK1wlU30s3J757U
rPFqVa26f9UvFTDppL63ljnaCevnjt7t1Fn22YSMM/Pujs57UZ/JlYf8E16c
7emH903J/Che7Euf0pmMAxl/5jVtOL0ycAcXr4b7Fm+UL0uuNkUOeSyihD/D
ut5djuvVKjK5danwfBNc/Ruqzrvh+ivgNcuF3u2czZ3TBLyod5f+s1XOuI4F
uHjOE5+j1dz5QcCD5Ma+Ui/hzg8C7pF9qn12tA32T8BlRFb7d8zl9sUFvpkX
91V2ArcvLvDzW7YKN0Rx++JinPjl2SfyBdy5P8DLZ0dtZtJdUAfQaft7x8Vz
1jujDvgdKe74yv1D3VEHjMeHxGvtCXJAHYBXhj7ZVxRiizoAd7yVZp1nhvsA
I78xJ+tHrowZ6gB8yNW9HTnS0M8KCAAvXfR8ja4htz8z8OCO3gkmYuaoD3CT
6TGF27dz+zMD3/zSZfWndG5/ZuB7hmYsy17P7c8MfObniuwpvZxuEB8al7sm
S/kunu+D3Gf70ILMbS6oG/DC0B0ZgkZYj8iTaoKfznxujroBvxlgnbP6iDHq
Btzvi/iCwPUGqBtwq++rZm9eq4e6AX9jEuUR6Iz7k2NeU2INk//2kC7mxwM/
1LLBPUEH95lHrukpYi+6A/f/xzjZgW8K2sMNTFFn4MyU9Pxf/1iizngd4adL
lKq5/VWAx8ivrT4dwu3fDvOnBwM6JlWv5vbVx7zO5L1T3QO586eA1y1Z+PCf
ZAvUGfgn3WdySpboP5gfRau9E3X7oYc6A3+5XPFg51FN1Bn43fUNguLpqqgz
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
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFmwn4T8X3xz/3c+fOTdIeQqE9ayQJJWshLUqrUEiFNlFaUElpp2hfqLTv
e9q0p53SpsWStJcW0uL3fnnP//k/z3ee8/7OnTt37tyZM+e8z/k0PvrEvidU
K5XKS6FSySWPldxI8jNVfig8UfioolL5QPg84UHC16gcKvyk6trqptHCZ6j9
9ao/XPhp1RcqO2aVyle6frTk9iqX6VoX/X+R5AVq/7XaXC98gu7rqvpLhC9U
fVD9Dmr/her2Upmi+stUf6TqV6q+l+QNumeg6ucITxO+Ve0GlpXK7ZJ/qf42
yStUPyi925XCt6hugNrcHdWX6p9V/RTV9xV+WPgC1R8s/DjPz/2Ox+m5l6jN
IcJPqH6cnn+2SlS5XPUHqP4h1a9DUd0Tuq+nypWqv0L39hK+SniK8JnMifBu
um8/1V8nPF31n6t+Ks9S/VDh39XP3pIfq0194beYQ/pX20GS30tupvaNJVeo
1BduKvmdyqbCDSV/VaknvKPkDyq1hbeW7K2+pglPFV4YPLcdVbdH7m99nuo/
Vf3FwkM1nlL/H6UxbMeYco/zctU9o/8HqDTkOwW/7/Fqn7GYVE6T2ErXNlMZ
J9xJ954vOVHXPhLeXPVvSG4tWUdlPGsueA0co35+V7sthFtKbqP6WmrzlNrP
Fz5b9f3V5mnVjVWpp9Je1y5X/cVqP7NwfwMk++vaFirn6v/Xc9dXgt+Zd79U
7TuwVoQvEX4xd///Sd6u+88R3ln48MzfYoL+P0KyQeZrH6vNppnH/Erud10j
2UrPuIxnS74v+ZhKprKj1tg9krnkY7rWT+0v0r33657DmEON4dbCc3Ks5N6S
a1Q/TGV14XF8IPmU5OkqdVVeUz9DdH2F6m9SGSV8kOQ7Kv8JHyz5vtqcKXy4
8Gw961Thf3LP3/6Z5/drlcdVDlS5UOUClfVY5xrrUOaP76Cyruqe1L1Xq69j
VD9XdQNV/lV9X8kNg7/Jm2rzoWShcqLavSF5gkptlZohjV1t5gmfxbyqv49U
d4DK+irXFn7vt4KfzRiu0Fg2V5mt6xtJNo+e25qSH6n9Bpn11WeZ53kjlSa6
dqzufUd9vJD7Wf9K9tO1TTLPC+/Au1wZ/Tyee4/wTipPMB7Jd3PrwEzX/9J3
2lq4jeQqla1YJ5IrVRoLt2YvBuuJx7mP9ZJZR0xSmZh5HturzXzJdryj5OQ0
58/r/wHqZ5qe21n/rxQ+WqW98A98X5U71KaH5GS97wo94w/hGZLXqE3XzHpw
N8nvJQ9MuhKdebH63F5luPAOkv9qrG2F95L8T2VX4b0l16i0E+6JvlG/+wkP
FP5b8qeK11xt1e/PuYCe0bPuRT9n1qHo0snRehP9OTVar/ItRql9ndz686g0
b62EO0veqfZ7cRZE61ba3MgeVLmNd1Sbw4RvFb5F+BDhGcI3oauE7xW+U/hQ
4ZnCN6OPhOcIPyc8UPhu4Vl8Q9aT8DaSp6v+ReHnq17zd+j/ejovBknew3yj
k9K5cKzwicJPc14IDxN+SPh+4fs05j58K/Wxde4555B9MHiuLlL97pqjX1nz
KiepzWzOF9ZR7u8+UnhbvpPwLqxf1T8s/IDqjxN+RPhB1pqubcf5q77bMb98
c8k/dK0lelfyT5WdhPdkTerefdGNwktUarIGJJeqrCfchHNZpZZwM8ke6vcb
xqz7RmjM3wovV/mb8Um2layra11YY8INhXuhn4Unal1ehl7THG4s2UH1fdJ3
7yzcV3hLzkvmgfkMPrNa6r7l+n9j4fqS36psIryF5GrOA+ZE8jeVBsLNJb+p
2m7ZnLWsfu7UWBtLnhB89jVTn19U16r+SgPJnQVmqU0jyYXVtUdWpS5ncdV2
UD3JL1V0W2VLyYvRxcJ3qf2k6PXJOp2k+itYm3rHKLmn6vdX+zK94wHCfYVv
FL6W/oQ7Ce8nfIDwDcLXMC7OYOF9hdfP3f+hfIfce/wQ4Q1yj+Ew5iP3GjuS
7ybcHT0vvH9um+pq4XWF2wh3F15HuLVw19QP+7qX8IbCuwn3Zv6E2wvvwxwI
NxPeg7kRbiq8u3Am3ES4IxOW257pIFxDeGfhbqwfzUl3ze2Lkg9Gr7f7g/UJ
67N9mh/2exfhCWpXV7iqtrdHn0dvqW5L4e84a6P3P3rgaLW/n/WNTSJ5l+Su
mdfo67rnN+Zccmdd+0X1W0nuIbmiYluwkfrpLzkce0ntuujaC5KLVfYVnit5
c26bcLDa7Km639FRKtuqfjD7VfWjhd8VflP4DLVpptKU8031b6j+5aQf5gq/
InyK8FuMUXik8OvCLyW99L7w28KjhN8WfkP4VOF3hOfSP+eo8HvCZwovEH5f
eIzwe8JvCZ8t/LHwfOGzhD8Snle1bczZcZXkNrnPkBNVP1z4Vc4E4dmF9Tl2
SIPcenuY6u8obBfdL7l97vP3FNXPKmxr3VfYVnmV+dL6vz7absR+vLOwfYWN
eUO0XYd9d5vq56r9gWr/uXAf7EDJEap7TW1eVP/1c9tFxwhvnvvsGiK8l9r+
UvE5fVlh/Xmp5KVq01X4ILXpqDY/V3zenMsaktxZ8mK1WV+4hdpcWPgMvUCy
Xu6zdGjVe5mz8nzsvsJ6jntvjLZ7sdO3LPx9b+H81LN2VlmMPlT9lcL/SIbo
c7CItpGwwV6WHK53bs35EW3bVNTmFclvCvsUyyVXMbec3ZKN1O4n1jdrubBt
UFf4x8L2Q0X4+8J2xRrJU9T/T3qPLtH2EHZRLcnnC69j+n9b7zCG+RHep/Ra
nyr8ZrAfh63Yp7Q9ep3wVsIH8u3Vz4voU/Sb6nuWnvfzCvtZ7LvnCu9V9myb
aL+J7/WM5F5q/5XG1kn1S3X9DpW22DrRNifjPFRteqjPo4QnSn7FWtI9i3X9
OZWWKnNUdlL5jPNM4/lSeA/Jc9T+c9V9pPbbFd5T3+Z+Zh3hbdgXmb/ZEv0/
KV87fZVGrAdhPbqyVdV+L+dIHfSkGjyp9htKnqs2X6j+Y9WPC9aNHfHjSvse
R+A7CnfjvBc+RLi78CD0WWkfo7/weZJf6t5P0P+q35XzMVr/nKxnlcIPSz6S
2Y5fpvrR2I3R+2WkcIzWsacK/4vNH+1LLg32r8HT1H9n4WvZ+1Xv7x6ZbbZH
g9f89MK6AJ1Qqu7azLZj96TzOmXWe7ep//V0/ViN99dkz1yHftL1t1V2UXlP
5d30TZ9lbaW9ie7plvkZS1XaZJ7rP3L3jb36SPAeR0d9pv8vFZ6scd1TGA9L
e+FH3dtQ8hO1mUS/uu+33Hr9ptw+2baZ/bJ7C/MN+FBnqq61SqvMa4K18Q7n
jvBC4QVV+3bbZPbvPs9s8zfC1s5tG5zPmRx81vwo3DL4e9XAPpJckFmXvabn
5Zn3yIOZvxF2/svB77uZ5E7B33R9dKPkpZnPnpsz+3T7Mf9wLJLz8A0lT0q+
w0r9f5jkfHRV2iPfYRuqjBT+S/LR3Pt0teQvSZ9Pk7xdz+uW9Nu0zPZcO5Vq
1f4Uvvx76K/M/jV8yJW6bzN9sB855zPr5fcL+3RHohtVTlJdX8lFhb/1HMlZ
wTYJOpY1Ppnn6jnzc58RVV1/oDCvMJKzIrPewye8ubC/XgM9Ge1zwT89pPov
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
4fPJLcfWg+TBbyenjrwWYvb/AyAv9oc=
         "]], Polygon3DBox[CompressedData["
1:eJw1m3fgT9X/x++95577TiWJhpaWSqLsEEJJkpBIEqkIlaRIe0d7D5WotBSK
pvbQTkt76NvW1Nb8PR+e5/fH8TnPe84d73vPeb2er+frZfOR4wccWWRZdl3I
slJ/L9I/XfS3FC5qWTa2yrJbhW/SpG2Ehwtvm2tc8wYJHyl8l8bv0Hgz4fbC
a6n/neZspn7HmGXbabyTjj0uPEXtEeGHhNtp/rW6Tkfh+rrfqxrro/n7C4/V
+JvCZ2p8S+GVws8IH6/2qPAi4fY6f0/NHyI8RvgNje2p+X/o3oVab/VP0LHH
NP6wxnfS/NV17GiNzVObrGN/6r591I9qC9XvoOs11fyOGntM526hv2019rmO
TdX4pxrfVfgoHT9M1ztRcx7X2CPCHYS3Fv5V4xvo2Kmau5mOtxH+TPhsnX+W
7r+V+n/q+GLNHaN2i/CNwlvr/InC9wnfI7yj8CWa31U46twgPEfjo4Unanwj
4f10j8nCJwi/p7HxanOF5whvr/EdNL6h8DbCxwuP0HhTfq+uO1j4OOGHNf4g
v1P4WOEHhBcKtxI+Wvhe4buFdxB+RecdJry3/h4rPEHj84Xv0ngL4aOE5wnf
Kdxc+Bjh+4UXCLcUXqnfsSfrR+0e9fvq+Q7X+LEan6LxgzR/O419orH9hHfS
+LYa76DxRzW2l/A44WOED9f4M8KZ5t+p+QcJT9KcB3XoXo23Fh4lPEP4WuEt
hUcL38B6F95K+Bz9jrbCfwv/p7FLhXcRrtgPGn9Jf08TbqJ7vKP+YZozU/h6
zW+i8Wma3174X+FceKpwO+F/2FTCz+ucU9XdSue/rX7b6PXcWuMP6VqHq90u
PFu4qeY/qDl1NbefWhNda1vNX0fjjTR+t+Y+pPG1NNZfbYqObadjK9XvU3o9
PKz5P2r+lZo3VHiRcCeNj9bcdYW7aP666jfSnC3ZSxr/mfej+QdovImO/aL5
P6T3zbpifWX6O1D3uEytleBqmv+Sxk9Te1n4BY330PlNdb0GwhsJ36Ox09Ve
EX5ReFeNP6Xxnrr+0cIbCvfX9f4WXrPwGrhAeHvND7r+i+x/tVeFX9ZYT80/
Q3iJ8EvCuwnfofn7CW+i+fWEx5W2Yx9pfIHmThCoK/y58APCY4U1NfswPd+7
wucK76SDG+v8ycINhZdrfJHGJ5X+PV+n73Wc8LrC3wg/jH1jTQofKLw261/j
awp/Jnw/31eYJfqx8ELh8wR+EL6c76j5h5WrXm32Qfq+92u8BfZG47to/CLh
nzR+jXAD4fGav4bwp5p/X+Xvyvf9Tsc21pz5Gh/Ot1V/Hc2fJ3yg8BbC9Xl/
wlsI/6Hzntb55ws34/Nq/AXhk9UWCz+p8Z01f0fdfyPhpul+CzW/h+73m+YP
13hLjW+s8Wbp92IXsY+/s2c05zqNB+H56jfS/HNL21c+wnN8H76jxlfq0NY6
1krzN1G/efpeJ5fGvwg/JXxS6fv9LPyk8Di124RvFt5W139a5/8rfJuuNUL4
JI0/I/wE7wl7IlxP/R+TfT+htH1ckfzTiaV/70/CTwgvEO6m5/tF1ztQ559X
2p/lws9rvJNaA2yR2vo1r2vW9/fYXM2Zrvkd1F9b/SWaOxvMuPAQzZ+F3dJ4
Vx37Sf2r9fz/4U/VX0/jp+qc54Sf1nW7CJ8i/KzwU8KdhS/X9VoL19H8l7Gd
0et3k7T+m0Wv18Zp/bXAD+peX+nYeTrnaJ2/Vur3Yn1pvLvGf8Vm6dgUja+n
/rc6/ojOb6/rNRFum9Z/u2h/1ibtl1vw59gPnbu/rveYxn/DvwkPE24Tvf5a
af6Dmn9safv2VcL1on/vEcH+Z6bG+wo3FF5duGFle9pKeJzw9sJ/YS+TPzqw
tH/4R8eG8+zsT/X/0vyj+P6ln+dNHeuID9T4v+rvo/4kjQ/Q3/rCVeHz22h8
ufA44eNq5hRwiyg8DK5Uer8uU9sFX126/4laN/VX4zeq31z3P1LntxLOde4g
jU0Wfj/aP+0azKeCjo/U/AuxUTr2QbS/2i3YX+MfFuA71bbS3K3VFuY+hr94
Rm2u+lvo7xGa31Z/lwi/qtaeb622uvrPqu3IWlZbBF/SMw1mr6ltIPyiWkv1
X8TOqz9JbW3hzUpzoZeFW6f3y7vknT4f/fvfxd6l9wHfmgC/EN4W38E7Eb4l
nd9C7Un1d+AdqV8Pfqbxh4Sbln7+Ouxn4XZp/hPqv69jp+jZnlW7ODenW0Nj
jdWmq3+B2kbYmsp8sGkwX+D+PPsram3Y6xrfT/3/ND6h5u/M916h62+mY5WO
7V7Yp19VmhN0g8tk5gpw5K5wo8zcGZ+/E1w5MxeAE8Bd4DBwhRV6R9N0/X94
h+rXdI/uhX0qvhWOtwvcLzP3+7Kw72ePsFd+hR/ii7BBOv8f4R2FNxM+VeP/
Feau2Fhs7b8abym8ufDp+Fqdc1lujrFU/b80vr7G62t8osZ/L7w32aP4iiWa
s6/mniA8U/3xet5nNP48Nk14JXw99578Q/3uut4PwiP4jvotrYWD5n+iNhG+
KnxhWlvs33N1vZ+xfWo9dew79nnmY7sL71o6ltha7V1sZWluvZquN1L9Tmpf
Y8/UesCXgrkxHPkB9lgwd4BDrK/n+4N4AN+BzRT+HQ6Ereeawn/CV4RfE95A
eHQwt3+cTxv9/obm5oR/qf+W2gHCpwvfEM1He+W+/zXqf692pvDfcBb1N9cz
fZF5T7Ke67Af1F/MHmA/J25WX39HCa8NJ4Dr6Vg99evy/dmLrPfKe4S9smHa
n9urPar+e5p/Mja99LXWVjs0Xe+B3DZurcp7kr25Qdo/FfFcbpv5IcQFvpt7
T34XzVEapfUCd4ETwA3woXAT+OUKzf9fijfaCf8mvF0wv8c/7y48iv0U7Tfx
n+uwRoN9fJfCHBDfDwftkPYT3BSf3THtJ3w5PgffA6eGu8EZ4A5whAnJ/t6t
++2t9oXuF4XvzG3DQ2Wf0yrtD/YXHK91Wv+T0v5rmfYX++M/XeP63Dbtm2jO
A/eBM8D98In4RnwiXBFO0SntR7gG3+9enT9GeE31t9Sx+bltct3SnGPnwhwD
LlKrHKv25Z1G23XsO2tmtdIcqHNhDgc3ehoep7HzWRPC92p888Ic4KzKnABu
AKeFK2N/+heOebBnndWW6tzxwjuz1zT/HeGJwj9Gc549C3MauBAcrjecItkb
9mcd+BX+qDCH3wvulZnbwzH7FI754Z7E+MT6xPBz8C/R67eZ+uO1Xu7D3gif
otYw2bc9Csdc2NM32Zsaeyz3esf/47vn5I4RsUPYozrJXiyFR+b2OfgPOHD3
ZM+xd2gMPZI9RnsgRt+1MMcidofD7S/cKzO3Q7MYyjNl1jLqweuEd2f/J3va
Ldlz7O8/+n3X5Oa8n0fHIBsl+05s8n5he7w26z+as8Hd4HTEEq8JHyDcW/i6
0poH2gcxELEQMdkA7pn8CZxwHzhdZq7I+ufdjBUuK9sL3l2L9M7Xx8Zqfj84
m/DrmjNSuL/wTfgz/IX6y/iN+j4zSsc/DXRenZr9wUW61o1qb6r/Ees9WF95
DW5eWg84IFhP+ru03jE0WP9YKXyT8BD8gs6dVpgLbYPP17E/NX6z8P7q/4Jv
F75ReD/hn4TXjY43jwnWhxpGx6cTg/WmBsIvCR8drHdsjA1nbwbHO5sIv83e
C+bX+Ng5wiOCfe+mwu+w14L5+HrR8eixwfrSOsIvYnuE29Tsc/A9k4L1oU/1
vNcIdxPeVPgT4auFdxHeJOkNG+XJpxb2j19qvH3yh7+X1lsGBesPu5W2t6tr
7sGlfRa+7bhgX/Zdaf2uj3Bjzf+hdLy0l/Bmwp/pb3PsMZwXPqTzl2r8+OB4
6bfSes6+wXrJIaXjJzQENKWXiZvz5BOFX+F35MknFvY/6AloYvgzbCi29IvC
3OOX0vrhPjpvC13/19L61cBgveZ4fCK+R/P/1vwfS+slfTW+ec0++x58UbAv
h5PATY4M1n8eI27OzWFO1jXui/69n+p415p9Or59VLB+hV7TSONDsA+F/Rfa
BDHFNuq/znvL7ZNP1PGr9Tw9NVZXx2s1c8TdsO2JO7at7Lu+L8yHZml8b+F1
Nb5GzXuMvbae8JrCa0THq2OD9bYtKttS9twp0XHOX8n/91X/SjiSxtZgj9Vs
c7A9awmvJlw3Op4fF6wnEs8Qu+D/Nla/itZHDw3W64aU5mtwFLhKiNYHR2p8
O403j+ZfTf6fz5WOZ9CIiB/Wio5PDw/W+7BR2P51gm0X84k1GueOgeBgCzQ+
JpibIZag3x0YrIf9V1qPHBYc37eI5kfwpGOEY7QefEiw3nmw8NnYbjhn5bju
38R3iO120LHjNb5DcLy3fzS3PUnzP9BYGa1PHxysZ/8W7Utnqb2h/nJ+l/qt
1L5R/yy1/2l+a+FvsSFqF+haF+vYrWg3uud16vfX8R91/Y+FzxLuKvyV8Gdq
UzX/fOw5Wkb0/ums8c8rn3NrYRvEtX4gxha+Q3gFaylYO2RPsDdmRa/3DjxX
ZRs6r/AewbZiM+cXfufY0o/UzlS/C3ZGY98IXyG8p/D3lW3qXM2/O7OtfUfX
HwF/Uv9TjX2tv5dpbA/N/xYc7auvVXshOr6Cm9fUXsd2Ct8erNG8Ivyx8MPC
9TT+tvA+0VzzuMLxMvd4QuMNc9+bb8q35R3epf4ytTMK/4alepYP4TjB+vKr
0e/gnMIaH+9mueZcrn5vzfmu8jfn27MmWqj/FnwxWLN6VvPfZb1o/Fj8J79F
x07KHe+ibbyvY48E78f6lTV4NNNJGr9T/bcr51bQWJ/DtgpPKqx5P6pn+VbH
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
         "]], Polygon3DBox[CompressedData["
1:eJwt13ncTmUaAOC37/V+RmjKlpT8LE1KJhVlJ5+QfctOspTshKxJ9uxlz1qW
lDCWTKOQmjRRTSEzJpRKpW1aaCxprvt3/HF/57mv537O9p7nOecr2W1Ay/5Z
qVTqFZER3fy5M51KjYTD5B/lSqVGs4fZJraVXS6vL65kjVhV9oy6Otmp1Pfy
yuJPrKS8tjgpryBKsCHqBhnbwNhZ7Gn2NRvActgUNoOdZH1ZLTaBTWKfsD6s
JhvPJrLjbBTrxTayLSyPvHbuVOot+V5xUt929ohoqD2HzVP3jbHNnV8h1oU1
YctYI5aX3cdai/fkLUUR1lXeTN1KdfXYb/L6ohKbzJo5Rjl1RR1/l3y3qK/u
opoG4k51U9g97IK8nrgnzlO+2NgNxvaWd4h7Km/Fi7NerC1bF8dgBVln1pgt
Z03ZFaxd7JMtZE1YftY2jsEWsBasMLufNWUr2FLHyb7MfdAuKNaoyRGn1dQS
f1Y3jjdm+Yxtw+qy+awuOyOvLW5lj7OGLFtd8xjP5rB7WYY1YzXZrDDHLcCa
sOpsKRvBOrCVbDU7z7aJ89qr+Sox077uFt+puSvuqXhNPtzY9vpXyFepP2dc
G3Yxrt32Hfk+MUS7kbqn1M3X9y17lLVjy9lz7CwbypqzBWwJ+4kNYy3YQraU
/czWOvbVcd/4BbYnnm+WS95UXQ02W38DfhVrzKqxJXFPWQnWiTVi6+P5Y9ez
jqwhe5G1jcnpN1pku1/+rhisfa+62erm6j4V954VZa1YDlsVzzhLG7vE9nX5
HlFe+1M17bWf15flfCdmkt81ft/Z9jEp5pWYyaayt9hz8j5qO2tvYdv1XbSP
3qwT28xeZhdYL9aGrWcb2Rn2ELuPvcg2sNOsB2savy17nv3AHmYd2V/YNvYb
a8duZ2PjvJ3zr86lO2sS58XWqvtOXSn+cTyL/Kvoy07m9OXpZK7FnMuYn13i
OWJz5QvVf2ps51iz2NNsATvBurHG7Fm2hn3PerJWbF2cs/hR3sO2u5jFT6m7
xvZB3tr2Bf4S+yXudzyX2tfFMxj3OeakOOCaquqrEjXycuIcayp/Td1iecn4
DVl59mWcE6slPrH/MqK0mBprFyttG4t7F8faqP64sXWMHcByy4/FXFNXOc4h
xqk7zNuzu9hENoW9oO7luGbtG+PeiMnZyRp2/tL8i3n4u3xnnGtcX3ayDh6y
nSLmas9LJ9cd118i5q9zqav9QdxHx+jEqmlPj3uobg2rLn6WlxfF2WPq+wml
qUlxHnGekmLqDrIR8hMxj+O5YDfFO0r9r45VlnVgFViLeL+o/8D2P2JMzFv+
hlhyaX359tL9jPt6Qd7T2Cr6d4nR6o8Y14qVl1fQ3usYBdXtzyTrwFWsgFjN
jqkpq/+o7ZP2Ny3ekfxLdR3UdBQb5FWM/a++HvJi+kbZVmY/sJ7aV9pWUXcr
OxHrOsurbkCsYXxgvOv4X0XF3Mlz2pItki8WpdhK9gWrGc+EcyphX59rT7Of
A/ygWKbmKfFCzNV4jvVtj3OMORLvdvaQ9iY1XeNZkD9j/8v0bba/B1i9uJds
OdvCjqofr/0+/6dYquZhXkP7vXTSFzUz+LPyyrmSOfFGbEV//Vv5tlh/1dxv
bEXtMvo2q8vD+okH0smcjLl5s+v9MJ6ZOK9Ys2I9j7XF2Nu0d6aTvqg5GO8G
7R3s1bhncW3qKmn/LZ30Rc0K/pn8c/Evdn1cg/gl3oHiejY2ni91XdRsjd+D
/Z4rOb9u6eT3id/pjHxcBDuclaxbsX6VE8djX1nJsx7P/HiN8er+zY6xMmrK
xlonLyp0pXqrm6BuguQIO85uUDOSDWHvsHdZITacDWZvs32sABvEHozrZ7tY
dnw3sT7sdfZ3ljeTPPsxB3aHx2+vpr/orv2Kulf1pdUNiHUx7l+8o1kuNjDm
EtvBdsZ3Z8zTeD7kxYRdp/r4czM7Jr8uK/k27cueMPaJuO/sKCut43E2hh1g
h1lx9iRbFGtmfOuwTcbOje8p7Z7xjo/1SD4m7kPMafZGrNnyfpnkuyC+D47o
2xjnnEne9/He/5htkp/JJO+hOOFrxOlMMgcHpZPvzvj+PBvrvygVz1lWMndi
Do1hI2MeZCXrVqxfo9hQti++OVlh9lbMMccobZtPrFIzVoxW96G6j+I9om40
G8b2s/dZETYjk3wfxnfiwvhukj+mbpT2B+yQvmszyTd+fOu3tr1PvKRmhHhE
3T/U7ddXUN2w+I3Zm+xt9sf4X0GckpcQhdlw4yuxr2O9FoXYo6wWOxtrUqyn
bCKbnEm+S+P7dI79TonvdnFOXkncEGu8uorsK/m1oiAbxq52LofclxztOmKd
vG2si7E2x9zSV0Fe09j/ye+ItdzYCWqrsZ/k5eLZYmNYVfaj/KY4DhvNbjG+
me2N8Q0a79x4L6r7Rk1JUSTeN/ruyCRzPub+dMcfF9cl/qCdE8fWN1fdSNaV
rWXrWZa8nsjD6sa9YfPU3RbrcaxdIj8bxCqwz+RlRT42ML7/nE9vY3ezN1k+
NUNYX7Ynnj+Wnw2NdTHebWwvu4JNZfNjLUwn7/V4v9/Ov1Bzi7iCDWY5LEtN
jXA2g90dk5FVi3PUnBb/B8Q3ZrxT4l3NZrIdl967nW07iY2OWUfdZeqqx/1X
N53/HxoWxRo=
         "]], 
        Polygon3DBox[{{1627, 826, 651, 650, 970, 1444}, {1225, 1224, 1680, 
         936, 937, 1681}, {1631, 836, 666, 665, 991, 1457}, {1426, 927, 611, 
         612, 928, 1427}, {1411, 909, 596, 597, 910, 1412}, {1229, 1228, 1707,
          1100, 1101, 1708}, {1216, 1215, 1685, 944, 945, 1686}, {1365, 814, 
         935, 1679, 1224, 1225}, {1218, 1217, 1675, 923, 924, 1676}, {1358, 
         810, 1097, 1706, 1213, 1214}, {1227, 1226, 1683, 940, 941, 
         1684}}]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0rtPk1EcBuDDxaq1iiMagpdFY2oTvOEgAyPCpEyQYMCg0gEXBkxMjC46
GRZhIsYIDsaRLoYmJCWOWnujlIKWTkbwHzBGny8OP573PZzv5BzCmYmHt6Zb
QghvzLIQ5cd+NDnVHsJxzvAUnzLFOfbxNYeYPaD7ZlT+JN+UV/0urdflYZPX
H+k78h1T1V/ou1zgL77jH2aYcM46M0zanzVF/S0nzZfWEEp6nmV+ZYUFbrDI
KmPOu2f/ptwvN+T7Zs2U7KlZb8oPTM6UrW1Fb5crcl3e4Dar3OEmv7HG7/zZ
FsIl+9dNQ19i2pxz94J+gjnGucLf7rHMPc5H51kft/+53BML4a88Zmb1k3pN
vh292f6p6I3ygPmoj+gfOMhF3uBLXuQTdvOZ83/wvW86+IrXTcr9j+lJHuUF
JnieR3jX93E5Lu97Y69vDsu91vPyNXNIv6J/lq+as/YfjNbk07Lrh266Quhi
e/QmOi50sjX6OyiXW/7///0DvfxUdg==
       "]]}, {
      Line3DBox[{1129, 1406, 731, 1128, 1713, 1320, 1130, 1714, 1321, 1131, 
       1715, 1322, 1132, 1716, 1323, 1133, 1669, 1717, 1324, 1134, 905, 1599, 
       1863, 1537, 1407, 1570, 1587, 1907, 1325, 1538, 1408, 1574, 1710, 1908,
        1326, 1572, 1571, 1598, 1914, 1327, 1135, 1718, 1328, 1136, 1719, 
       1329, 1137, 1720, 1330, 1138, 1864, 1409, 1331, 1410}], 
      Line3DBox[{1140, 1600, 1787, 1139, 743, 1141, 1721, 1332, 1142, 1722, 
       1333, 1143, 1723, 1334, 1144, 1724, 1335, 1145, 1725, 1601, 1788, 1146,
        1569, 1602, 1906, 1589, 1573, 1726, 1336, 1593, 1592, 1727, 1337, 
       1147, 1728, 1338, 1148, 1729, 1339, 1149, 1730, 1340, 1150, 1731, 1341,
        1151}], 
      Line3DBox[{1153, 1603, 1789, 1152, 1604, 1790, 1154, 759, 1155, 1732, 
       1342, 1156, 1733, 1343, 1157, 1734, 1344, 1158, 1735, 1605, 1791, 1159,
        1606, 1792, 1160, 1607, 1793, 1161, 767, 1162, 1736, 1345, 1163, 1737,
        1346, 1164, 1738, 1347, 1165, 1739, 1348, 1166}], 
      Line3DBox[{1168, 1608, 1794, 1167, 1609, 1795, 1169, 1610, 1796, 1170, 
       775, 1171, 1740, 1349, 1172, 1741, 1350, 1173, 1742, 1611, 1797, 1174, 
       1612, 1798, 1175, 1613, 1799, 1176, 1614, 1800, 1177, 783, 1178, 1743, 
       1351, 1179, 1744, 1352, 1180, 1745, 1353, 1181}], 
      Line3DBox[{1183, 1615, 1801, 1182, 1616, 1802, 1184, 1617, 1803, 1185, 
       1618, 1804, 1186, 791, 1187, 1746, 1354, 1188, 1865, 1411, 1412, 1881, 
       1189, 1413, 1414, 1882, 1190, 1415, 1416, 1866, 1191, 1417, 1805, 1670,
        1192, 1672, 1806, 1419, 1193, 1619, 1807, 1194, 1747, 1355, 1195, 
       1748, 1356, 1196}], 
      Line3DBox[{1210, 1435, 1434, 1869, 1209, 808, 1208, 1432, 1814, 1682, 
       1207, 1420, 1468, 1883, 1673, 1206, 1671, 1813, 1467, 1418, 1205, 1678,
        1812, 1430, 1204, 1887, 1429, 1428, 1203, 1886, 1427, 1426, 1868, 
       1202, 1425, 925, 1201, 1423, 1811, 1674, 1200, 1810, 1621, 1199, 1809, 
       1620, 1198, 1712, 1808, 1594, 1197, 1867, 1422, 1421, 1469}], 
      Line3DBox[CompressedData["
1:eJwVzrsugwEYBuBPehIb0gabiUZnd0GpUtaamjSt1T1YJGKQsBGDSxARC3Xo
5hyLQSIt4QbU0+HJ+77f//cwWW2WGgMRUeE0GZFMR6RIkKeeiZhLRUzrU8yy
6Tbvdub9e7uon+u7+gOX9gIXblv2I1f2Iln9mA3fkZMttzfSeknuc6TXPP/T
P7nmnYx7IRExIjt2jy43fDDo3vC5JX1U/5Ihv+Uth3rV8yFZtg/4Ycz+lXes
e74sW/77tvsTbXul/ztuO/Yzlf779on+wqo9I/d4ZZhx1twn5D9sLzBe
       "]], Line3DBox[CompressedData["
1:eJwVzc8rw3Ecx/G38uMwjvJjKNc1Nzf2R3BwomantRon5X9Yy0qSclSKw/4A
sZ9Gkv0HRohc1JxXHg7PXq/X8/3t813M7a7vDEXEGrrDEeOjERNIYAlp7I1F
PLml9KR+KR/tk5GIW2xzh9wDd2y3keUq3D13IGftFv+LPu74H1ngz92b+gcG
eEfH/YzPu7/ZDbzi5f+fbkX+We+hjm9M8m186l+oYct3Ze+0+Ip9g02uxDW4
U3vGPrJr9rS+oV/rF3LKXpEZrOKKr8p9flnOYQHz6HjrD7A5MZA=
       "]], Line3DBox[CompressedData["
1:eJwVzjlOgmEQBuAxosYGLUwsKNQLuBbcgsIGA+KCQGOisdGjgJXGxIKCs7CK
jesdcAEpfP7iyTsz30zybZQv9y9mIiJHJxWxNB+xTJpt8lwvRGzJTV4ozEV0
7d7LNhXvRdkzq3t/paM/pG/W0L/R1ZdYVTe5cpeRPbMRRzyQM/+S38k9PxzY
Ozdfkb/6MQMm7M1GPMo/pjxRtXssF+3fySE1s5Pkzp9uzd951p8mN2Yf+nKy
q26pPznT78obt031mnqdLBX9jvwH9ncvNg==
       "]], 
      Line3DBox[{1240, 1450, 1625, 1873, 1239, 1626, 1820, 1241, 1441, 1762, 
       1381, 1242, 1691, 1763, 1496, 1382, 1243, 1692, 1764, 1383, 1451, 1874,
        1443, 1384, 1452, 1875, 1444, 1627, 1871, 1453, 1446, 1628, 1872, 
       1454, 1447, 828, 1244, 1448, 1765, 1385, 1245, 1693, 1766, 1386, 1246, 
       1767, 1387, 1247, 1768, 1388, 1248, 1876, 1455, 1389, 1497}], 
      Line3DBox[{1250, 1629, 1821, 1249, 1630, 1822, 1251, 834, 1252, 1694, 
       1769, 1390, 1253, 1770, 1391, 1254, 1877, 1456, 1392, 1498, 1895, 1457,
        1631, 1878, 1499, 1458, 1632, 1879, 1500, 1459, 1633, 1880, 1255, 839,
        1256, 1771, 1393, 1257, 1772, 1394, 1258, 1773, 1395, 1259, 1774, 
       1396, 1260}], 
      Line3DBox[{1262, 1634, 1823, 1261, 1635, 1824, 1263, 1636, 1825, 1264, 
       847, 1265, 1775, 1397, 1266, 1776, 1398, 1267, 1777, 1637, 1826, 1268, 
       1638, 1827, 1269, 1639, 1828, 1270, 1640, 1829, 1271, 855, 1272, 1778, 
       1399, 1273, 1779, 1400, 1274, 1780, 1401, 1275}], 
      Line3DBox[{1277, 1641, 1830, 1276, 1642, 1831, 1278, 1643, 1832, 1279, 
       1644, 1833, 1280, 863, 1281, 1781, 1402, 1282, 1782, 1645, 1834, 1283, 
       1646, 1835, 1284, 1647, 1836, 1285, 1648, 1837, 1286, 1649, 1838, 1287,
        871, 1288, 1783, 1403, 1289, 1784, 1404, 1290}], 
      Line3DBox[{1292, 1650, 1839, 1291, 1651, 1840, 1293, 1652, 1841, 1294, 
       1653, 1842, 1295, 1654, 1843, 1296, 879, 1297, 1785, 1655, 1844, 1298, 
       1656, 1845, 1299, 1657, 1846, 1300, 1658, 1847, 1301, 1659, 1848, 1302,
        1660, 1849, 1303, 887, 1304, 1786, 1405, 1305}], 
      Line3DBox[{1319, 1466, 1001, 1318, 1862, 1668, 1317, 1861, 1667, 1316, 
       1860, 1666, 1315, 1859, 1665, 1314, 1699, 1858, 1465, 1313, 1698, 1857,
        1464, 1312, 1903, 1463, 1856, 1697, 1311, 1462, 1855, 1696, 1310, 
       1854, 1664, 1309, 1853, 1663, 1308, 1852, 1662, 1307, 1851, 1661, 1306,
        1695, 1850, 1460, 1461}]}, {
      Line3DBox[{536, 732, 1713, 537, 743, 561, 1790, 758, 576, 1795, 773, 
       591, 1802, 788, 606, 1808, 1127, 801, 620, 1815, 1097, 810, 1913, 629, 
       1105, 816, 1756, 637, 1820, 824, 646, 1822, 833, 660, 1824, 845, 675, 
       1831, 860, 690, 1840, 875, 705, 1851, 890, 720}], 
      Line3DBox[{538, 733, 1714, 539, 744, 1721, 562, 759, 577, 1796, 774, 
       592, 1803, 789, 607, 1809, 802, 621, 1816, 811, 1749, 630, 958, 817, 
       1892, 638, 959, 825, 1762, 647, 834, 661, 1825, 846, 676, 1832, 861, 
       691, 1841, 876, 706, 1852, 891, 721}], 
      Line3DBox[{540, 734, 1715, 541, 745, 1722, 563, 760, 1732, 578, 775, 
       593, 1804, 790, 608, 1810, 803, 622, 1817, 944, 945, 1750, 1017, 946, 
       947, 1757, 1021, 960, 961, 1763, 1026, 979, 980, 1769, 662, 847, 677, 
       1833, 862, 692, 1842, 877, 707, 1853, 892, 722}], 
      Line3DBox[{542, 735, 1716, 543, 746, 1723, 564, 761, 1733, 579, 776, 
       1740, 594, 791, 609, 1811, 921, 922, 1009, 1884, 923, 924, 1751, 1018, 
       948, 949, 1758, 1022, 962, 963, 1764, 648, 835, 1770, 663, 848, 1775, 
       678, 863, 693, 1843, 878, 708, 1854, 893, 723}], 
      Line3DBox[{544, 902, 903, 1717, 545, 747, 1724, 565, 762, 1734, 580, 
       777, 1741, 595, 792, 1746, 610, 925, 926, 1011, 1885, 930, 1080, 1082, 
       1081, 1904, 1019, 1084, 1085, 1083, 1091, 1090, 1905, 1023, 965, 981, 
       1874, 966, 649, 987, 1877, 988, 664, 849, 1776, 679, 864, 1781, 694, 
       879, 709, 1855, 995, 996, 1030}], 
      Line3DBox[{546, 904, 905, 547, 748, 1725, 566, 763, 1735, 581, 778, 
       1742, 596, 909, 1865, 911, 611, 927, 1868, 1010, 929, 1013, 1045, 1046,
        950, 1044, 1043, 1897, 1055, 1051, 1052, 964, 1050, 1870, 1049, 1024, 
       968, 982, 1875, 970, 650, 989, 1027, 1895, 991, 665, 850, 1777, 680, 
       865, 1782, 695, 880, 1785, 710, 1856, 997, 1086, 1088, 1087, 1089}], 
      Line3DBox[{552, 739, 1718, 553, 753, 1728, 571, 768, 1736, 586, 783, 
       601, 1806, 916, 917, 1008, 1883, 918, 919, 1015, 1888, 936, 937, 1752, 
       1020, 955, 956, 1759, 1025, 975, 976, 1766, 655, 840, 1771, 670, 855, 
       685, 1838, 870, 700, 1848, 885, 715, 1860, 898, 728}], 
      Line3DBox[{554, 740, 1719, 555, 754, 1729, 572, 769, 1737, 587, 784, 
       1743, 602, 1807, 797, 616, 1814, 938, 939, 1016, 1889, 940, 941, 1753, 
       634, 822, 1760, 643, 830, 1767, 656, 841, 1772, 671, 856, 1778, 686, 
       871, 701, 1849, 886, 716, 1861, 899, 729}], 
      Line3DBox[{556, 741, 1720, 557, 755, 1730, 573, 770, 1738, 588, 785, 
       1744, 603, 798, 1747, 617, 808, 627, 1819, 1100, 1101, 1754, 635, 1108,
        1109, 1761, 644, 831, 1768, 657, 842, 1773, 672, 857, 1779, 687, 872, 
       1783, 702, 887, 717, 1862, 900, 730}], 
      Line3DBox[{558, 907, 1864, 908, 559, 756, 1731, 574, 771, 1739, 589, 
       786, 1745, 604, 799, 1748, 618, 942, 1869, 943, 1063, 1103, 1909, 1104,
        1102, 957, 1755, 1066, 1111, 1112, 1110, 1911, 977, 1092, 985, 1876, 
       986, 658, 843, 1774, 673, 858, 1780, 688, 873, 1784, 703, 888, 1786, 
       718, 1001, 1002, 1003}], 
      Line3DBox[{719, 889, 994, 1850, 704, 874, 1839, 689, 859, 1830, 674, 
       844, 1823, 659, 832, 1821, 645, 823, 1873, 978, 636, 815, 1910, 1107, 
       1106, 1119, 1118, 628, 1900, 809, 1099, 1098, 1117, 1116, 1912, 619, 
       800, 1867, 920, 605, 787, 1801, 590, 772, 1794, 575, 757, 1789, 560, 
       742, 1787, 535, 731, 901, 1004}], 
      Line3DBox[{724, 894, 1068, 1067, 1903, 998, 711, 881, 1844, 696, 866, 
       1834, 681, 851, 1826, 666, 836, 1878, 1028, 990, 651, 826, 1871, 983, 
       969, 639, 818, 1899, 1073, 1053, 967, 1035, 1064, 1034, 631, 812, 1071,
        1033, 951, 1032, 1058, 1901, 1031, 623, 804, 1012, 1886, 928, 612, 
       793, 1006, 1881, 910, 597, 779, 1797, 582, 764, 1791, 567, 749, 1788, 
       548, 736, 1863, 1056, 1075, 1074, 1076}], 
      Line3DBox[{725, 895, 1070, 1069, 999, 1857, 712, 882, 1845, 697, 867, 
       1835, 682, 852, 1827, 667, 837, 1879, 1029, 992, 652, 827, 1872, 984, 
       972, 640, 819, 1054, 971, 1040, 1065, 1039, 632, 1902, 813, 1072, 1038,
        952, 1037, 1059, 1036, 1896, 624, 805, 1014, 1887, 931, 613, 794, 
       1007, 1882, 912, 598, 780, 1798, 583, 765, 1792, 568, 750, 1906, 1120, 
       1122, 1121, 549, 1907, 737, 1113, 1057, 1078, 1077, 1079}], 
      Line3DBox[{726, 896, 1000, 1858, 713, 883, 1846, 698, 868, 1836, 683, 
       853, 1828, 668, 838, 1880, 993, 653, 828, 973, 641, 1893, 820, 1060, 
       953, 1061, 1062, 1890, 1042, 1041, 1048, 934, 1047, 1898, 625, 806, 
       933, 932, 1812, 614, 795, 1866, 913, 599, 781, 1799, 584, 766, 1793, 
       569, 1726, 751, 1125, 1096, 1126, 550, 1908, 1115, 1114, 1094, 906, 
       1095, 1005}], 
      Line3DBox[{727, 897, 1859, 714, 884, 1847, 699, 869, 1837, 684, 854, 
       1829, 669, 839, 654, 1765, 829, 974, 642, 1894, 821, 954, 633, 1891, 
       814, 935, 1818, 626, 807, 915, 1813, 615, 796, 914, 1805, 600, 782, 
       1800, 585, 767, 570, 1727, 752, 1124, 551, 1914, 738, 1093, 
       1123}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJx0e3k41G/4bpYkoYWUJYRIiISS9JSyJFtKqWSNqCSyJSnZsy8hEUmbZC07
rzFjJ/u+jVnMGLNUZCt15pzz/etc5/fX5/rMH3O9n+e9n/u57+t67r2OHpbO
nBs2bAjYtGEDF/tpA/wnnIPJsOtoIOe+xxQwasQtpcdVwgSX9rPsGiIU3ZQd
aFyjAjjFYOdEqoF7XpUQ8GoG3hveVFoIpMGai4Jrwfsa8LtV7iikOwWXS58I
6y/Pg2icy4DRoTqoKc0+HXprBKbrZiRaLzKArM83/iarHgZSrCLl2nvB+2p1
DM9DJmQfs3Te1YvgvpeUVMMiDiRdpgJCTVkwU1xcv+VyA3gfNR5JLXwLE8fS
+TvKWMD/5cUXXGwDyCBcvkzXF3R4v4y9XA4LGozSgxlhDVAXxpN9a7AN+cje
mf0qxAKvi48OFp5sgI6bAVv95QeQMs7M/NkeJkxyYG4fj0XwpSsi9O+XMbQm
frndaJAOhrr4tbqz9fDk4wl5FcAjDZ1qy91W8xCfd5jC0V8L5Zwn0z3qCShu
wegvT/kc3Gsyc8afqoEbGlo1V8ZIqHGP+buTW6mQJ/Ji7kB+FfwG/uvHt1Kg
8v0mqSM/yOAKWzIvn62Go/ozjm2XyTBqwlfUkEKBUGphTqZqLewqadNqPEEE
lTeRUnB2DipmNPdZqrLrZhj5ebIYD4l7e/4tbJgHSaeG1qPiDbB2K/rSlO44
jD0zj+t/Qwff94dzCoUwwDD40Ca+eQCW63eWaGxlQiQGqR+hY0C26d3jW6gF
TpYYF+BEWeDwI2TAPKYRKgVyltOdPkCxEjVCJosF1/Ucup5MNsLDxd9LvL8r
0LAz7kzIUxYYz1U7UfoaYafvs596EV3IRNPztGEHE6wr3vEb3m0Ezxxbzysj
Q2hTRUVMUjwD+rDPbq7WY+BP+LbTAr8n0Ta3GVzx4jzYfnz+Mme8AQLCTny0
4SUg8Wr/cKoMDZbGLxbYlSNIFNXlrY4hoZ97Dt3OAipYGxyw6HtdB2WvPxaN
Jc+iLPFJgSG3WWjuCKvMTq0B/r+hW5K7qBBpsjInPUeE0HfzUR/lasGvVseJ
rEyBU29CDuJryHDphK2xeXA98Cc7v5uQIcPqAe1ta/kUeOYzkPAuqgEYZ2OW
DyQRgJbLFWdeMAdH+74td5Iw4MyZTr9SMwUuj+9H2Lyfh74MP+kuwEKq27rD
CfIQ4KcDZEruMeBr9e3Ibw9xkGrTc/6dXQdc5NfN5O1kwvlBE+/Vu00wdPpB
sl/9J6ibvpSWF8CCPzlR+jeYTbDrQKrboZu16A1js7jqRRbsWb/9T3G6CbK8
XzBMoRftKvJreHuVCcM1ycmtp5vAkJ/2zufyGGo1argyVkmH/V9Naw4dw4H0
c4pkP/cMmiGf3N1VSIOrF8R4F+mNIH+P++2ENAkRHAS2rQZSYX6DV5FjKAZ+
cf7M/Ro7i+Ly1OTlLs+CIvMUXkKqAShmctouN6nIZuTmY8/rJDCwVPtZkVMH
0ZcFr25HNEjPSVi0UZwBh94HvkUC9bDgc7L8kdEcGH+R7FBQIcIwgeNUQHAD
6PB+fKVuR4Go0Pi3Vg5kyFLhD3RXboSTZ1VFqyZJEPWoVuVyHQUuCQ1w1nLh
oHRaYdejlBnYocYVqq1EA5Z6sMPBX03w8Cmj2ahgDEInzl364k+HkV9NR1WG
WuCeuRWRId8D9bqTMTgzJnz8KIkzsG2DiwE/vsxzF8OX9XPxAnosiP08GLZT
sx3MtxW15Xhj0Fnqy670jSwoES9SjxFvB/3u8Ox9lQPo6cZwm8ZXDJAffnnF
YWcbnETRfsULU8i77+PynhvzoNOnXhXg0gKYQKX4+yFEVMhzhvN2OxU2cJQ5
p7s2ge0J1uWUyFmkbx4hm6w+C0L2HQt/b2Dh812ZW4dqqEjirq2F0AARtOOd
NdfD2biik5qXLtAQw9iEQ7lhBhJlu2/+RgiuOPueyiugQ7m6r4uWwThcsuwm
dX9DIBHQ8LogcR6SE7Ybj52aBik177NWDRh4ql24KWxtDow6zEzmOAhwWIzy
Yp2FhUPi9oz6rxRwpX20XKgjgYNCyBP+R83AEUdgPX9EAsIeP1MFRIFvj3KN
Ntm1QVL95hOFP6chzMIyr7qLBk8GM34EOHfCJrM67yRcP+R90TXWdGeAhjhW
W2VnN5RKs37EbCgDa6Yn5I0yoeanUYjyhR54ot527H1GMxLdl8GV5sGEX4O0
mVqtHijc4WGa1j2KZmY3FB02oMOtmecdVX7fgJy2anMngYC+W7qc2yY3B994
W15phHRArA+FxzdpFlVvLvYKGSXDQYK6QqBNK+iceGPy6dwcckvYrPBklAA/
Kp55fnvQBHeUGDE+8vOoL6fJo+kUHtSOW3W/4sCy7/Po7dtedFQV+KBMdesE
iOs1iR340QD9n98vbtJiQpuFhTTDuR++qF0JMXjRAN37cofIzxlwlj/ojEHw
EJQ6due4d7B5b0/dd440Ong+CMHveDcGX1PFEwWTmqBlJt5AYZkGGcfSO/5u
wYOu2Pa0tN1t8CBK9ozNWSp82Bw/dCWQCFW0PNzNsC4QS9i7W2OG/X4jbuhh
KAVyP626uNzsBVUHH62tmFG4f/Vsxv4QNs+Tqmt/SQ3AYg9jQI1RAdu39cnT
aAy4Gb+/0Is6CIFXRepFyd3oVa5g8hcBBmxQlU/sThyE47L1c91reHTSeJdV
ifUcJChLl2+36Icx6uObscRZxJuG/WnUQQLttR5LqncPfN35/HGzGw0ZNT4Q
bP+Mh8hO8hadxg6wHt+9+vcRHaUeFjym8WYMjJ5ln7nwogWKXxUpaNYy0CXO
sLf8VweB94ry/norHOgp440GHjLRpXNTnXste+F1btCVkiYM8Ht5+D7UYsFk
Fokm6NsMXxr+qTPYc+po+otbD34y4Z6EZ1fTtnYonqMdzw3Fwu2Td60JIUzg
5SvGSot1g6DXhbgsTDOU8p//8hrDANW1zimqRj8kjOvKGx3rgH3z9YKHzeiw
HFNqP/VuBKI6vTTNh3oA92HeJ1V/DhDF6raAAx6q/DJwkW8GgXz7cu5hLwLI
Z3DS1+hk0DR5IrgcNAGm+af0t7Bx4dVgzDr0iAYd76lVTl4zEHwil7mwPIay
0nlIYqMUiCs8YXwyCg8mAmtcOX8pSLtUcC55Ag9nare/+PhyFHqtD11ouERH
8SPnv26OHoKFrIknVvb9QHDx31YryUTphw4lKVd8g/cL708dv/UNJNcDYz7M
MRHBVbojdbQJDlH/fNo+3Apxh7b9/mvCQinnOlRbbrLnEyaPU46tk96uaN39
/JSFxOtijnBwV0PrzNKErGQjuLfwLg8VsIDnu1u5yul3kM997y/+PAZekHzN
K5JYgFE675089gG2+LtFjRCxoCxo20FyY8Eq67NofdsnkK7mXHrk0AK/XiZO
GcuxgFBWygJSIXyqyso8dKsTbp/WprZkMmEpx7boV18xDPSpvz6p2AfCKT6h
gZcYECF4CZNyuQQ+vOnIblMdhQBZwa9OnHNQaBKn9+fRZxDOGOppwhPBh6YQ
xrOlCQ72rvyNSrCr/79PFghELLfrfiYjzYVSYWOnEhSz3bTm7j0K9O/iN2wM
p6OL1+TM0z6XoW0G9q4mKRNAOKlFZFkwUUNu4B7jR6Wo2EqH7vurH6xZfo+c
NrBQsrC7yMm8YvRvT5PRtaxvsA8jIrzxEguZ7BBSdYn9jCqrlgghk63gYLTS
GR3OQv+6t1isq+Uj/OaEW9O/cCAqo2M+ksdCG/ZXSdubvkcuvRrf1qQbwYuK
C8qLZYFcgK2J1EQlkht8Y77TAgNbQt9FTNuyYLO+x0rgPoSMRpSst5CwsCGf
MrC+mQX+09bSi/E4tEE+K8zSvgUEjUOy1ByYYEWpe2GT3IlE96Tpt57rhESv
Lp/MBTpISV06WlQwgC6euVOn0tQL/5QePbPNnIPgnklt6fgp9GWmbn+8xjCo
sMb5c8NnQGm0IzhqwyyKWkjWlQ+ZgvY8AynGg48gKKYzRC2mITGuNOf77Plq
PqmOMyidRIPet+SHcBR0af5C9RHSFEhnx+ljyymo034ZwhkzaLop8oFl0TAI
t0W7d2XNoyKG2vaR0jEk/Cxj8eDxPsh7I2Mfe4uBzJy/yrBiB1C1ttD7G7Jd
IE86fGPsAhPJq/G2NQb0IOJTywrPPa1QjXknfXOQiR5zStSKuHWguOLT4z7h
OMhVLkiOk2WhsQ3R+MCAFuSX+cTk+ygGhlZHNlaw8faQy98sOLUHJZv6K6ls
xABe/NWNiwsMiDSlhbZZDyALyrhLjT0WrD4va5hP0YEYX5okD6OIT6DiCPF6
Mwir79xeKzIPh167h2O9p5GVdISNtEo7SBgaDwxKUGH8aMKZ7ngiEnOlHH6w
9A2Gzy6+6JMgAr5jpnnoNwVd69Nz0zPoA42Pr/ZNOAyBJLEn7I8YHTGPJkLW
5AAI3bzzMln7OehIZamz+JhITPGRIvnfIOweiGjb3daPui8Pzxan0NE9jXHH
LdQBECl2Ndz4YwY1kbsuolEq+rSiQf/p1AfuB23z3PdRkDPnrPfKRxIq7Hdu
szHrBmODp77HzGio2eVl280VPPqkHzV2/lk7uM+kzZap01Hg+tGfnPwTqOqa
lHpbWTNcO1MR8fAyA3lzNEerJg6jDdtcXj4txAK956zaVgEmOmXfufD66AAa
rtfcl2yKAVOpcLfVKjp8crPIaPk7huS+l/8qMmmAnw5lrrpsvfG+xC4k4dA0
Grt9V1fgeCPUbLNxKKbPQemKt08FHwG9yfSy1YrDgf/X3jt94RTg1hg2WSWR
kNnjt/OD51qg+3n7yKm/RIjeLPA1RpSK9keKjMTYtcPDAZtyv/FJmPdXPxFw
cR6pShV+hftdcPjkZZ4Nrj1wn2/vxkAiA9G2FWcdHumGlLCO9GblcLhw01OX
h8VEEZ0Kio9se+BnenTQk4EupBvdNnpThIl2XFgOJ7d0Q3r4q3xV9Ql0gm+z
B3fTPEoSWMnyvd0F9+U9NfQViej0gTWdnkYqIuoYfrzv3Q7aEGWT/W0WfXZU
2CudT0a5f8z3SDxqganDvk/wdnNoiddc43o7AUn6Rt1hdOHA8B4thqU4jzZ+
IErn6uORrfCAvtvDRhiWslQlONPR9O+jahyWE2jZcWQ+LqQB1B6TB7hqaaBU
KqkerziDaOFWV1NL60HbZceKmPEc8Cmf5FbfR0TvZb543qQ3QHpqore7GQXw
3z+clL5DRlUcmwxfVjTCwOfgj7tTSNAQ8/67wiIFnXzW45tQhAOHW49Loyh4
CB+7uH4yiYYOdaQcO8TGA+1Yo/PypRG4GDmWorhIR5m75oLmQlshb//eNp2J
NngskP5M5RMT2etUVdzvbgPHr7yhbkZ+8O/Gj4nc8yzULq6oKa/XDnjyx6dR
h1uRxSPZ0DIMEw1w4XwD6tugRUSyPuP0MPrwT4HeoMJAGzbWf2lwb4WqfY/m
mnTxSKrmKFP0Dw21i2QwPfOagTGWPnxznIjCV71myLFUxOWiw5dYhoNDcqtt
qTmzyF97QEpaZhbt12hMNu1pBN3ci8oqdVQUrPnu6egwEY2OHrB2EcbAZJ3l
s9ArNORFNrbvrJ1BmFRT1vRWBHXFStJrZCosWLs4/Gomok0Yg9C2plow3vMv
3+owBXi6/e28i8koWfCj/HtTBPFzrXJHVklge/Dj10ftFHQvJhXKuTGw/Lrl
jpw4ASqX7L/3r82hX9nyR03dG2FEPip4mn8S6uYmWERhdv9t+xFR1YyF+ppI
zj0+A5D5+eHW4UkGotwXNrxCx7F93BdKl2UTvMn4FK27k4U+r1fFHy1rgq8+
+6qP/bsJmwcatPzY8ydRWGkyZ6kJtpRxXNPzxKE/LVsf7JdioYTBeLv+D00w
3LntGWawHznX6xfeWWWg/eOkle9jOJgILXscpjyBXhofvvXKjK3X1DPatL9g
QSVahRXzbAbdDeMJHbtOQ2SF3xnR9uzzq8fp6V8goeM6vmN0ayra7fGTV50L
A9fD6ygm0f8b/1MFN2xnUZJ2iOMtZwQrAbyqPhZUNNdR4fc2kIR8ItfzlX/V
wh3XybuKMhQIu6QmazRGRjt3r5bQydXA0LzwuxTIEPf2AGXDewraup/Qc4FS
C1+SZFP0KQQY2p3zVTpiDvX821BxbbUebF6tnnwlgAeB7DK523bz6A/ViiOL
7R9vhulY+9qMQt1Y+bSgIAMtaXRe1PbEQCv3nnD17F54c0I4K+8OE1EfLyzl
ajbCBnnLJ0v7G2Hh50jGwYsstMm4bFib3S8Xax809ARZw+PhB92W71jo12+9
gD+ERviH946Q+IJBxp4eLxOsWQgvumiFLWmEPVP+xW+NepFhzrV/tx8wkdlk
UF+0UiOYEI3cbo6MoEr7ThynEgMN30qPPnsDA80mPBsZNtOoZGBhfiR1Ho3f
4zLJ8W4Al8dJrgNuBMQgzwtEEeZQ7Zaxp2az9RC7Q7ErM5+ErvFnX+tUpKJ3
6Vf5sDO10HvkM59VyCwKqHONjH80iwqkmvL8f1TDmaICvW4vMszznPoj/YyC
gvS/vVKUqILZTr+FOD8ibP1QL3pHZQ6JfJY8J1hSDf3LpwupEjNAwN/L6vpG
Q7Ickl8d9Wshuw+tudZNgL3afukzV+gIt3nnWb+WOuj6cJgx7D8Exw2WbH2+
Mtjz5+gHNWkESy/Xzoz/Ys9DBeKWgjY2r1ZpFv8SbYAdYkmHzT4jmOx18E8O
ZKGdlrER1vcboP16pMLuZSMI5M4jC9Ww9VdP0f2kxAbo24xTstdESOVcjXRU
EAslPb6yJ/deAxwkxV6pyPiGRL/0DEV1M9GghFDKe+EGqDa61TSiOoTue7ik
uWIZSPDUgS8S2xFsFVHTPGMygeTEUPQvHzrae3xwLOJrHejpKnbXtePRwCZ7
0wnOeVQg9zTq4eFauCT2y+7dZiL6dfets3zwHOJ4H/Fc/001jBsXH9rMIKFN
VluueHJQ0Yd933ubRapgaGKrUIc7GYhWH0i1URRQ5apdlIVqEHZSOsV5ehY+
VyVqn8fNQtdkg2bCzSrA9Txo8tv/DXQrcgpvdDFBW+VktM4+DDjyhXQ6q9dC
x5ncOZcnLIh8Hdpz/Bnbp9MSvNxyn6M7P6LHJ4tYkJroV3f5PQb+qt+SEbiP
RSrtGbxmF1igfzpZ3McfAzuLpPFPykloT2e3PK88FagHmjsGg2tgfXFr5sky
Mnp6lpsgYUSBUB5SuEpmNURzeL1tc+2E1uRdb/8MMcC//Qgmma3T9mzGlyUf
LEau51dyhCKYMLfHylizsQ90WnWNdrcOIhmDJd4tNXQoE8NZNc30wvuxKz5q
hBnE7//Fm+/cHFDO7YhmCfTAIF9PQpYFBV1/K1X9LYgIG3d3X5/mHYDfz3Yu
2n2aRawnXF+zH5Ch6N9SwffVDvCodVGzNZlH1U3Ut6Zqk/Bz08Sju9o9YNxm
MZSYxgR9Tn60FtgDzHvFO7C/MPC6vLfDtpwKbyO0gg2sCaB/K5mTFdYLV3zu
ThMEGbC83yRRLKoXmp4d56XrD8AqhmbdfI0IncqcXHaiFHBkyVI7ng6CH4Nv
6EMb2wdcvo4e5MzDZdFVY5nwUdjqV6GRSpkDFzJWrjFqBEb0Bb97eU+Abopw
jYd7Dfqhq7azrYcOvTxpkhGrY3DgsMy8HS8e3oh417z9yNbNm3f6xV0kA2jX
ixbaT6OFFevuE7vnwL/JdfnQ5RGYE4tVUrfpQT/3na+diCdAuQThOAGxv8cy
7/eyEAl9dz22fM1sFhIXMzfGaQ7Bfm2hrI1PqWhzwcnVfL4hGJD85S5qPwPD
1PV+D3kGspshDWR0tkCEwePt0YnD8HFPHjM9g+13/gVz1G6rAUL8EWmtu71Q
bAdVoRcZSPv1a/4tw4PQ/0lA6WVhOyRvwndbHGShZQGbaC7/Yvhz8UHblaQO
6Gw2cyIsMlGeWIjqH7bvfrcad6PXAAuWMm+GNnmyoCyKuDlTqx6UrtJFNW82
wg/9x/dlLZjg1IPZ9PNVO5BeHCt3VO+G+680nr7vY0L5uGLNeXIlmuDbJxfK
2wMepD2yDyoZ8AyrXKDk2ISurREDxVQG4UdRYRTP7VmQVW4wFH0+CedC4slp
zjPwxccEv+sBDQIU/9ry6vWje4618NFmCnh8JBROk3BgGq/ZKJNHhIU1pYLc
CiqsaD3dWsk9BX9iI8OXF/HIrGf8NnfmLPCKbTyQkE1Av9anpZ0rJ4H4esgN
Y0OGE1ongu1y+pGRmMzxtTtEdFySJy3DhwLeDny6hs/mUc2+Kb1m6R6wGAwP
5bWcAD5CqZQGk4LGtpc0BKNxlGTwK7lQBA9aO57VONjS0VLs3V1g148sFCW4
fJ2HgIo01bZzMZHlKpRoDnSi+jx3Y1dSDwhEjXE1Z7KQa/S9jZ4Lr6Cgf8nN
5CEW3H2zzYXesaB7MPTdjgdZKHMLa5NsbCMcO8GsVj3LAqcYuY6mlkJ0+r1M
+DZcG2gwHEmP37PxL7KJIyh8AFEKolvvCbVB2d5ANcmleegW+aH45/A4ml5s
L2/S/QYnfv+ItGfXaaPwYd0/QgS0+MjpKldKHyDf59V2wbNA+nGHQ+f3KEId
wSxsAQFCr9y4FfmIAMFQVjD2mIJ4K80jhDqGQD0H/xZZV4Kjlky0fS9bL6ud
LUj8ToX9iaGG91jf4K16r0W0FB356E4tvrwwBjd+uyomDRBQ/F6JI9cb8Ug3
y0NYsZwIRaLbf4ldaEF9O5H1lQQ6aiy9moecxiAojKN7bBiPFgMsPe/nU5H6
ObNvJitD0HVexW+nCwWVnRvfklxKRC0rymOVPX2QNoCZo1NpyD1b28J28zS6
P8AveKb2G2BMvzy648hCctrKob5fEJpwV93Rac7WPx8vR/oIsMDM4mu433gr
+jm55zTdoRGuXFez66+nwMdj60GJziTEx9e23yKpHRiyvovVu2bh+AmbU2er
2P4rdqZcN3cAKh/e9kx1HYe4nae1HkjS0Oox8/dhvSOQYtwk9oQ/GwIF5X7f
5Wag79fOexrOjcGZyHW98z3DaI7zUPS2XzRk4K386vSPEXDhkykAbybKVDz9
T0SvFz27k93i19kI1/duX5bvGANOdS6zcDSPdizcG9DW7wU3nSc3l+xwcCCt
8ANJnYnePc3KDYjrg2sDnn1iEQ1oZmxXSpc1E8XJ3ttFi+6D15fKRyldI+gP
19J0tgYdSXKXU5QNeyFY0bVd+RoZ+uomtbrTKChLYv/OwelqoDISSIaGs3D1
QOetwLpZ5JN+5FnNehUUPZT7KMDG1+qJYcXzwizEe7lo+0UrDETNSU5kyJWA
t5DMbr9sFpoOoflpvMIAt4n88lhiMfLC4GwxOSxU4HvN+2QmBjbUUzeMfGbX
XftEbrIoC+lq3nV/Y44B+axCxaUuEsLnFd1rF6aittjtpofGqmEW982Lg4eE
duW+DDjdQEUun6KySseroLnzQuyrDyTY2iXJ9UCHCtz1IknLFlWQlvWc1/xW
JygHzDh6fWdCimiVobA8W1dcps8diKyGy9vuXbWJZwHd8cSn1QcNQMhr+bl3
LRm9x1crP6liwdQ+a492tj7xqby5mKXRiNwLbF/buLLgTbzno7RbDfBwf89M
zAgR7fjHIh4nUEHR88DDDp9q+NI6bnls91ewfW94KiGICZc//D3s+akPfnFy
qv31aUfu++aEGXMMaLnqOZv7sA869OwadpuQUBzZ+8zSNgpontkbm0roBZHh
wTfGBCqysXCzLH5LgJormQqtR76BE1WPFtDChD3WygLyxd9g6FX1H7bmgJS9
zIUHwvOA8xgYFD4/Ab4Dk3Fb//VBQkyQjKTXFFzsnjuKoudACq21LeQOwzVv
GKfGzsJoU7C9AQcRQl6MrAkNjIDERF1sx1INVKtk4e3H2b7f11xVAzsGCtI5
e/TbRyCzwqLfqZIKxjEmS8JieIg+flIlR2wAKYZF1Hbfm4cn/lmnuYTGALse
cXJMEYeOzXcTD2jTwCLzx42duTPwhj7Z+aCTiBw7knJuO5Dg6sThtU33JmFL
63fhwx9oSA41qK0lj8PeBz9sAzWGgHYacp/cYqCUR2IfSsP7IMy6Z8pCqBcg
k+allcZEl6+oeRiyfaZAimhFrE0HjBXXt6vIslCMCvaYgEsLNFvNliv9w4BN
Rd8PuRAW+NwpxEiz9RfPrt4f/ccw4LDdOucfnQlh4xLFiqrFoNfq9U0F3w28
uu6ieXuZ4KZh5q9xpgSWayXCmRKDwMGZev4UZR4WHDVoe2uKIWb4u9YU/zTM
vzgsNpZMgLVJVx3h0jeAKYnxL+ahgUKtvvDj2iHUgLglYjLfoftZrWnCMwwI
P298VYDtT2eky+aOO5chFm9XqP2/Geh46Td3/CMDUU/prkefKEPDPyYUhCKH
QesB1kW4monUlYQbz6eVIHOexetYy14YFmHSDfJZ6NaQ+eogPQP+/QtbHGX7
nNyTZse6S1gwcUXVMLbyBVo38cpgWbN14+a4wBYcE3J9We59u1vRnQSacUZm
G4BnjQThGwNmb+KaVvf0oj+Xv+4ojO2GrZv+GeXlzUOpG2densQostus7a5w
dABely7mT7nPwu6uwor2JwS0r/U4sbtqDHZHazJfzg6Al3rgGwvROdSqe+hW
OB4Pr8OizCw/dqE1//sHXHfSkP7DhYO31/Gwx3bvbllFEjJXtB6V+kZCw0mb
6mUPjoPwsln1FUEaktaXa3Ufm0LGe/yPfy4dAInlFIzHZzq6suHg71mzYYRZ
zCouPNoDjXoHDpzwYyGVRsH4uMd16A6Bk5bM0wiuTcIjhlos4Jpp6wuyb0bt
a9Za/zTZvGRprXiqYw6eVvjviYqdQVbEXWPtnp1gyZceVZ/P5mE1M0GejT0o
8ZOfz9xLDNhqS9ErmX1wQOrq/WINBvLMuZn+fksfXN1pujEpMA62LWknWqUz
kbnUusHRmj4gU6T2Hl7pQQynuo1TwQxU0/0l++LmPnAbywLsExK0CGq+brtK
RaMpYqFYchXQI70Ww0JaYFhS2PSrGgt9EmlMeWLaAH8+ffCX4SoGxkMPTblP
LDQ+dvCJ8bMGuJKyIpWqUYTGOK9RNxSwkNnTyAZGZANIeN5mYI61IJMp4jHQ
YKF/uwTy/c42gORw/5/jpWT0HnH1D56joF61WsPWv1Vg1KQUPO1HhvTjugIO
oRT4o17z/LNdFRSG+S+KtJHQZ9WE0+fFqMA3oJREjK0GtZ1ceNzCHLzwCtz9
JKEHbnCMYMTb8aDqdS7hmjUNfp0jxCyfxKLnbwz/YkLYutinITE/qh/wCdsI
qXoUeJlC8n1RRAQl6fTAeK4MVF2Pq5aTo0Kya8drzXUSfAubPyonMgpt+a2O
vzmHQT2ia8sG0XmIPdRKLNMaBneT5b28+wfRTq0ovuKZeej3HFKM5BlGb89W
YlZlZ0H6vjGJi5cEa5Y6/Gf9iIgUEr1AsCdAWrPkzdqIGdA6OnZpy0080ryz
3fDt/l5gLDpePidGAyettWubivCo4aDzcgJrCMVL3a7Z30qFE2fMHh3wmkc6
CUN1o1drwdFnW/2R7XioWhBwtLKoR4QkviqboRGU2drsbAsMcFAyL38bS0HX
iEpjrw70o4J83SUDdyLs1ek3unOTDA9p9h7tCRTEfdSOZLdUBaP3En3+TJLQ
kZxTCjQ+KsIVYnGD36vA4vv2gEU8GZY46777y1Eg+bkdLK9WQkuy9Hhc0izc
2AqfT3nPwJ3fjULFKxPQK5elefE2FcysTb6Y0ceg7ANm21WXadAX3Ku38zkZ
piR3xB8e6Qfsg1UnUU8yxF8Pczv9cgY8/z3rXwkjwV/R2OEYiRmwv51dQ+so
Q/k8Tu9dc4fAScrqtPUAA0a9w7ZEuw2Bz2rEZDmFAPkZNy49Zd9nYNWlNW6R
D8hKJ29cNZ4IWGNKiLTRHCiWhimfX6Qg4PN+kPKoGUxdrLkifEiwb+x3NINn
Aqk2ucR4T+Ehqz36erUpBTzFpXdqbJlFB/GBHyq+jEKSD8XI2pwIQ7d1026y
+2R7sAglZdckyH+Ifln9ahI6eLc0X9enoU+dT38YjPbBy+UmwjWzaTg69nz7
EbY/6jtz+/2mhBIgGB0OGN48Bjkxtu+0VOZRLS2B1F4/BNXRkeK9f0bAVexK
tmfqLCxdOv2T5YJHF31begyMp0Facrel5Ds87NhPqe8+TUJUwsF/aVYEKOpV
GIhj1/OOyiXB0uAuJLg1NTLEcxbwJ9ZDRK99g0uRYn+bfNj33xl89qUzCS49
G17f1VGNSrEPA5AxFYW/G6o6EE+CA+GxVX3rfXBhZTJhoZSAhLl8d/koUSHp
Q0Aq61wdOif+xfknPwkRLToEzn6igmpg9NgbvjG0Y3E1Kvz+LHIqeb9bsJIA
6l8k+R9XEFHjEC1zqzMRvQ0Z0vywGw/NZ4yyA7FklG6aZGb6bAqlC+0l7u+e
gfAbRT89bUiII8Nu/aE/FZSOzRC+ba0Gg9XZb3+VJ2Bhl2euIdcs6Dzely3p
RwD5++HOUU/aUMJUkNWZAApk75uV6mkjgduFgEHFqEk0edLXWrmIChSZjAki
3wTok0zTPZh4JH2J6flGeRYY+06IGFtPQ1jtJ6tpdp14tzEJ2ZkfYdgokZjW
MAtto5N/fw/PAH6GXuf1fBAM23pvFehToSg0/V7S3RmYcvE4P8TqRYfWnKK7
jOfgw4lbXrNQg0hZG4daD6Wjbj5ayf5uFlSa5YyaXh1AHLUo6bLhAGy0DHHe
l06Hjr5PL1YEh5CQHEHoqesIekARONThNQ8TJrnXOQOoSCRSwvJgRSmKDTN8
MxhAApIA79DFfyOgrH7fnl9wFgn9FXKziCDCHvv63868vWjAt3Jp+jUFuYV7
3JjtI8Klr182vf5Dgly+DoftPymIAyvZ/e5JFVx5m9txwoyMfpO9Ht36SEEp
Mtg3nlFV4D9BErq7iwyUnG9q+AkKdJWsHT/NqgQNrZD2i8vvoPjVI8OEjyw4
21o8a5yLgWtvLid2z0VASqaonmA5C5RMpx/s2o0BjsP+Pkf1y5Hi1h/8o0ks
qN266nDkBQawN/SCDryoQ6Y9I8cEnrBA8ZT24tW/DXBJznAPRp+MHh64IX2/
kAKxlviRrTLV0H3Q7cKe1yzYW/mD59fT9/BMeKMPNqQRnK+OWZQ9Z0FYz67h
5mtfIKtWzYV3HAMzemYZo1U0sEp2Kz78qwhE8v6sawXOgJHtkdOHxhvBf2NR
+GY+KqTV87l9SSWB0PFjz6TbR0F1BlvKq58KT+N2Vl8yZIC3x+UXqn3TaCt9
4pnpNRIYUO/wWs0QwElEWGrNbwatF46H6YsXom97zadx9TTYXycWrlZPQ9yJ
af82cA8jk7ulLcT4MdiVsDcph8TWCQEaR6hD3cjsrVf0UM8U0NXpTY9z2P0u
VybZmV+GguLyOU3np0FnZ92dtNsspMUtayG0qQ66j275mXkXC/LJ9xJKU1io
quXk5BP5EphIJNJnWhth2Db+iscDFpjLYWJ53tcg8aF8x+9PG+HmCu3brVcs
CNqMHT9oU4wuTKfZGc1j4LXEzNWjEw3gqKcVbvllGN3YGzQUeIcBKWRTcVIt
CcnSvA4oCw6iRnrTl541MjylpOMt09j+VJ3v6ErRB6TBFezddQ8Ld/TDm/ZH
s5DSjUOT5pe+or+PeJJx5Y3QLvpdRGGCDAaBlZWh8hTkepJFF4ypAkun5zkF
D89D9vQ/bFUJC928bv1i6B0GxCUkdlt8y4H5fHfO46UstO/3axleEQykFogJ
OWjnwEORweN/ylmIM6l063x8A8jjcp2HUhtQg6Wo7XV3FjrCe2a1PwgDbuv8
Jf8UKhHZOOWBVxILPeNq5+XiwgDjfFtiwb0KZDwwR1pPZyF3k3jVsqAG0Ow/
ZbMzkISY2nejQu2pyMp5Zk+vfxVUPzTzKCwjwk+LtU5nbTwojJ0RyzAlAt34
0sHP2s2wfVX4dEHMMBTb2pbq6zAgArt3LIFIQm0b5zCsTZ3wKvdANl6DrVPM
TnLv9aMjmUTXscmPHdDKu7IU3zgKwd6VEV3dVNj9MFN2k/MQmvqgdjepDw8P
LxdpLlgQYbNUpLHz/CQqrfJ+G5lPAt7K/bPyl0ug/a6ewWugIteU4YEMHAks
m2K0Obom0Yll3LvkowT0lDTA2f6ZDBtqdj61NCwD48D7HmnZLBjQKI0m8WFA
02lLp1BFKVTL8Ty99pYFT7invvaENYAAf+hWx5p85EGjjQR+YsHpwa+K40IY
oK1dfbre9xGJ5+VPFBWz4G2R0reB2Abw0+Hf8PkcC+1IbLs4uQMLio8dL+qV
svU81SGdfJWFxN99o7rsaoSXjpRir+2NcL71ugIPfh6+cG1WUn0+AKrlPtxi
mGGIDWpfaZalA7HhSKHcagcEkhLLyDvGYYGulyuaQIeoNfUlhfhOtLotda+E
0Ch4zDfXe2TQQWeTFg1TVYkEhpX6gjZOQEiFUz/hNR29+aAUpDvXjgIfkyWj
tUZBAfOk3FGFgVyqeVMKQ8vQ3YefPmr1j8KS4bLe1DsWKr8z/+seKwS1R65w
bmlvhGxtI1wbW6eqSSmknLMORc4Nr18dU2gEdQ2PlwuFLHjVkP2mhisENgeV
VBPYfZRzbP6o6BcWONWNDtt4hMCrPR2JzpcxUOLXzYm/xoLIA7GhX9m+3EOv
wP3xCAYcBwwcDdzYfPX0sZj4OQySPVLtdEsfAwf6JxXSaA2Q07LN+94tFqJn
CASVPMWAfzN2wfFTJRh/DtnQksBCxScfsu5vxMAbkReazdMV0N2MFc1h96W/
bZJd3ZMG4NXbvCBcn426rVk36tl9BHJXRrV2YoDMv1JyZeoVcngWNeZSwUI+
l/1Cj7P7yMSrJLAYl4IuP/EoorG/Y83+n85+Nm87RJgvU9+wkNVTVY2grkxQ
SDg7samTzTMPrwWcLmABsShNet7/JZr9vT0Mx8BA3cJUZNWneZi9E3+xZrYe
qQYpmC4fnobtU3kiL8VpQOagmAQxR9GjwSGjXy5jsNPR3Cz58zyMBJQIWyf2
oPeyukaPQ8dhf3+JleFuFnAf2KnpLNUKAZ0Oph+PNMLJvHeO3JdYcL3xUInF
D/a7K8+RykoMGBT8FIwLYEFiqtxvEaU66BtgZG7pxICZU/deTg4WcrF4nOR0
tg15y/1I+rIbC3N/cyTt9Fmo4ZD/QPoQFnGLyd45Gs/+P50LYx0iGehH/evz
Aex5IrsBRTyzwIFG37mkytw01LDzFuzKY0F78KWnTGIjBJ1bZfIV9aK8fduL
HH2YIJcls+0aN3uujVsHVMR2oMRex91qC0yQ2nNR77QBBpwnzf0+Y5tRVM6Z
T+saLPiruOBydYR9Xztkbh9MaEZf72qeEhBlwUrOn94SPhzI2kTf7yfgUGdi
8RVXbRbcvX1Kc9+nRnhg9+iw4Qk2Dr0vrsi+x8BhV+qTM+ZNIPb2eEjKVRb0
qIpulTRsgIsesz5dCAumtYc8/oSxYC6k1EK07Ss4ON/dt1EaC08Ufhdb+rCQ
x+ppI8tPb6G7Yjv+bm8zrDKGX2az+VzlqrLwknQupEFpMRd3E3x4vCkuPJiF
TF2/M42vlwHNZVQhRAMHxvpl361CWTCYGqmN989DGLOix3VxTVB4IvK7RRoL
yNUpu44dfo2i4jZw3fmOBT9YKG6KZUF9hGLGT9dS5F7hvzdeEwv8Hp10YUsW
0lQs6uySwSKn8Jj+oJ8YOLV61lBZgYUYtuf+5X5sRHwcrY/NI5qhuFI73c6I
hTAZo1/XZTHo5KZiQksHDhLv9eit+rPQK4l7gpnUcqR244f6bQkcdPPHjps0
F6DvltcyXdh8WOPY3yyr0wjrUluX3l1rRdfVDr7s28WC+OfyrzwWMDC4Ufj+
jA4LqC97T8s74eDFplH5kF+NIGo88JWey4IMiFnxSA6GFFboiC/7/GHR+s5S
w0yU5/as8Xl3J9IT6mzjvdgIiVqkD+t/q9DC+78XJO+y4MR2zdkSHRwUIx+R
I2pFaFeoE8svgQUlXqbbb8ZiIXWT9N22lz0IOcCWR3lM+LpL/ljQ5gbQlr0V
mf/4G/pOyn4c2MmEtdZ3m/e+aQAF3cUMxNZPx5hv9xYa5YPvFxlf3KMm6A4X
NP6ezIKNvyQl6PxB4DRkcuByGQ6UFD8VgxALVZA4zBetW9G69MS5jd6NcMd1
2FLXcgAd7nV0iF5kgPINsddKtlg4bu2quKe3G81//N2f9IIJNnsEilrZuLo3
uXUWd7gdOWgYj39l41zC5GVTO7sO90KmlKoFmRDEo/VwzKkfRPVUggIycXBF
dmeuVSMTNlZldITadMKeY2YN/7iawPy1WwmPOAsez658M9nZDIrJhme7HHBg
ckFjUHauDykosuz7dZjgOJ14JEeyEcJP211pCehFTdFCp8RvM+Fj8kbTckoj
eBwLOeicQAahncuyex0poJSVW7PhVw3YHXHQeb+fAFJnfHPjpGmg5bYb+gxr
IPHXCxmPViI4PNi8chtPBf6Mt73hX+rAz84uPXgHHgIkmpS17s1D1TIttT2v
FvbUhGzh/jQDao4dmz2daKDZVZicHIjgRdstj08243Br3wvei0V0EP9xWUH5
Rx3opaz4Wl+bAj7qauafiXnoOffiaVNWAwyHGJw1XxqEtnH+N8QuBhzrerxF
WQJBsOjrKXrKCFh58/r+PsoAf6ymUuIdDPjVvdax4eiB2J9vszdWMYGR7M69
iY2HqcDJ12d4+kD47Luhx7ZMKH+J62wVb4RRD06/03xYeBZbJorsWeBYcFVB
26EB0uQbPt9JaIJzpnlCWeosuIyxOx34shGa/stNlPyXm7D9LzfhnhrzqtW/
DF0J3cNZGseCXqWHLndGG8HrYZfv9NE2VOQqWCawiQW75Q8ERbD5886h2Pil
2X5E0Zb60yPEhC0psqejedm/V4pNDfsOo3ceMZvxoQwoSYKskOV6+PAwhenq
O4Z2mckorHTTIV7c82yOFQZaihJVouYm0PcdYmcFzejw+Vh4dWhzHehuNJBI
UsAjucS/sTIW81BoaDuRFNwAVfnpAqEEPIJs492LP2lw9JHgvnzvWujku5Hc
+5mAHJ9tzhcpnoOMqv3GkUcRFJ4W7uzZSETOV1m5R5/OgZNcr8z2bTWQ7pbT
ie0modAHD/fbbaLC82untLyd6uDAz2iYZ+NppUSj0CKEDMceiZfqHK2HS7gu
bY+PZNilJMSIPUyB/HsVel7HGtg+9bZtUhwRyozSJN8tUOE60ddVxBUDHZZ/
8yL+4eHi6e1R7V9pgFuKqc7JaAQfhr7p2bFxiN9cctXekQ4e5nE7xDBYKHvn
GrPjzQBQRB9vKxtmwPK98H+jWBycuvKjqGisFcw+D/8UZzChXt3tYk14E+D/
h1zG00X5YycUKlC/7uk/f2+w4Mpm1WNec02gMudUdDmoC+0O2bFwqoAJCoyL
9J3+TWATIFun9ncI/XD4qFHlxoC7fXbw5xMODrrRz2TqTSGjtdRjzrh5OLJO
PmqUjQWF70dOyR0hoA8DgVpalDl4MNJwN9e9EdSuHUnQxZBQwwy++OEqBSrk
brhYq7L1pP/db8c7ZlG2DYWmLDYLHL1mFq0MBE06osZhD+bAXybV2ZJJAI4u
F8mECw1g21MZ7DBFAVpqQW3kCAm2jmv9NGvCwNWnmwr+DpLBmilTwCDMQoAD
oXjwChYYP56/ND9NhCJecUwExxzcMHll+WJTE+To3/qhzIsH2ZqohHWxeSCL
ZKbpVjXDqyP80+kSI8CD3zTpw8WAWjX/d7/PtkJ9nXjaqwtd4OQedHg5kAkT
v7zVrMPb4Pp/uYyv/+Uy4v7LZXT1X/9j97IWOXy+W3RPkgWrLnWThirtoKcs
0Rvd2otMfPbcPsvuC8JQ/sd09zYIjV+Ot9caRxPXSgLlL9KhLXu/oq5kK1QV
7Av3ip5BeWU0iWsHaPDwOL2O4dcMVjKykbJFJKTufaGnju3HWbUat7lKcJAp
oXaSU5yCrhSHHriWQwaVUoPfx342wo/hY0HF36mossD5o38yERb6xve2XsCA
i/iV57sq5uE+9mD4J9wU/N20tvQ0HAM62x69i3emwZ6G+A0y7jOwZT9+z/eb
WNhBVN/ASqdC2YL42Fo9EfjHBblvsHnEMTat009hFtaErld4mszC8dHwpt9/
WkB/cvfb5gkCXO3qOjiyRoWf8UJTEi/a4SqvVbP7xklg3LIptEmaB1tVwZNj
ql0w/fR4levPXsg4UxGWXMqA1se6nQ/tu6H2f8hlGPaeim9/34huib5ynktj
QuOZhY5Sox54Y0zacdB0CBW0ni6vWKZDY9FAzQmpbtAf85PFhOGRGOvC5VZP
Gkh4b3Moa+wETWr54JE3JEROjti7O5kCEa33R/V42sH8ey7j/RsKup/Y86YP
S4LWDRzUbRdawHeEs6SudQ7dxfqE7ThKABf56dl5PA4uKvYKRFnOo3cXurK4
V6ZhiVeyywrTCM56Ja+VPzEg9vbl9A7JIfhnTBf7GdbI7j9F69djdDaf3vO7
lDMKTMk+UW0iDvT9zpZMvJxnz93yyD6RKThBaXYr7WoB0eWhihA2f22KHWr0
7J6By37pZEv7DjgUz/vToGYWRmTFdyeJkMEGk80sftMNz9zUksp0CXA5YkZu
Pp8Kh7aEfZBR74OIqs3W/W7DEJfM7bB3ZR6WuQr1z/oOwIbe/38uQ62sLaTx
eTuy6Y4e2X6VAWR/LEd9wyC8/KgWLF45iXSIEgLMYBqkbLmeTxAYgHtPP8cJ
rJCQ8N4WbZHwWfBRP6l6JqYXVgRBtvTEPArj5TNKIE9Bqp18Sx20g4QeVGD7
6Yj+NWTW/tIomC4tZ1l3NQPP2TfFWkMM5N9tVxA0NgDL+3ae2rMRB4/osv5q
f5jwV3fk3tuUNpBLzZ+IPYSFrbYSQp1vmGCebvlxvaYLanYpeJoQm2A1bGqV
ZysT7FpIjp9GeqHCS0aYktAGfh4iFswdDLjg6l+jyZ7Dd2JPKHA8/gbX/p/c
ROd/uYlE0FAzmxtCuSpyMravqHB7fV0phYmH/WrKs5V/yKhfRsL+SykBnk1H
LazkjoPnv082LLF55BLWpphnPQb2astaO8MG4YulWkMuNwtJBkjaxAbhgGe9
MeTPdAtsop1UcEtl60w+h7r60A/QNPjjAiEaC7InH6fF+bDgGTmX+9bmT+Aj
4WTU6dEMFvoH1n4AC0RETlxtq/kMG+MuvYHIdoj6L4+wYcO2/5NHUP4vj+DC
I3hQP4+IpF5xWIgaFqMmgZucJw7OwU0nunPZIAM96Zh+N7a1DEWYI8Mrb4dA
MI33ZpQMC1GTlNzvkIpQ7r4LsoZ+nVBAcTefc2ShKWmxX+vlBWiMmDRxkNQC
eVu1R5EzWw+XDiaKGtSjY977VGns8wc7jGj9lmaBq6HxIDqPRaQqE/3Ip82w
5YWm8ZHPTEgbuYSJZeuI2nZVz2dn22H1/9nzF/9vz/8lk8CM3zuGRha0SMcf
UdHHXH8sz+g0iKmMPfDaMIve9+fddrpDRD5EgvF48Ch0vqvtv+xHQ3/wB9ss
hibRy/na4Z+7B+DBkZoqbAsDKVO2P7zJ14/aeFxqbxp0QOl12at2vkx0TuHv
p+yUbnQQyQ9bardAG5dnlQEfE05yOi0XzPSj33Jtu2+JYOGv5p0Po/sZsPsa
GqBtHkHtSa46YblNcO3A6c8NnfNAP5f50El5Ev0Zma2wb2uF8zm/Ttldm4Uu
nyWmrxUZWf0iH93xqgfu92edmdObgdbJHXPkw3OI0/vHiaxt/VAc2rRwY7of
4s6VExlhdDTgGPdFU3YQTv4P+/m17WS618le1PjyyaOP3+ko3a7usIjyIOCe
cNzX5MejUSmJe1Grc4icxBWwX7EfYokD3HgzMuIsPExzuzqLNNtXSqdwPeBg
UYA900VFv05YxPyeJqCRIrFRYa4u2Ltrqfm64DxKMQ7+e65lGlnLL+alyrbB
Felk2+AndERR4z348ccYyj/G68a91ARXY0i57zwYyIz4S8xAYRh9TZPE2Dhh
QfPC4ssXlfOQe/CNQPXnKXTjp0Fmxj8MLJc8+eR8jQZHiiufznvOoLBjxjXk
dbZPf2GvYelHBUWb3cGB40TUvtEFu8esGQ5MvcwM7CPDjg8NbSh+FvVZcdeR
KK3QTHp8KEeJAKGnrstz355DnhEOxWV5HZDMrYDVzB6Dsn0r996L0VFx1b8o
/0PfoOICJcj0dyec04vUnpBkoqU83ZnDvD2A/x/28x8NwId4rnY04VP/dfs5
JnqktNugdUMPnD08Feu1PoJOu/nalgTQUbCW7/mxfd9Ai//PDhmrGXT5r+ed
iL9zaOXIJbfyzx1gk7w31X4LGfHO7eZ5ZkhBauWfpuS2tIFnWOpiczcFqWCl
6H7ZJJSDjqSGhTUDdoHL0GFkDk3Xbs+5oUJAMtcOCqzr4sB54wVHzIV5tB5O
Jt3iwqO/zrrBv3UbwXie2RsUMAdHSnadvUQhoBPRFWnuNQ3wXVjBJbaPArpN
ovsXp0hIjl9dtMuoEWY9EYOaS4bXbhOK+XwUNHW2pXlwDQvimphtzDYC4HIL
zkVemEP3z3htdUFNIFBVYX2C7WsWZ/PmR2Pn0U27XLPzPi0Q8c+LgY0bhJW9
goXRAQz296n329JboeZJ9Ic7uGYw6igv6u1hIn+tC7sX5ttg5r/9/A3O/3c/
v+O//XzN58NM2b1NaOmg//lTJCa6MJ6T2DXRBjl6Z3pvRQ2gnxd35J/IZ6AK
Bw73zMFWiBvMDv0nMYm8I0ryNUnzKH7jLpMFhxaYChi84beLgErnsv0jBubQ
rqujpG1VTVC5dVNVO4OElOScAjcXUZDj+YNFt3lwEIN9GCWhQkHS50sn4lPI
6MHNrTLpzo1wkebFp7RARWfMdbbfSCWiyG06m56QGqAnvzu8/TYFbnFLqBzx
ISO63ofBh//qgavyL+5ZDBlaefZbHzhLQWc4ltFicQM8Eqh416tJBJGWAklX
9TnEGAlW+EPHgNrYvvv5V/CQTp94lyAyjwx4OLE35bCgcuTcPj/SKDipf23N
6qMjLdekp/WncOBSP6a+zt8HHZSTWu26TNTjF6tXe6AJ/ji9eRhZ0wgvbyk7
HFRloQ07H2CmsU3wxPf/v5+/7SA/HTuJQbIZDkblR1gIWSoZvK9ugh2o6P0T
/15ULNpqcuYiEwVhxTPDxZogdDzgM0lsFEHNvmDSPzqqSLrbVn0QB297DdYC
iqfRDWx7cIvTPOqq2R/TK4SFkeCo+5cyCUhs623rP3lz6BSPU3sXEQP901X/
i673jqf6////SbIyK6OhYaSktJHcRUJUWrIyUqEUWkRZJSMqREiyW0RKtodz
7O3Ye5zJmWaZ+Z3P5XNe78/v0+f7+vd+OReX4zkej/vtfh7X2838E4mIsmzF
MMZD7OdtIvZRZE4ZHI5ycBeuIiOum5vPq8uTUbrczqe66xHA2hlnXm8Sez/B
r4l3oaBm8e/xnZ+KYcZP91uQHwEuZZEfu64dQw8aLkiYeZWCylGPaDGFERhX
ghD7PCri1cqZA4Uy2KHMU5BV0w/asKPzki4dDaa9f8bFjYFsQ7fXSb6d0GNV
U7Avkf3c/ngznVGOgY+OAiG0Vc2w2dLh2PEfTJRg44y0rbFA2Ci+rqofwYKx
Xv0OBxaat2uIJLP7vbKS//f5/DuCD7e7/y5FHfhr+owbLLTCI2yVRAkWsFyT
eRoOTeiaZ+nh6FImMr4ZzLX2IhZmDqi8HVjdiWId7sfY/2Sgorg9Ny/lYSD1
g1bzMcV+dC2s52ayMx31rH3Lcpkqg2Gml3BXwTDCqd1U9VqgIpPkj8LL0mXg
98hOK3kJj5x190+oPhxDBwz7D0zdKIVvQeU3vClEZL/a0vncLwp6yx+lsTu9
GH6flrfPKCTAiwHxY/VzoyjuWa7reZ9CsPd4a/jn5wjMbvCqenmTir4841X9
RiqCqfwdQYIdg7Cd689R10YaigqvbtgPJbDHZl7HP7UHLJyuxy+LM5BtCctm
0bsUuC/5KbuOtMEJnQObiEpMdPa1xbvlSAR2tv993v4x57z9a855e8fRHnLn
+SIkb1mv8yOUhbQea51X8iiDlW1vVxYx6pB6f5ztJV4WOnD+omO/ahnEFVmG
2Sa3IZOuWn7X/Uz0aEuSlfIzBL9vcNU0nOhB4t3CjysUGSjH9Hln961S+J1z
ktl2ZhD1FL6V0Ztkr2NXVxm/2lUCaYHbVR5cHkGPjDf3rvpARU+Q15J6exG0
lX54du4yCXSd4iwEIihwkGJVHvy9CLiVl8O1rAkwZhVBmjs4Br27+Rbe7ygB
MaE1GjmCI0DSN89/00KF+LRg4n7/UsDcW+GoVdYPUm6R4vomdHg4L7Bsm4Vg
7yfdxfbaTuhPS+zJes8AUXeJpDfGZf86n+nIk62a2/MdHbu9d9wxggVFRAv6
UCAWetfOKOUutiLz75cdtI8xoVCHclrgEAYuD4z3Pdneg05+m7n6UI4BMnaK
biybMtAePSxsc3YQUUMEFU2oNMhixtyep5dC/kdi6BL7OuQN1YxpJVGBpn4h
pE+mBAxeVzsa7aDAbMijF6lYEnzGhXvcnS+BJkGFvFOqJLi/errnQxoFdhgc
XZHTi6BFZs9x7zY8rO6N41sIHIN9AXJtTt1lsLydf/oLW4+ffJBV8tyUBjd3
n/YWycKAzbZ+gYNJPSBw9O593AwdbOwZz7nZ791dhrp3vjt73cO7zfmcYMJ8
b10+E4eFoGO5lszPlcC3e2hltQr7+qTpbL6yhAX8v8xDuu6miv6a/Il0A1RP
qtxgwUcRh4v2Pux1b/GlKu1lA3qhPhfLV86EPgWhEcfMCrAJdzRY6u5AkDjp
ujKTASn3W5FoXDkQKkvMgl73o5YanU3ndOjQFK24acgZC5Mdw8yZpWGkYJs9
z1tFhQtHk1ee2Y2BSCfytVvqBCStM1qTcnwMZotX3X84iaCpT989W4yENCIc
iqQaKXASN7m7K7MEArge8QWoj8Fd9ROtU8cJMN0nota5vwwe6Vb0cJ2nwEa9
72LnPEhweiF2rsINA1Fr2kJ2zBJhLE0yhD+PAjaOl2Ydf2KB64DK77i1eCiw
E7ONZYzB3mOYNdeZ5QCEa40MjQFY6TobMDhPg/D8VvrEQgWcE3PFuml2APdk
fW72Nwac5v/41qqoErwtjtpGLNYAPcFN5wqJCaF8vuKnRavA8q95yD8+Fa5a
mR3Xh4pRzCu7C0nyLDCPiBByTKmFrYkrLv26ikM7qhecA/YwQe6+ervL1RoQ
CWUN4OZ7kICg1IGGLDpMNaco0Uqr4PoGAQHre8NIz+LMtrJxKgTLN4UI/6qA
Nsl1WqX7CIj5k/b4pcIYaDVL2fgeKgfDgAXf31Yk9KC9PsL0BgWuv6e/xkRj
oOPEHUqKOAUZLzhqNjeRAB2af8KzuQyqWizwHz1o8I53huqRNgTJNzZbzzth
ICb/Y1Fk8xh8r8j71X4KD/HVW8eeriuHLWcWPe9FUwBX99L92CIR1GeCSrqH
KsBqziWZ8pUI4brxjV8RBYQoj6fKcqrA7x3lwLol9v5eY9Xs6UyFS9wOHSfs
a6BjYda7YaEbCq9sfJlTRocJ+YLHyVm10Nn1TLrUvxH6Dx07u9OFCd+jGt4Y
XaiDwr/mIYWceQhdOTaT3olFd6QIMlVsHawspPtGC9MMmIcpMwvfO5CZ1Y/j
23Yz4MOpIdWI2EawKJCwu31yCE2vCBRaK02DqfBGsXtDddBfmOq34TABdTeO
Y5QHR0GDOXSCJVsDAhp81372klDz/BPX1aVkeHqu4WhBXCWs5v+hUsjuV7XD
OtMkWokgvuLRnZlr5bCOomrqpzOGnMsPD0wrEsDvNrYp0QcDlp1DW157MSAc
H1K8aWMXrLtw4/R3VyycwXzK8LWgw9hjRT8Mrg9IZ+68lkuqAJPk+gSPd1T4
jtKvONQPQ3PgK1aFSjV8nv6CTvOMwg3hRiXjLUTgHohLN+KtA8U/2xN9TxAh
eWWfwZlMCiiVeSBeZgNs6h+XwN4dhNYrPS+E+Wjwp8gxe9mp+f/MPa5z5h7e
rruJHQJ1yGqLc4xnIAMeKG+2uDzRDrx1ESdnBPrRys4K4a/7aTDWHVucmdsK
Zipv1ZYOEZBmcYf5xPFRMA5cSphSawH/vSpr4tePIb7Pbk9i8HjQngspbbGt
gePClklCCVRUukQJp4wPg5jrzPBZq0qIdyi8C19o6E/i+RU2hYNgxBPsvUTD
gsnt+NENg0w4+mr92n2N9fCk3Fvabls5pJsL7Tl+iglfMi+dKfXEwVU/7umR
b5UgpXUhw8OWAam8iT3ugp3gf0tCmbi9Fhra1GLUftBg2/n7Wm5u/SCi19ao
c78RTDlzj7t/+UVo+s8VRR/uRIY/dLRnHcYgd9vtdIHJIShsOEYu2k1E/RLJ
qz+ZkqC44ouItkMPNDtuOWVfM4pW7W01WIgeYeuZbt9YwXZwKfKgONxhoMM+
jEM71Tohi3gC376tGrJp1w+WhLEgycZ17+SGb/Bt3uFlnX85HNYLvHbdkgWq
R2TLzr7Ph1z3H0Uxl6tAa45Ue0eABXtnmnqPvCyD/KpGTROH/5l7cHNxjf//
5x7MQsHiY9cJqEwcdr3bUAisd8YpB46Oga/D4FR3CgOp/NxXrmqIIGRkvdx7
XCe0/aKnDnuw4EpN/JBGbT56mKGVav+C/b777sPvN2VBlEaWckBhAfooxrx3
0b8KAmOSX/6RY39/iZuXyKQC5BJDKMp0rwP+tP+eY6zmzDE2cuYYx7medQK9
Dz2u0ORK2E5BeRkOq4I3sfW/214nUzoF7bCgEetYQygcO73p4+p+uJygpXBZ
g44Yl7ep6R3tQLYvM8YuXO2APJuGUCpbF4kdOtD6MRWD0pQGFPzONADry/Af
kh4T1gvWPDK91ooKnaMz05TKIcI+X8I+nwHW4i8SCgQ70B2V6s8K1EpwLo76
rLeRAWPKep4Spl1I1CKgPsOlFuz+mjNs4swZ7g59C9KsxyHTubxfJSl0VCWR
WhN6vhPuRPnt/+0wgobNCIKbq0dRjIo45mxOOxAx4h4dlyiIHPNGSHSSgIom
zme38LVCLE53eCUvAx1K0rdPc+pCb5prlrDVdfD5tlH3ns1MVMGv5vHtRCsq
Fv9hmyVQDfcOHIcyQTpYnUt38HIfQJin6Qcq5bFQKnJ5CbbQwGH5LJamOowe
usXbXnGsgGE+r7VOuDGQrpirtP4zgm5OytykH6iGqnz9uE28JDi8b5vY5T4y
Wi1vpx081gRcz/633g/i6P2xS7/TdwXXIQXJCe+tqkw0HLPn6FREC4jE86pM
P+lFe9Q3F0xysfW+70NyM1cLPJ2JefwhH48m1xY4m+NGUePjenFuyyZw6Dz9
KmKJjKTCuQtNVEio3/yd+m+neuDVceKPmRtD+Bw5M+vPI6hrzfot2xxrIMxl
g9+xGRoSr4t8Uq06gPQEr5lZf6oEo5NCZQqaDCSbwZD6qNyNvKMFt/EblcP+
6lLrgOoxiG19/z7IC4+e0ivEQvFlcKn8sczGx6PgFSUa0SNKRLGfBXvfZGHh
8dQSNw6RYY/l6hsBJBJ6NFPziFhbAauLqhgsByJ0rdUp7Z2moGcb1/guHKqG
jyY8aWc1RmC7xIPvK1WoaI10xh5XZi202X+OYLT2gF5yzPiCHR2Nm2BUhrEN
wEglb7k02gAk56MkHxW2fsducv6h0wzcP/+33m/g6H0rtc3at4Qr0dGqrJtT
PUwUQcVQrb7Wgc+zRsSv1oFOyq54NPiAgTrHOzekna0DvYhjXJaUQWSj/cx6
7BQNZV8PEFh9sBY2aun00p4QkPWuKAvLz6Oo0kJBjR5VDUJ7C1VcS8noO05I
a0c3CT2Ve+1nWlIJ2+92Fb9VG0O3y2otG0QIaFb3osuHYXb/kBnMs0WchoQ6
L2QY3B9GEYXp3U2bsODRdujMxiwKZOjfXaGwg4T0GxRXXjVAEKrxcovpNjJI
rFtujv9JRvMfXZ6ViGAga9uc9Y+dRDAttdsV6zCKJHLPnjBPwYJ+Z8I5/i8j
UBZ3xCdNlYqKPPxO3rtcAQ7usksFi/2Q/1hf3nyRhnTWEB4N76qC6uivu5R4
O+DBe336I7Y+3cAtvj2eUQ17uGeDuguqgPvHnXu3upnoVb8Flc++Fsr+0vsR
HL0fF5npsNCKQbgJuR3c+1gIV+LdOH68Cs7suyzLYuCQgE7CXNRh9vvX+CQu
Y2MVHLw1Hepj2YsqndK7d36iI5mujpXT3pVg+ITXuI80jCKfHHX+kEVFI/TQ
6LCnFSD/ylJshQARhbU4VrV7jqKloNwUkXPlEIl7LvH+LRmFZdpZhOwlI1X1
lpE9AljYdypJmpk1ivSU5X8X0Anokr7mSkdMGVw9dtBprJgELs+dbv7ZT0FO
2leWzZnFsPXc6tcUASJ8VlQ7/jl1FBU9c07NVURA8PoWETA3ApMU2vkV8lTk
QTLvXFlZBvhP00dlWYPg9eL4b5V0GnpZQTuozYsFIVm9Mz+HugG3k6vNV5KB
vGtef1/UKwe841nTq19wbF1ODj9wga1PD8dMlbtUwFOZ9qfMXCxsa+bPTtnP
QtEO9x1j7CqBq/R/6/1fHL2f4MUTso1eivLMxoi2Diwksjd2ibS5HCaimDVH
1jQjk3V3JzMymKjp6oD6rFg5nEwplYxa7EReIyr6wj4MJNI5Vrj0g63v1jYo
7qkZQM+bifYL7PUgL0dRMlASCzI6HXFrh0ZQX8HL/TXs58fouICUsQEG3DfF
Kds6EZHemYixB6dGUbfiuG6HdRk8mzeJdwgho4VIaoj9FTIa77AwEe0qheVP
ajanpwgQroZ7F1Y/io4Tn8m9KiuEifEbL3bsxYO+taeA8zr2/hWd7jPnUwyG
F38m3tg8DG9lHULs7WjIVe68ZPj5UthN/z7+8Uof3E/WF1RNpSMnzeSV56TK
YEMY6cvtgg64c1Gt1bOBgeaV+szU/5SB37/ofRJ9jmqXVYQkxleHGgSzkL+l
5yatwjK4lRj28kJ6PXod/SGk9xcTkRdwwVe+l0F3576XRpfbUU6hrGStMBMt
iLd8EQougwCP8qKXUb3o9nbR+oU2Ooqe2kL02loGRZPO12dlhlG/oqUmwZaG
1jWnjHWwn5+fhXJr5SPwaOnVI96sujEkJjFaIdvJ1l/W5sL+7Pf3Vk543uWk
UVibkv+GW74QpqPXLR1xbYFltwC8UjoTbHq/jo4HlsF9hVBf6wgcTJ7qeZh7
jwljJtk1N0IxQCjo1QIoB97nSrHeVixIGJAMEEwrg3U3mwl4s0ooirR90XOY
BQHHu8XsT2Ph6r+cE1uVsW/0FLD7mdGmnTUXx6AZK+BHvVgE8snYBbU3RLRH
83umvvooFPqFk0hsnT5zQj07/2or+A2Eml99wYD3coaatRotUPqXjijm6Ihb
UsLaulOdIHtWu896Hx3Uz6r89ixoA89rwW4OXOVoSKeDKejLhJTMmMf3h1oA
z8Uje76lC0mNcL1ZCqADy1D9DiucrUcWDu5/IoJHG/IHKi7rjEFJT/Hulb+b
4JpNVecGNQoqO9T+0KCdAPX6NRuUFNtgnsPdj//F3f/N42dz6rc5PH7xXzz+
P5x+Pqc+xanbJ51AVwcYIH/k8rfd7HV0Mx/Ph5txWNju/4t/zbtR2CIx86oq
GQ+RmP6BB50tIL4BrypdOAZXs9dZp1CHIVc85ffe2zh4bfc9ImuMDk/7UTj+
UhtMbbz+4ppbG4zRuZQzIhmwUe6W8Y6gBsir1AqT6mgDbFtAi3kSAab2jVad
P0cBA7vFXJZ7G5Rr2H6+GkyGaGOsty2LACID8r/+1HaA/tbVR9yMu2HNLrWR
369pcO2OECnDrwNWcXSKGEenOHJ0imyYGuG7xzBgEs6QK6Io4POmIfY3Xz80
zvc5tWWOwW6rA4uTqB92JNiJlWzrgZnj5TLBN+uRy8Rq0TfiDLgsEtbRM98J
HjJ/RrPNh9Ez5ZUxrVpj4PgmzWtrTwf05ZikLEyMILGJV2H6NRRIMr6D5iy6
/sO5iHA4FyUO59JbX72gI8BA46lGE70HG8HHIAXPiu78D+/fzOH9CRze/5/6
z798AI7Ozx6fz6UjKz33ON+Wbjh7b+UHfpF68Iw8vPLqSwZqscnkHz7aDq+a
NiyeTGM/JytEM2JXsFCmTw63Xn0RrH99XN3NuoGtE+abm/ewkJNc3MUCx0QQ
DnK7OGbbACoiuVPZUkzkokLK3H+6DV4SHQ6Orq8A1D5++94RFjJk+szVtGPh
womyaezziv/4BjhyfAPwHN+ASU7d8i8/gXscP4H0v/wE/qlX/lV/mXuVb349
E1ap3XsrwVuMvF9dkL4W1A5dSWvP/IljQNWaWPlYtzrkWXIR/8O2HZ4f3zs7
K0UC0vmTsyliQ6BA7AzbYIcHKY7PwOm/fAZ4PGczHG2H0YmTGTfedQ3BgHhb
aKITGSQ5PMJODo9whsMj3F75a+IHDwPxPNGiY0OakX6tkttu9vP2jz/AaY4/
AOL4A/xTv/SXb0DR++8RGuEsdPix/cqy8PfIqadNPjKuAu48tr92wIgF15/5
aUVXJKCScaOk9Wzd9LwUc+MF+z3dpGZ1U36xFVVNH5xWGK2FHxx/gDqOP8Ag
xx/gH98AHKc+wKlfFnhxYe0vts5z20Z20hlG4h8sI/X8W0F4csNobOQoSNm/
qpK8j0f2YjvUic04uLNtT+PsNBFeG9iclOHpR9ssW42xPwlwwHLVHkNbMuzC
5fgvZhDQ/NQ9SrFpFzhtL6943oKHUM/i5zJYCsrUGM00C22HCxyfATuOz4AO
x2dgUue40Ybng9DbRsPld1CQnOuaH2rdAzDG+b1blKMTZTg6cczAsqg0ux2w
O8adJ5XoKKmy7qu2XifUrN4sSxgdRk3Oow1Hg0fQ+VMCshREhGdxqxdS3XrQ
CXt/bDa7nz3prqX3SnwQ1na8ypd6QkTp/mpCVSEkhF1aNouK6QIH1wGz91Gj
iHtEwFflIB7hnZ6EQGUrxPzlS3Cf40vwT/3OX/W7HXJuPMtMNHf1yB+HkBpU
kGmXM6FZASOz2yfTT7Mg1yK80JCCQcuPnc5IPSsHC45fwYe//Ar+9jEQ4NSN
Osyuh5gRQf/5gGihMhmhjrz+kMoOcPcOUgl80g0shp/eQh4VXZ2u+M007IHu
f/ExAO9nnmq97ejF54Xz2fdpyM6pQLbsWg8UTA8+S0RMdDS6wxT2NaLZCK6O
OJkK+HOu8cOjdAYS8us0OMTTiXLSiNzbvMqBhZHUvGA+DKuFQo6tXUlFG2p8
pLcM4+CDTrnbvGk/1CcwToeH0RAxafmID3cLzPK0KE44tsHVGroatYSOLC83
85tbt/+f3/FlOPpavs/0zIriRhDjX+a7tcxAn9Xk+pRjW8BCdzSx4FcL2lTq
2Oa9mYG2/zxrK2LfDoY1E9rmvoNopRtz3OszFZVedek6ycDBmYd24W9PkCCK
YVMCKRT0y9Pvo9+1YrAGM54Te9h69xLOV6maiRTu+PhcqsVA+Av3C/6rGmD3
5qMHdCeY6OrTkPTB/DIY+epK+RWCYLHFoNbiJgupnTYseXb333/nmo3jKSv6
WYqkul/HNt9moUNS/ZTu21j43DIUmpLWiB7nWeQ3NTORxg4jVQ0MBq65ql7y
/k5EmRvdxmPkR1FhUeo0w6YY0KXIO2sfExB55FWV9I4xZP0hMlz9B7svPfzs
uqshAd3cPvKn++wYinvSkWp6pxCctbmXgn8TYEeKnkVF/Siw+LsTT5ILgLV4
YTyGrwq1O3a/zznGgotZXLTQS2WA4fge2HB8D8w4vgeB5twlVmOVSOGztef1
LUyI3hpslB7d+n/8DYo5/gYJapHS1ddpIHfVN/b6jT7IkTcHL/dWiBKJqfgz
0AfVBAHNVwpUeBFZL9yxuxsWm68uW/6iwIHrI7behSNgLFK+IGLQBbv/xcfg
LOvLGZEVI9Dgl7zfroAMwWuUZR6HDUBESF06z0AL2hvJc5VBpsHF/rdXtzv1
/sd/IIrjP/CM4z/gOqgXVunJRDWUp9pLS3VQYGA2HrC1Aa5w/ASecfwEjnH8
BKZkkYKcDhP647XVBpS+wbJh3qaddu2wLU/zqPNHOvvzpXRB0W9w6/6s6c/t
/f+H9zfh8P7/cPokDqe/wOH0h361jucv0SB6V7qAJm83+iLHv6z4vg0C/wTl
0SRHwfbsLrGc8WE0vPSbL1ugB9K0+aeWvw3Bs1mZHt1RMpI0ivpS4jv0H77e
gsPXYzl8PS+Hl/fj8PIXOLz8H4Of9XNVLUCLPcBzwJ+BzJ/hu+YOtELZv3Dx
443b+WpTGlFAufQam0q2TswU+HJ1XyvI7RXeWQP1QNntoZvLxUIpTyX+hB8s
g8ucOaobZ47ayJmjruHsyyacfXmCsy+v59QNOfVfnHrg/8wzhUNe2ZSqcOaZ
dpz95TJnfznB2V8OLgd+VBTpQQYmIYrHVlOAy4Q3J/g8HvzqhsYWAgcRSc3e
Yk8pHqZ+HtHt+00Eiq4iv9nHEaSr4nVLOrkL/Nq5juYzKGDR5ldnc5eAStU9
Y4c/16OF09baF++Ogl2Iqqo/nq03Lxy8LH+7Hz06F+Eh50iGoxze3JTDm9tz
ePN/OPTtf9UjNc/tcX1GgS/+EQFa5dXwYPWNsT/9RFi+TyCc3EiGcIOmaevO
bhDouhWt95QAscnPbw+uxsPp+g3e37VJ8Hg75kDu9SHYsGiuGK1IhIb7XapB
1SNgazywJslmBDo4fakUpy/d/hd/ncnhr99x+GujzTVhDzeNQICswfnpnSRU
sjGz92XrMCymO1cK1hFgdvqUaXvTMDqYYavm+wMPuAdnHqXFUOANLXqv0M2f
aGpN2v7a2yQ4tRQV06pMBp6fifwsr3bUodiDM8kkwknO/brKuV/anPslunlO
oEpkGEE5qym6goAOO769S7chgN470aUDlRSoDd+atDPuCwQwiiSTLUhwjMPb
fuPwtic5vO0V2gfSlGgOYliHvXF4xwIf4VUx0QkYMOXwrQ//4lspf3I/4337
kBrj2bHnZ0hQRvwYqPmEAOd29GrvdxhDbX5M0bo7PYhinnnc9M7Af3hVSU5/
aPIXr1rC4VX9OLxqTLEaL+MCCz3W9y/PH0CQFDTycCKiAnI5nKkdhzO9xuFM
Z5I1ZVAFHjE2W3lqi3UiyhPe4V93KfA6wc62L4SF3h7d59Le8gmtv9Rg8/V1
BZRd/X9zo/9WTx/PfPNVoAR5pKEPzo9ZSP2y+MhsIAaov2SUV2QUo/S5dM+9
fizUHyO2MvEYBv78xXVmcbjOiFDqowd5eLR63xB99mQzqFmrX49BoyDP4TFr
/+IxfTl5HwOcvA9hTt4H/Mt99PmXz+eJfsDh131DxUxWbnY6C46deGJs2VgG
99fv3byj9Ru6+IlH7GYiC6bfrqlTu4QB4Syju+192WjrmcAgO/bfv3273PFK
SBlo+IpKr2JRweX31134mE4gjWYHfFbohZcc7rKNw116cbjLf3hMJqf+kFOX
4vB6XRxeL53D67lyeEwpDo8pyOEx/+E0Tf+q/0oo15DOKIEvWKM3454slK93
eI3dcwzMGoY+E1IphncNh7zuB7KQpNpgUEtxGTDmye5Pj5XA+87BUpY3C1UF
Ksk3Hmf/v89MFG2ri+Dq4ZL81c9Z6MZF/4Fgz7L/8IZjHN7Qk8MbruXU+//i
EAWzm2XfDzPRrv1eX1xH6hB1r3KchnIFyGf/waaeakW7PIU6P9oyYVkpuDE2
l90/+Hmn+j2pRjX3P2++sp0FDTz7Rb/YYcD+X+Y2t/+Fk9KIU9P5wN5/H9r2
S1Y61cCf64ZtOWJVMGLGADNbFpiavi3xmkXw65yGG3Iqh81M7bZNd9j3uyPd
XFulCI51NXgJuZUDjREiE6TNQrYyFwrPni+Ci7sUv+qNVMPlxSnsSlcW6ny0
lvw9wgfVBU+2XRiqhtEdapuFXrFQkU7dXXX3JJA7vkqQnlQBTQdu6G68wULV
d2U+10kXguh4bsre6AqwC0sX0A5iIQ/HO3UGLhnwhEew3/JdBZyqmXl80pcF
zxtGgMv4MTx/YKLxxbsKhLMxjza9ZcGBvC/h8VGJaGO7n/SXN+XQV0WZF33N
AtyWKYV+ni/oi35DEDOyHEI/NVsWnWChMomKlZVrChFTZrVeVH41FHTeu/W+
jonUkwf2R/fWIkehyupzVtWQEtC/UeIMC5lIDfim48pQ8hfFWopzBWz9qdVv
yH6fh1b+5L7FnYO2dQq7yIdUwAOan0n+FRb6/kh85464YnR6VY6Ay/0KMKjL
HsBcyEE9R18e2xjHgo1f3n0rpmJgkcMDWnN4wFccHnDpX+oTWsVKmjIsqL6i
FehzpBp2SzMTzbTKweP4vg8mxiwwu9HfVnERCz/STwpcsCwHkZPONPd4FhC9
TIgz2u9gULvzc0ZYOSSb+sdPJ7AAf1KzUS0hGBHXXzq19nU5OO/zrH8nl4ty
lve9Nn/EglDS25Qi3QoQbfec06v7jgJjxQXjQ1ig9/W+X4dqOWgm5GIzG36g
lfVd67n9WFA1cEY6iVQOevef8Pf74FB53Eb7fQFMIC0IDm2YRlB2a1vnj+l2
dFcmoy+lnwGdytl5ar+xUExtM7hxsB6NO1RW5g8yIUXrw5nC0fJ/fZ7VZ8Mk
ue0YsNsl9IOoWBf8YAj5uGythKTrVHysAglCMcfGucrZOq+8PtGQWQTlznXS
xH4yZHG1HPmqSAYL6YzXueKFcKZeMrxFiMDW94uZO93GYGWGm9ea4RK4Yyvm
a+MzDLSRQ1tEttJgUca+zbQLwSmeJrPbxF7wMHsQ/qeQDur6nmHZfWWQ5JJF
+IZpg/H1pvp2m5iwfnH9rZ0ZGHim9/ua+fVqoMjQLr/ZwoJ2HF9kvx4WDDNL
v3T5dyL97U7kE8kMUO97y/D2xcDjoLnH5ZEDyKvK9JuSBB1yFYQk4tPKoKtp
P9O6ZQQZYx9mE05SAfdl/9UlSwSuQyeM3C8QEQ7Xt1HbdRTOSNg085mVwMo9
vx/rFZHh6y7diU8HyeBzisslZ6IEdP/I7JC9Mgo+2YLc8beJMCW+8DAgpwjO
p61lkjOI8JW5+GMTuy/uji5LDdtTBoh1YVZlIx7UdNMM2ldSwXuyKPHjPQwY
xz/ezjU0AH3bfLONx2hgSGjp/vQTC864qcisPZ1A5XfYdTKOwf77vEUaPWw9
q6C2y8ujDrBfxCz9hpmwT+vOOe68Cvgtw2xUGv0M16Zw1NInLPAwMBx9vLMS
TLa1Gyl59qA/fmQjswk6nA9/EWD0rhxech1VPh8wjJiMnBNrVtKAT0mk4NBN
LMh92slal0BAkU7q9bnUURj3k2rj3sT+nnbWvzzFyWjz9xKLGx1kuCec2zYc
jyC1f3Cu+hcF5X1uV9UlEgEztuHOFbkSuFtlIr/x2Si0b6pMV99BhCGpprgr
ImXQ/eq79EFhKlQE1eZZHsaD6vBp3422JfBdrHTmzksyJGmbNBbrkuFTMIVQ
+hoD5yQOeHStIoKIB0i+fzwKwcyWvTZHy+HrZd2f6eXDcDH0nGwuokJXuXpV
80wF6KxfsPTV64HDC8MB63vpgKmyDih+UwUBZIGaXw+aYP1Bw34VXya0RypG
3CFXw7eMN6zvt7/CO8LoGRczFqgSZ4wfva2BpSQp121Hy1ARaUdptTwLxA8L
FWs/q4HwJPfTNrfakMUruu7WMQbclb7gPfyJvW4LCd3LgwE0EL7Z5QCVBqNq
tZvIGlUgw/f1aUAsHnHvoDdmBY7BqktrDS18K6DV3MOj/SMJ8Z5t6ZOUpLDX
7XPZ4+z7PhFrcXFhgoI+NlynCjQQwYBXFcXzster6w/s1VPGUJfDetp8GR42
eF7bRloqhcc5pvk0LyqIXS+faHYdgZuRDwcCdmLg7luBwbFyGuAjjptK9w9C
8bXby+Psz8utw58XLxqFH2nhqb+KCfC1fzx+t0w5kIt6HZkXyfAwcz8/zpAM
e4Qi7vAaV8KjdYuqqyQIEPxskTTLNQaGwpor9HOr4U9uDDnefAB8TB72V2TQ
YPvSiaFexTqo3932XHkOB3We1h8yCAx4ML0uTwYa4FDYYu65p9/g01vBuE9i
LLC2sIYrro2gfPrupvuCFSji1MN91FImhAm9+ZRo0AhYg/PRGkZdyCLqxJmU
BXZfM/Zo3rS5HtpuRF98JDyCqsvDE+dNqBBh0+5x0a8WyhyclfZJkdCVqqAf
gTYU8FRC4z2sKrC4kXL73iwFHV3bJmYaQYTa3g9haV4V0N5kXCzBRUXq83i1
wHV4qDTQjhI8g4UPWPniZbYOcuZ6+nJD7xDItv2+tPpOGfiFE0M/XqdDtLzy
QP3qfiDcxHrSVLHwjr42IfQMA9qNTvGSrbsh3nL9zvh97H5m+mvU9tU0wH1l
PVQ+PQzC0tZcugkVkHBCy+bVqjHo9Qpc8VOYAF1CwblHX1TDpZbCpIJlEsjx
vdwuqkkGS4MX4pv46+GmjOPCgvcIcF/3CG7+MAYSyVIHmOQmCG3d9QAn0gn2
nsNqARV02CeMv/rFCAfnO5xLxSJ/gErezNn70UwYOW9oJSjZClXjSbfSfGtR
1dxWH2lhJuwpnpO+T8OBYxyxueZXP9prLXzt7XEaKHnuEqLhWiA5WytUXJ+I
Ljh0iW1MoIBZwNtCvoxGaBdwY27aOoqiLn4JonETIcdDaDECWwuEqr0fPyVQ
0fRNLs/h3mHIlpPGJtpWwZPGHdfWaNFR/cqgo5l3+2E6ECe0FF0OxWpV663P
MdByvdSGjM3dkBwYtir9LAaO8D7N3f6HATuqTM3Dd7fD3pKhzNcr2X2Xj7Qx
ZQcDbnJ1zOpOdcHAWcknGFYleLQ4JivU0eDkphunV3APQL/dW8EVqBZcbZzs
X9wdgxqJJL+GphGQttNzKCprgvyDSl+7rrL134UBp90UEjy/X2Xq8rYV9hSu
uRcq3w/DFtNdDeFUwGMiQ5fGOiBa4e0D0u8CqOctO9HhxNYV1yZpVpbd0Jz3
a8RSuBVlkdQdBg3p4CTLJ2fV1wUHrLHUl5F4JPvC4KEKgQJXPk0euNvSDmH6
kvq7A0dRahVp3/v3eDheof9mxg4HfneEAlpe09ABR9245o0D8Hr3UqxnRgMU
XC9/6qPPQB/E9k7M9HTCn764CEHRGnCJqnIe1mai5FMto/NyrWCclnLmVmQF
hCa6xwR3MdGDkBXuBasbIaXdyUiaggEJ6ys8i+z3zcr1CXdlUjVw7VpfpM2+
/rc5eT1rOHk9Xzh5Pa1feIeMs5kQ0Tr1PlCuAe4XEW7rj1T9J6+Hf/x/5/UI
7D29dXkVE2rFUtzOmeHAuYt/ZKd7/X9yfKb/yvFZw4ePeFJOh6gNxhKHNDph
l3QtOXg97j/5PlxJ/zvf5+JpA5WvfFTw2g9dtp0D0DR3Pv+WTidggnlaMyIJ
kHZIw4RqQASFPvLVSINBUHtKwyqyMDBi7ll/2WQM9OwlZRVECHCNa0tNi+cA
GvaQ3vZiJxmmws1srmJHQH6nXylWagwFwrGzvyMGoLf2tnKIfy/YE7X5W4fp
iNCYmN11qQ0eBufrDaS1AYGT+/ONk/vzjZP7s8PFYx/rChO5gMK86mwt+PtY
WZFimsCckwcUyMkD4pL97zygqZNH1JeFWcglcObmZcDC64trrHdQa0CRkxOk
zskJKuDkBDnIrHXebc9C8lI/v9iRCqH/wW+7h4sVIOesvJvE1gU8BmZDPw7k
gsbJuGBjOSx0xfmHJ7H744nN6dJKuj8Qc7sR4/4FDOiFtXw9vJMFg0IX3zXu
xCC+N9zS2S7V0P6y8LMV+/pLOf3hBYUaVDHhN0xyaQAi3H1t48iAxXCnV20/
cShreEbj1SwOEtdLTJor0lHnzE43yw3dKKcZO3nndStETieM5BUwUHt9o4J0
ZCuqO+4VWn+7EYoKlYeTA5iIVKPrd7m9EXHPxLfa6NZAIrYrpOsmE+JS+3dh
9HDo29DL1Uns/tncfIMoeZwJ0hjl7Q6N9cjPPO5w1lYMSKoZB3pEMqD7i4Ct
VmIHeuqj6bNQytZfyY8bHm6lw7ZDZ1cm2PYhxulD97ypdaCz4H7ix+sxsA+c
uht8ewTtc2nHZRxugUzsyitCzwlogrt4SOYMBclexnJJDLfBhs9y/T9ujyKp
l1Palr/xiNkfneTq1AKH63KCb6rRkJ/wgz9laBCt98rW7TxfD6dwF3Jr2+no
Pm/xEUOtHnTJ7zcvZVs1lDUpeD6vZSCiTdBXte0daIW1kMD4OLvfXqE+GhhJ
Bz/J0HvXNPtQnsw4l1IJFtTARTA6mH2dezbEBu3qQlLLs7KdiWXgHn1Es1KB
BhH3Zgej1w6jdeUPD/FfqAQjp406wvOjMJ+cb24iRECBrfterHhcA8qb9q11
TiZBmJEX/rUPGX2O5B+zUmuArbsuHBx6MQxCnfqXfihTkaPTk9e3NrWArMCE
TPCuIWRJK/hQjKEiy9aCsBy5FtjPL8Z8W0xEBlZa3v0mFHStoTMr/koDPFma
HdI+PIo+6ad2MxYIyOugWJN1Ebtfeu7QuCKQilrjJdYeFhtBhq96rua/qYRv
8jOpr0XpyKU53ZSpM4Bc68h9jxaxQKJ8mqavZaBrzipJxaY9SMDsilUtW3cf
+J0Q7/2ICuquF3cUOY6gzPOf1CUTMLCg8MZImb3OH271FiksGGS/r6EfjfMQ
7L/ocKjjyyg0lUrvHagiIJ/VAxNGX8uB6CNwWnM9GYg0W68XD8koZwDT6ipY
BZMrzh90eYSHVzI705avjKGtXknrRaJr4FunhugBuT5IFPDtyd5NRwdSsq1X
raqHewFzesGWjfC9UzeHbsxE039UpxV7GsDPWDlydswXovmTxETkWKjBu9ZI
wb8RVO1ow3/46tHepbWUQFcmOhGulnWzugFEttolpWF7kM0R3tJffnTk7X9d
NX+6Dl7fU1b3KRpB1/5c0d1EG0Ny78ma/m9qYIXrreultiSkmbttKU+Jgnw6
W6oeyVeBVf62GH+RUXQm7VvmDX8iit3yUZrcWw7v+HQLcSuoyPbS8AcrGTz6
bfJ9waoVA/bBL19cvE1D95+W6fb+GkIPydidJuw+XLhEdOh28Cgs5G9JHdxM
RKMPRsPeuJfBI6NjmrFrqLBuLPzX6p14VOP4PBe3ohQu3sMFDt4nw9O3l4MG
TcnoVPhYkNd6LBDKsoZbMgiwoCXCe6p0FGXuTyf09JdD6hVt+w18w1B59Blu
aQcNGVrVFhPeV4IfPqCcTOqEziYVA1cTBur+XHrOdk81nD9pddJzZw20l1XN
qXUwkcAN3NkPJ2ogSFCDUSN8F9ZsCCKFXWehjcSg7Jz0GtA+3cwQaahCrSpP
U+LJTOQrcKUXd7gGVu3VP6mx1IHMhFwvjj5moEmjdZofZarhMznn2R7iIHre
Fe6d5EtDTFVq5n/5HQ19ir8stYKAZLbeKwvSGUM+TVeufmLrLKuDNoFH60hI
vhczn7VERjwLKlsZSlhw6W97c2OSrXfsJu8cxBHRAyS88XhUGdQ2UI/8ShhD
I82nN2jUs/f/ALvScyalINgslvqikAx/vBrMt+wjo/eycWIfC0pB+SDjosnD
UdAMzIg0P0NETfjE+7XnisHd7CTxlAcRcrmW1fBHR1Gc9wnb/9KtB06duHMt
bgQW7tw+SrtERdVKj06Jz2BATVRBf0CuH3bxntM3NqWjjh2KrPv7y8G67/xG
elkb9Iswb/nwMNHuY5M/lqAC9E89UJoIqoBTVguCeAX2PqNUtKVjugLsyqO2
RIpeA6fBUw9HXrCQgvIJ4N1XCZJNP2LcseXIPfC9y8ndLNT6uss3ilYBydEu
Nc/2t6GdcuN84huYKIBlmblXtQKuL4ZsmjHvQ5g7qUTDIDpCZmGHf28th5/p
+P64dSOIkNBsZpZFRRrnJ3tK2P1JF1dBWk0fAYm57A4eZT8/qYcJV98klUFs
e9P5DEky6se8ihhtJ6PiD6RLbrWl4J82k3xihIKc9uMXPLlIaFE+j0fuYTEs
3UuXNOQnwcxnC/r7HgpSCrm3qzC5GBi2b3W1svBwTcfzZPu3MdTqvM99PLUU
LIanldW+DUFf0Ipb29jPw+8rd49jT5eBpfJl2gRXD1gqDn6RkGeg6Cuffxcc
xED25Yvu/JY4CMZdfUHzYKLQ90brXk5i4Ezi99C7PRhIie9DBHMWOh0me0rl
BhZuS29cta7UFNKPl4rDJxbiTeMfXopk64X+vL0Dzhg0PCj/gniZff3z0Y/1
17DwSt9gOUwAhwa3D7VinjLRwcY8Pt4xDHwkKG+RfdqNpr3ji/5oMVDYlsxA
6x0YCI8UcdRYHERyMO8y952G7tpvxMjqlIGGbIDpxCE84hLeN8vFT0WHFeOt
ksJLIVfzSRTWnYgW5nlfqJuOotZ1iwIFb4tBqKtHDnOGjK7bZp3o/EZGjtyz
lUm5hVCzUWXLs9MEuKgttiIVxuBur8iwX0YJ7Nr0IZbSNAzNXycsF8epYCNs
nXgwDcHMUqzyr4Q+iL2cE3PvJR3M3uR9W6woA2Xb9SXz0e2A2z4trz3PgIRC
7/mRWPZ6rpXYf8GyFr50M1xy+FlQMl7pUrgfC4McPk6Hw8eVcPi4E+1Br6cm
69DDC1Tr41NMWCnr8HlgLxaOi9F2fw7vQFY7P+kZNTGg62vqJ/tIDPCFS4YJ
1/ejbWhV7249Oggcq6x+jtj3d2PgKfWHI2hisl5I5CkVGMFvq85GIegz47V1
FSQixuhutT/s/SS1My1DP7IEHqb9zhvZTEYvPl0qsuonw8XrJefeRxWBlU+F
eUMJHs7sVDy4n91fSBTU803txYBv+6+n/A5D8DlUYjTMhwavdqas63DHQmf6
XdWJP10gHXwrNOkYA9TT92x+nFoOn1YIfueLaoIV+a5FC6lMyO58F5XI7uel
/uLa+jlc2/f1KstWVl3o0LjI1Se2DAie8Vtf3FoOIdVZUl1mQ2jaKf7eJj8a
fMwbMyzMwYLq4BfdY6N49FWcYeF3ZwxsFaY2dTj9l1/TSILVYxIiT27hRpcp
IP6VknRyQxnkDlxLnfOloC3X5ENNrpGgaTA6FJ9bAj5mGNuW6REQTLEMNF8a
Y6/77+9edq2ATXx6ElKH+2GiyP6y2h46/Hp9VuL91ipwIqcVKv9sBalj6W3O
fEx4eL6r0j2iGjxVX2fWHx1B3KFKgV0uVOBphNR4mUoYn43hDnpNRB6HtycN
8o4CKaSy6+2FctCbVzsYs4mC5uIfOqZkkWCqMV/ncDwGYkw07yvzjKEire6w
kDACGGDlRkz4y+BT95XEgdphWHpdGL7OjwqLboIu7/bWQnLYoveb410wsfHy
qafcDJi9FXpH8kk9pNfRd296Q0bfzgcUJ68gwy3lXL529j7Fd+IRnrRiDKnN
FkgOXyaAzQ+hx/kX2deZ/jxJtJSKpnYG1M/yjQAhUbZr/CIGarWGXOuyByDv
6br1aAsNBhPdVwbda4H3Z20LT2rQkIzWFeoV8hBc9RNbna1TCa/q0pSI7+kI
s7vYzlywD3wsxFoOf8P+Jy+1iZOXKvhXXiofR39t/isvdZKjsz5zdJYzR0/x
JP2/81LjOHmp6Zy8VC9OXuo0Jy9VgpOXKsTJRV2Y/O9c1JecXNR2Ti7qIU4u
6lpOLuo/+ugzRx/lcPTRPzoogKODuGX/dy7qob/0zj+5qCxOLuoIJxd1PScX
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
vNv0EwPiyxK1NR+IsGX8PeuwExnJ5+Ubcfu1wcUwDZMT492gt2m2vlyJhnKE
Pm7LHemE6K9r7o8qxcHqlavLTV6w9RemR3OtZzckHjorJdLegbJAE6/ZREPZ
cDjRbroTtlRtNDQdZyDfI49kZNzakduzQGPj4+UwtDVLdia8DyLuFVJdP9DQ
uOXEVXJKC4zf+dY15F8N+Y2nPHZsZyKem9n+sVQcLL97dP+RQj7qFHAZaQ9j
IqPhYItvAq1Ai3Xnm7bvRGU9N//ol9GR/wnznT/nWiDIf/5C7ncy3OZ1ECYb
k1Ep/41Vp0cLId9S9KcunQwV5Rrrh9eQ0RS/f1hHRiFktW7I/UUsB6dYUYWQ
EyxUr+NM32SLhaqzqyseGkfAktqTmfEPLBR79JAMYuvE3MXAFvm+F8gfq7ps
+pGFwhM875xi1zfP7nXhuVeOdtXyGuw2YqFHygUKCRZYmPXewN0iTUbIz22v
EZmMKtrfZkmxCkFwuOzH+kESOumowNS+RILpDbNGzjxt8HrNLoWmHVT0PEz7
efbnYZA+GR3lf7MZJGfCohb9mRB4zmCNkx37PZKdDe8vKQNXkRzpso800PXI
UVf/3gMDgm8p0zZt0HyLh3g7gALF9KDT2TdGoOH1JZM3wz1gMVV0tCioF/i6
xxyvOlFgzl0dFM+OgCzVYt8yvgqd8Gg6XDI6CjtOPEh4eYwAfaORpUfZ/cfO
3VWf32ri4eGSa02OzBBY8/pPFt2loX5rpdU5TV2wWyxySSq7E2xCkFdRMwMd
0Dl4IOpEMxx1dC6JVcMBf6q44rp6Jrrx9hi3v0MlBHteT4t4UA9Vb/bL0I1Z
gFnps3rCtgJSBn/cc9v8P/lcEf+Sz+X5Vz7XCk4+l7j9f+dzhf2Vz2U7+N/5
XGWcfC5FTj6XISef695f+VwlnHyu8b/yuVr/JZ9r21/5XMa7pCb1J5lA5e6L
2sJXgQroKzaWZ9dC9Nb1Vi8UmLD8LGnBZbABCYgZG9ysbIbRkl7XA2fokMld
VeqR0IFaU999yH3FXv8HW0S8PlBgv6nBAfrtYbTB+rOYHKEPEk3eoXzuLiC3
K6l0JlOQ+wcMJgHwwNfoPWFIb0aqr7dmBlBGkZF1gtCMKx6qPmo8jNMkoY80
twLXvQREwpvnrYzvhzfkxuc9hVR0JtvD+fK6fqQ3XVlVv68DMvx5RN6LM9Cc
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
tjZvbAvyfpZeoy7HhPsT/tl38Tj4P8X381I=
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{948.5394265423911, 630.},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-4, 4}, {-4, 4}, {0., 32.00615343821057}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{0.8060500786315196, -3.0503920538405844`, 1.2228620480677055`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.666438075350007*^9, 3.6664380905350947`*^9}, 
   3.666438175696241*^9, {3.666439772924637*^9, 3.666439812479496*^9}, 
   3.6664398600665755`*^9, {3.6664399056628575`*^9, 3.666439929878566*^9}, 
   3.666439969470441*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
txW82fsK/m1k96KCNyLfxph1rlbwx5EKfqfbCl7vfQWx2VZFBa/1voLYlKOi
gtisvBh1z2lcwe91W0FscmMPK/j9bit4ufcV/EG3FcQm48b6jf6NK/jDbis4
0PsK/l23FbzY+wr+fY8riN2DcgUMNrov9oUTPO+/b3zefxzZvajg+d5X8CeR
3YsKnut9BX8a2b2o4NnIt7G+W8dNEz/iXa7gzyK7FxU80/sK/rzbCp7ufQV/
0W0FseGKmGr6740r+MtuK4iN3vSwgv/YbQVP9L6Cv+q2gscj38YE2n9rXEFs
7Luo4LHeVxAb+y4qeLT3FfxNtxU80vsK/rbbCh6OfBvTsP+1cQV/120FseHP
Hlbw9W4reLBnFXj2lyv4L91WEJt4F1Ph/6VUAaOZ/9xtsQ+cRLF15/3fuq3g
/t5X8N8/kwr+c+MKvhHZvajgvt5X8PfdVnBv7yvoH9m9qOCe3ldwTrcV3B35
NhbBfb1xBed2W8Fdva/gvG4ruLP3FZzfbQV3RL6NxaB/17iCC7qt4PbeV3Bh
txXc1rMKvCwvV3BxtxXsj3wbi6L/tnEFlzSqgI9aZ+78swdm7oKzB+buQqxd
hMXF+HgJ1r6JxaX4eBnWLj97YOquwBqGHHJ35dkD3VWF5e5qfHcNFteePfCT
3p/9NxudvT5pk7tzpGYcADvv7IF/jJUWd/3ZAytuAE5IPsbGobo5jV/V65LY
PKzSpIXaU7u00alxshrPzL8NQS4vri4urpzyxbg8NVc3C1c316t7Jdauwlpx
QbUouazuOjU5v+vwhf+xzW4gFgke4LgBlQ+yw2IJ/G4uwK/Zpa0bc4/NSmuJ
7OosmIs9mcTlN7tcH7lxaIe4Ton/oXKtcKVwoRJeqfzTr1Qeml6GS5PqaV+P
LwZg20CsyaXph0vT1w22y5W7G/HFELtcWViLpQVjOaa/ObkLxz0va3SZvqG7
9LfLlOKCSeHnyjXx1+t8/Ea9aNa82MRSu4Ry6XDhYLKtxou7v3p5aFgJr1zw
sJqrmOMqVnAVW3AB++Ky9XE3YZebsS3B7M9b7FLG0iaf4aWs23ZFo4vKuMTa
Rf+iAcoqSXIOr9QJX2iSMrUmivpxtS/1V/tPrHC5Nrg0sIStrAkXqRkXqS+u
j+wytLjGSTM+ZW6YNc6Eq264mrj2cBYzrHRXxGJR7f8Hl5exfUUR1J/niat6
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
LMXjl6slXhgsf7WOAjkcP4fP53D3hFKA3m4en9HVK3B1OvqCwtExLolIWN19
3nOFu899Vt09g5djQBK+/rTaTLo7x9TNzWEJRQDiZXHzad7g5lORbprymA+M
4erm7iICHuG061LHT3vIPJ4df0ovr6gaf8AVfs6c0yhq8FH3seunw7PjT+nl
FVXjd1OJqzHnNBQ5p1uQc4KXN6kaL3zcDZH+Hv3+jUw7ac8PKS4uLnuz1y88
3A3Yrb3+9buwt/b7O/Fz6zycDp5Zb78Vvf0W7CWe7S4Tv75UzXKCfj5gZqna
sm9nEd9uDh56RsSdU+3ZV9sufbDWjG02CM9j1Z+9JyNUj/3Zrx66cezFMvNq
+/YihVXnvKcW2p39unagGs/6rtVL9YQebH7bymQVuuoS66wrFzc9xfy3/ahz
HWpSlyxt5oSspa5DdzmiZeCAflimrv2wa7aiDgke1jIYXytn0aqW0OPp7D4R
x87/DRrO3Xf3weNTLnN2/vB6Mzo9fR6Ehde/EiyF30MCvOzg/IUxyawkWHyg
IMEiI0EKANh1Jgo463e+EkA6fFDASJACA6n1+nOeKXr92YgEZmG8ZyYSYjPU
74UD8H3z/xTOL/Wwx3+MlrDLZ2evnq8Ce6J4/ET1/JSuX4Hru/EPFl39OHbz
Y5EQG4NJkXD9iur++1zh/PdS+2NS760Q+8OZEDOvp0H0D2VCTJxf5O4td7Cf
p+FUwIDG/i+/ZtBe9vMEQQoIIDKvRYB29RKf79Su/lqKfsFAyl4+p+q/apsG
5lduVRZk1slv9lHZpZuc+yZso3OXbLRLlet469IQtC8tRnPqcNCiEXnh4d7/
fUpXjlpNF/NMOA1rWTiCxMgtTkBvX+JCDAE9xMKcyO5ERd3LP1oiWOhXxoIh
oQAClkiZqSkWcpXoa7tgoSzuxdPb1dTvZSkMCIDoi2WL6zwqfXvnMWeZSVnr
i20p99Hz9EdkWDajEJbXBHIQQjnIwdghBzh8dqJVfsaawuTMwwQmAGQ1U4ir
MR3POPJ6HUFyQAPCQVCxXA3CAfn0ZQoLxAkvF7aEo8IBGQTGYk7LW4Ts3SLg
YiFDhIWqGFRBIGE3H88JzENUoFqBMoFweFqNUcEsygREBTODTNC4ADk6lQcM
AJAemPIoDWl0hgGTRRZMesQnOCd6POQBD4aIlHyogA9u7AOFSBhDgTAagcAo
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
PZ1pmBbdz0RTD0ktvMa8H7DiSFArmp1CVnlWYSsbnqkI2BlYTzmdS0aY977H
krtjerY5TH2X00BamblO5klDJiH3nchNBuis61kFm6Hy0savSzFwGLdWMetJ
10p01shXB7g6uqsgdmVyV/noFSXsikDKGmkdMCvfFBPgpaW6vsTJ2tEcGcqY
qyHwCwiBn8fc0HPogz5rfI3hrwFWC3R9Crnvk/RTNkIt+yVl5xplmf06kBWD
Q8pWxr4sRr4P8jRatNTZWox+GfZGxFruC8Leyx6pmuqf2ktT9QCsvW8UxDL/
vRO90TtwoekvZ2xvnV6+26rq38dISOqIyaHEq6Od+sjVH2DrWxlbHbDqwFS5
lVGVg7V/eDUDqwNT5emNqpwaYnErvF8h2BWwYnYIaB2t3c9GdH3e6GpeetmA
nXt8w/kgftv1gW5iak2gW3rpuYeDfC1TNcTN5fRWfu7Ws3EzvGJQKYV21qKV
ZEWHkxvLKlttOuhkZCtmg2LeK2hFlaaasfXCufrSYFZqf2/jP9gsgN0SJn64
VZ/wn9RLwVepGWCs8lXoql7a+uXeyNfQbqNBytcDxteD4KvQ9RC9tGsTdhsS
woKsOJPYXJHSuVuPUkrnoQSw81VKE2F7t580wn5vhG0Ssp4ywp5OhO3bJXra
Rz3t3302W5ayREFrRmqQxYk5Cq+Ds4rGCNoV3KenhrJMdKv5VnWccrXFJk3W
B6WRwirXEasJnAJTB5jaz16u8aN/a5/bcLD8A7sYHw0BZX0DylZ56TUG3s+S
V7qOsS9j4H0sRMHqq4iB97IKMrjw6q97WProTWBwxaBrwCV0PS6r4K2Gv+At
qqC2Fjp2K+RFFRRYGzpaQvwSxOidcuioDzkww+DFmzQMRqBQ8ha/WbRQe9FC
XYDUd/5XccjW0MqayxbqXETADIN7EAF3K1tLcy0YC1Nd5QuzPx1gprM4TzTr
o5QEhw60Tttx0abWihz4/bJauGFBC1LgmVySKWgFWMsiX6cjDZ7Gk1FSXd8N
Ea8ObJVbJLrSWicxFJ4kYJ1YlidhffRXlNx0HFus49amjDi8tUZR6y0ZVrCi
x2pgdTZqRIlNXVUTWJax1QGscmdBKzurJrT9gQYr3y0ddnGZBT/HBDjSFWA1
ezXAujq6+kTWJ+iuj3MbdqTAj/WU/voot2F/BPnvw4x+DbAlZL2pK5AqXJUn
vn8W018trAu9l4tYzF9LunIRy91pBx/Q1SSWK0WRDd8xU7Ph22coZx0w66C1
cieK7VR2WONf0QgmwhjavWlSmQrfyET4Bk2ES/JqMsxEGPClN4fhKrWArybD
b2oqfNUbGYId6IvFLcpfbbK+kiHYgb6Fj+z9Qf464+/PjL+X19itA3+huM9Q
b+tWi/rBdvJJkHo0AMexFMuVHMvpTF0XNIFUJsYMjEHQksyl8NbNHSUq22rR
GirfVE9ln1GZ1nv9SXxHyXZPxMHd44V2X7M3BtccreNto2ndc+D5xXOHxsPC
hA/I5jDJBHjKJ9vDVBNghfMugfNuuO8eedUlm/cJm/fHDREUzQdKNH/TEM2V
hOZ5imYnXD4e6beASCaWiWTsiISs2LAMydp5mtNIxLKJr/xSBMzgMX4zEF9L
iWNbdpmdOqvwEcT2w1Ukc4/1MiyuxO3XdaM7JsQV2wAv7VNwgE1QSKut+yzb
roh6sT50EAl2SYLruO1x+b+Etw9Fh5VrQ8PbiJg3wLY3JG5vkFexgVO/6/HO
YT2mfpXW6/aVtK4YrdfuraN1NHrI8mowWmV51a6Bspxz22R5xQ6VZfwwtw+E
97JtdfAudM0MwuclDJ6XsMHLIHoLq3CDAd1pd1d4bv/To0EvxH7yvZgd7sXY
sEbSC4Tp87XQ4kV3dx66u3O5FZHJcqxGdDfhmU1Ttiw6dHI6itPCsxhIG9VR
BVu8GJb6INkzqgK0+zKRJtRncp++GVg+MwPLZ6YzkJ7+XhJnlAfW5dPRmafE
/RYmo9XbgOrrleqeMK9EXY44d2C5ozYL0VcnbS7qqf5apLr89b66glNTWqU2
k/TeImpu1WfSXNK9P6e7A9gLH7FOtLPPC8AL1Z/Rko+eZovX1JnFVi+X2zzJ
0aknS8iHJzA69ThHpzLOo+NLj0ZO/UiXurT5NPJq9niZVatHFwyrvRF/VjLp
+zpKk/aWVLeZQGcJ9V2YLlaD5p64hnfQPdw2PSO8A9zlBqOA+CkptK7qbxVZ
tQfZmVWbVcOjr6NHX2seDZwPR0Z9DYeJ64jOqPrK1zOoO/Bc7m9EZ5/3d2Nz
qFdzqHNm6lcv4fv6JYJqQTrGigH1F8tmrx4yL8epxmqU2p/niaiN4RlZ3Q/7
9XksvqnLrH2dX+t4lOYZtuom7vYQp4ZH2b4PtvKGnj1CI+wamhPmmJ7CCNX1
J6nUXoNqgbYfzJ3/4+Bwfv7ccJb/2iLPE0WeJ320tYhTT1NTOr0zwlnYvJv2
rHTeK2QmncWa92vmp3hGIvjNweLHhudDwLPA+TDT6Z4tqCNC6CNGaKX0/G2o
42GBpdQLtp9wwHQk9KId3xuhTyVC9+06bYQ+E/qN0GDzWUxFnY3nU+GA8F7N
ng3E8c9jEBAziPa6gx4fI2PwugONGFw1BgOz8W0V8dsEwNrPXq7xoxK//OpF
wK8Pbx9Qd67Dr8el14R6PcLpdXjN6xBOr4Xlr90bbJ/aNZRi6vFuVkHyWnN3
Ffq6JW9XCm9XRt568NZrOL18ewynl6Gpq2xdunUgW5dsqWNr4XWYajNLPtfH
U7cwu95UlmXW38RXYrTFWzGiltA13jrg1plNz/+y1qbnca1OQ+7GPbXJ3E9Z
BUesxFzmCHJnZ9X5cUJwCeBqDmBWu4IYkbU6dtv7tY7dSg63oDOcgmswmG5N
EDtw2JlgT3u3FOypUbCrUa5TTVLRRnt4ItvDE9enGDtMWKdI9hZeK4DRHzYA
u+TWzKxtaBnoNfw6sFfulOi7LGhy7UFfKrUDcR37wpXwYh8nrLQWG30rOX1V
q58lcglf1Wp51KfRFFaxplMLdCNy5atPYNnO46DuY1ziakbNMtoWFGtPzFZz
zGpxY4g/c3fcP4tO329lal04o+297cmt5SNgt5pjV6vF3JrkdYAulsQqdhlf
3zpNO8a3TFX4OnC30LnlkZNZ5tiefl26lv5lksQp1f4BGjuA2IHCcgPjMFvG
V7yWodiBwpi5Ug6zZfzblxXFnlpdiQxmyzhReEgNhfHkcGvk25frgp7SrH2D
ZNs12H3JJq4Uv/8zCt1o6GoAfG8LGm7HcVCjbjw92qizPs5Z0aNL3tKZFbbq
y4iuT0ZfLkrs4uo1xyJVG258awD+bw0A/Ny5AXwp02sDcJj8sRryVDHkaZ/u
UAB/BgDvIoBbCeA9ALADgbE5sPGXhzFh8GyUKPKcb7AvbtcmnHcm4y8ySLHk
JuHvEePv0Zy/9nsT+MqfxsIdJ0Fg468yeDEL7D2N0Bo/1H4gePdZ6rFKclNY
Kh8Lh1nLpPDyamjMTdxdFlTrrw9nUik3gOck8hoV4+yMZ0N0P4d1CK/XIXZm
ZL0exN1gdK1qE7gWwO/IR//AS/3cO/a5Zlz68A4e6m1ML79NFG+wp1QTViAz
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
XybEfj7pgNaqDtA9vIrF90kDONr6WoQ/h908Pf096OTV2MPT98a+Yy1fi96e
Y/RX8ssXcutgJvScOgHANbykAHxVAcDn0+Ijn//tQLX5mtGzpe9bA5SNGsBB
AMjvIZr9V0JVA8DxR/NP/L+YUvqK5W9Jlp9jQf33uIlXXcfrw/ibBrgM4+/q
L1ge6/pqOt9PN9LjZVMb1uy4ZedBd8IdiBeuV9SENu43fGmN+/miGeP/x5Ux
/v7s7f+1DvJDN/QG/Kit+8Jo8/Z1gJch4M3bTxLIT97dQ2+vhE/evoCxP4nf
g5Hw+3DxF2G8/E0p4T8C4QXwGME7TD74XgvzhfQw920y+BIWHPmUSTt24BeK
wVfWw+AvosFf3PMFaC+sx49KSE/Qw86jwQDll3Musl1P0Xus2FfGM+kNfGfq
TvfuUpVece7reJE1HkCPGXs/vUaaHVizBTm16529avOva5IulO4Xus/Ju204
F+KXJk+C65jiKj7q+8aXlfYywv4sR96uG8t63UgRIuEtHOrENVQ7WSF0KtNj
OM+UXviOXGM9vvn12J03b3+8AfItoHoNQNdMnqZ+NVv31aQ6+c79ugraoZ0O
x3h+BZJ5ML0lLDcnH/8h0tXjam1L8bBEbTyq9315FvFiMovUxqN635sHwb2n
mS9TbA++tyGv1/p9fnbxBTP8EoAvwXZ6d6eF+yzU7CzcZ8K3R5KXgHfhYyYf
pvKQ+hReSmbKJi7WxSHGadoLr7a9m1M0de2d5trLMLYjuXaMz4k82T2aF5J5
jyvy77WnaB5/lta2xzAetKZbJ7IdiO3Msg9d2duyFz4Cm9DWXF7QvSzl8vLc
IOTxb3FDvo7Zym3N5f2lWV1rZHV4hVczf1k7drXusWt34La8C8k9W3t2Djv2
59CxC7fNZQm5OezaSeyneNG2p6Yl+y7PPVFlNqr2yTmgfxS3D3mEa3Vs2Cv5
/F8itrlV5+jaa428Dg9G3+4zs8vEbOO1WnYf7hmZLHvBYl0+IKv1zO1wxzBj
tweyHXld0069ntbo1WHUb+LBNoF1uPHtlMp7oLopqd9UUjtA2oHQaNPfCOEX
r2sgfz3C+Ou4Kk9Mv6qBvIXy8kl/yi26CqfDj1+iTy/ihY1/8ELeoiOoPa16
WSX0ZRn1BOgrN+pAJIx3fzxqDt9a78yzO6/eHrN3EE90OxpznF27aDtzMjdd
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
emzbdZuzQ+Ny+eSzt9cZ7ZLldw3YpsWOM52H0qdj7W0aD6VPq2d2mEpkT1GP
ncENbDtQmxvu8rqJ3SlLT+z2RHYZPXaEtgOxHRN0cdzrUoKe8V2r4ptjDTja
bk3SR6yuJunDsfeWDDjBLVNwwx27cCu0/uYA3+9yuf1dwfc7Nm+jBgfHW6ML
TxR/K1NcPv6biNIHcA/OvDf9t2OyXobX21KyjvH04D4G6nWheh3D5yjDPdDt
yO2absFVOvBnZxi5WYE70BprcMrrZL+foPOO2PaktR5PM1YXtNyEtaPNbo2U
zkY7m2yjdGuidIXU3H27jztvf8TFZjRFZ25umM6oZvGtdK4lOidCs+++jX33
bYPVZt+abXY9peWj3/S2Buk38jjaDTyOVsfrgWa6ffjtm2q6f8N7ovyaB9OM
2AD2FUIbX9BPeXX2CG0HXqMAB7HFdf9AxyJ1JXcTaD9VhXZBatf7aH8lXXfD
STTQ9N6cAlZstzd0G7bjFWcusfbm07Zbct14j5tiPS7wJsCx8/al/w8Q+67s
t6+i38543hveE0SPFkSPMb89dvsBwfPBfnzza8RSJ1sdpltaDls9cx/mFJPy
2ZgDsNVnoq128NSFbq8pyT/W3znkNww0Gm0DN7FNeCMVP+8AbfrmL807cxyB
XWMqvvJEvouJIBu57cmL7LDl/VafTOYZ4xsIXlYJrmfE16V2+1Lo7m+OuTuH
37pqVlTWz87xLc6Fb4DaX0vU/iaeamlCbXPVG/E5NsCtb8jA3gBg68j/WgK7
+7QaavJaMV1WMY1hKE5Ql9FPC5rX6RQst1vA5xrQzE11DzQ7XVJbjQu3KppX
Ha7LuZ1tqa08pI7aRv5esJ22nCfNlmcHXTANl5cty9wu6KhRe+xjIE6C01uX
QHcJahdee+09nIKLawjKd9f12gC3fC3zUWTPwwnyuTxBLpCmq7ZxWm3PRqE9
i2fPZm3jlhphHWNxbqpZFB7H6bratM3xLyyimoW3p7XWo+Uw1mauHSDNFXXs
rHWlTDyh2oPQ8joz1ZwxRDVW0kbzNimj23Ms/l57VCsajCuY1Vhnc82lNEbi
RRmtdCSyA47/L/u3WjGtGAf2mRQQ8nHYJbNDfhqXZtEAOnpVkI/00/S5DI9P
Tumz7n/Xo/CRiEJ52V8npPRZnquHYgMQw0PvGxQdWChvGGlYIaIugzFzvhdL
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
8vVUt+CVvYYAQ6cXGOrbHhLBYoEE46JSoVqJgY9b7s+BDwdEuGznkQs3cu41
AiqMwdzrOqYk1cxLScnRsxQMtgWGq9pgcACDywol0iB8xUt4rU0hVeSf9aLb
Ix0uwGU25zMRqeIkcqE+91ZlgwUSZNzlQYU47qrPvEXZUJVskIwH1cmp42MC
WdEgdSO+NfH1ThqXfb0TEe84QRQKQDG2jkqlPfLyTUyoJBmhoTephySZXQy8
lBqoDsAxCuBwAMcogMMlT0979kEae2rqqTxp8uNA5Mco8GNAgbFvfwYGFcqA
TrgSHHTKhXAHE5JxpLWTtl0khAchbCIETw5QkTAmSUBwzGWBBf1nUUkitQ3f
sWJha5YhLvGhAhKMHLCHS7eODt06Zj7o2G1M5ST4wd+x1RviX2S1osHj0ZMF
rmSBoTNn5L4aqBAtPZf3M6ZaHG0tAwYCCyplwYq2H5dBYMEBzT8ugqyIAPDo
+cbLeYGfUuXebyXU8T3GVn0A4NHzjZfjAgtS6YmBrxDqkLnWl/PKudYXyHiI
+cZXCqHp9l0qSURWbPmFAVd/yqb/iVhvufVHG84U3b/T1f0/EDVxHD7bGfg1
H5B/ndDIZTLj6/ueT5YTGrlFF//tTdyhiTudx/Tt2447eic+06Os8Alv52sz
3v5IMptQFo1b/zW0dcu+3qF3O7bsSuLtuWHXN/PKlPG8MmX8vWlfL1H3G3EG
bBzzCuPuSWYTyrF3V+Iz3SWlndu0W/e17dbtdASDgLvkFq6ckXMLV0yXPX27
dV9Kf+kSHMu+OGXaYS3lzIKvL5ycsw0XTJLdvfGpiWsjt+jiNJocpzFV3Nnn
Ps6t/Rno5MlcQvdmB7dxg39T9wbfODGYxrHCU2Wrf+INfbb67bFMVw93aZff
asq9bKX/SXr45B49fFaPnb/Do5djYYd5GyhzC0dZOIqtrVw/DBpA/qSPh3NT
r8qmfqhGOzdqO+0/GG2nQWT3utt71AN7B7MeqFK311R96PEdNPUK/dw4Gcns
Yhl2dj2JvQ3ZhdjZuePnhr/bbNpWs61bdHUn05eNyC5sYHZhQ97tG85hqn4d
ne1izQZxlFodPW72V61rb/aDAFjbbvCubPAINTDAQMtpdapWqw8ftDTbTMaO
uPNbCTMsXCrWUnjigrz3NzSZPAAQ3qHGEs2lTAGRAVXbYaq/JQLEYeLtKOoq
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
TL+cVTQ2yk4qzrQdq7gdwztPy13MsI05ikwft2Kxk1m0MZvbmEtt7M/yqiIj
F5hDNLLr0y+K72Gb/XfHsNKO/lLHGiVW2hGcB5LeVnQ1VG5sFRqbl6jiQdma
FRPfDnqalajifu7Ryp7GjZp+R3H8wO7m0N28CNA9e7sdtj0sLw7bLkQV+7Q1
PO7MuzW6bh10uWqYbc3h0RZtTTsa9mybWcb36Gg29rWNecpLMVqhwYUfC0cQ
63Npm3PocVamvaswa+jT2cLbVqyuOexdzkHvcgx6xZYbUY/zaGvGRz8uloYY
F2LSwJnDAkwa5jNGPj+LT2NTg/Nt4blQ/8WW4Fes0o1Zuevq0a5uje0qPHXi
/ckjU+1ItahNq9h7+fbey6J59eldjr3Lx77F4vx0DLImPTrW6KJj5b0Xm5S4
/T52Kampuveq0t7r0tympE+F9zEnPbnOAnKSmmXcflm0J3an8NnDxos2GQsO
/9lMR6tkVNnI/t+SjdqnRDaGTxR6FTqV1DjpWBaNyqrBf+LYbPCfcL10LL4M
kvHt1wv+ffpVr8vHRtClBmRWeuRoVE2HcavKYW622J2oIPFqDq3GdFAbk3Ey
Ij3AMtx2GfYoWmSDnJAOsk9xTLpvsCQz92OMWe/lLowdK27FtFntSc3KyWh0
F6aiHI3uxBCA9tiOndEe275DZGT4Wtu2d+/Btm4bbrMKv2KQlpFlKjPDd7Vx
s/hmbFdqlK3fKMKSvakq5aTsuZo9yUoCZSWsMPphK1aLnMz9x8ihltB/UIad
KPzEOQVdnkubURCVmBH8yMHnj3mzZeiQebQjmmHGRxUZS6eg839MinLe4oai
dGhK/LusKeXhpAfpycey6Dt92g7NKpe3SbHXGKsxt+hUsdGMY0zjBk4Wb7gr
iz3+La+nOU/fajbLsOEgtTEraT6URdMxLradYrMUGtCM7GS5IXdK4QfeowPV
l2DCGDdLxsXuww4U/asLbsv+FZ0rJIdFA+Z2xC50NqaNZ3HaqPul9Dt3BhvR
6Q1/XrdNNu+b0IlQhjrQ0cbyUf/FjmTRjqzqwOPHpA3U77x96tWO/iXpwNtL
HSgNKHzTR3+JkY0jSf2pKgzvZVTuMC2tI0gRI7IRGtJx2pC0GbEVVXgchQ40
IC3HIPMh+6NoX+1l+C12m6pra5S7jZU8XHe34X7INbuNRbPxPXpMw77a2ugx
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
hNNrlNGl36Q4LJqAl8leGjL71SuTqAX6u54occhauNGVMpM7mKsbgIfj1g/5
WkZl5YNuDxcoLNHkA0KTJtQxZfh5pixi+EmiJk0eRPfnALs/mqKZplljTx+6
/6yvY0iTO1Pk3yfQljq60IhACwQqO7rsY6W8GeFQGyubIX7pjgX3FrZo2dLc
7Ps9XOVKNoc2elJuE3xa16yDAsuQE17VdL5WZcTpdTUNvo6Cr8C1pWWOQi4H
5EwT5AwQVyc/nOMR8lu4Wie/609VMBisGt5xL3CbJbKspF9fHye4LUKUcJsl
pVkn/zAy0YD55OhFrwGlKj58YZJktPuF0ZLgmiuBa185B8sf8E0j7NOadiM0
yfenH6cTqGIbJ1dURZSWsW+ee1TlQFXuUcU2Tq6oikjNo8oCVTlQZT2qYiIL
5TGTbQ+HIZ8RljIrPcdFDpGGIgmZYJd5HMbhiwmW1Yr91vHlTPyHgc8s+MvX
HFV83ebwNY3lUw96jRfDzDB/5kAaOzEclwVvJlQaZZQdQT18mIeulLso84zn
LxuqC+JqPxsv9Yw5A1ef8fGTlbfZb6+AatuBykagGiuorLQKR2QpImvgOtlb
TJJMl/7vphJQ/IP2Gz1pYgdE5UCUVUThh4GqPvvXDlG5lBldqLIIRyuCI+uu
yxOACSNjamwBVkUCR1avFG0LHJnZGVEsfg0AlUc4KtUOH4k0mCMmS7xYyXS+
GjhZqgZUeJnATECL6q1bgJtjrEuZ7S5yZCaFl0MOL+ip3O+LA+koN4Nn3+7A
8w9+eXck0GK8tFJ+5r+4+TGimsI7KQ2ppmKgzMVA6QlQSD2ZFd3f5cgImcyK
7u9wiMDKZNcuMFGfuEEbr0fc7AQeA+yomlpbEjU1/c7qYp2OVm7sAkai+Cm1
FgmeRbTxpF4loqZ6/4aQkwLKVgAF49LyfxzCNZ+cftjrKCkzy8A6FQHrZAJY
bHygM3zZq3lPRylsoTN8Icipwyg7vZ5y6MpMIKb5GFuS8MLbawJP394Mrc8l
1FOKkggywZZjpCyPxBRKzRFLzZGUmig9BxwZaSqTExFT9GFkxOF8AoLkqlYC
cwZX/yeBOhNPWLYMPHbtcgDPKvA6+mtqHQc8+y0ArwWkFVWuuqZcJdhi8ltg
4lsQfF2tENafh5ynbYyH/DBAVAyoiK3sbKbKYzQBSwZQMikMHXQYwh7YOa+f
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
\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Derivatives", "Subsection",
 CellChangeTimes->{{3.6663482780640163`*^9, 3.6663482852088957`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]flat", " ", "=", " ", 
   RowBox[{"Flatten", "[", "\[Theta]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"costF", "=", 
   RowBox[{
    RowBox[{"J", "[", 
     RowBox[{"Y", ",", "\[Theta]", ",", " ", "5"}], "]"}], "//.", 
    RowBox[{"Join", "[", 
     RowBox[{"ruleA", ",", "ruleZ"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.666348312113738*^9, 3.666348322858068*^9}, {
   3.666348596286259*^9, 3.6663485995985937`*^9}, {3.6664398460639615`*^9, 
   3.6664398514241104`*^9}, 3.6665858036554985`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Architecture: \>\"", ",", " ", "archit"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<J=\>\"", ",", " ", 
    RowBox[{"costF", "/.", "rule\[Theta]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
   RowBox[{"i", "<", 
    RowBox[{
     RowBox[{"Length", "[", "\[Theta]flat", "]"}], "+", "1"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"deriv", " ", "=", " ", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"costF", ",", " ", 
        RowBox[{"\[Theta]flat", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", "rule\[Theta]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{"\[Theta]flat", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<->\>\"", ",", 
      RowBox[{"MantissaExponent", "[", "deriv", "]"}]}], "]"}], ";"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.6663483710484886`*^9, 3.6663485243172555`*^9}, {
  3.666348623047044*^9, 3.666348693696515*^9}, {3.6663490570469446`*^9, 
  3.6663490595179405`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Architecture: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "6", ",", "3"}], "}"}]}],
  SequenceForm["Architecture: ", {2, 5, 6, 3}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585808225333*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "310.64244186532`"}],
  SequenceForm["J=", 310.64244186532],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858082403398`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]110", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.27587591424311375`", ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]110, "->", {0.27587591424311375`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858082933607`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]111", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.1945471623858186`", ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]111, "->", {0.1945471623858186, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858083493834`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]112", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.6166651395934766`", ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]112, "->", {0.6166651395934766, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858083904*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]120", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.36794453759073`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]120, "->", {-0.36794453759073, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858084474225`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]121", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.402456398338294`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]121, "->", {-0.402456398338294, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585808504445*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]122", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3078899305271292`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]122, "->", {-0.3078899305271292, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858085444613`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]130", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7246373380863066`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]130, "->", {-0.7246373380863066, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858086014843`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]131", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.4288262821158268`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]131, "->", {-0.4288262821158268, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858086585073`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]132", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2680175742919808`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]132, "->", {-0.2680175742919808, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858086995234`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]140", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3089251046780779`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]140, "->", {-0.3089251046780779, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858087565465`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]141", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.5655004308420586`", ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]141, "->", {0.5655004308420586, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585808812569*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]142", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.12461829284828299`", ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]142, "->", {0.12461829284828299`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858088535852`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]150", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.30049599782895725`", ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]150, "->", {0.30049599782895725`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858089106083`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]151", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.17614762621050375`", ",", "0"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]151, "->", {0.17614762621050375`, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858089676313`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]152", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.28004935155962024`", ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]152, "->", {0.28004935155962024`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858090076475`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]210", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.4891090128377461`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]210, "->", {-0.4891090128377461, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585809043662*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]211", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2271040797555703`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]211, "->", {-0.2271040797555703, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858090796766`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]212", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.35580479963741674`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]212, "->", {-0.35580479963741674`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858091186924`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]213", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2648798778962718`"}], ",", "0"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]213, "->", {-0.2648798778962718, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585809155707*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]214", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.4191999093630794`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]214, "->", {-0.4191999093630794, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858091927214`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]215", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.108802330370912`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]215, "->", {-0.108802330370912, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858092287364`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]220", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5672419117497645`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]220, "->", {-0.5672419117497645, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858092647505`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]221", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.880995058931142`"}], ",", "0"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]221, "->", {-0.880995058931142, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858093017654`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]222", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.48559583112153126`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]222, "->", {-0.48559583112153126`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858093387804`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]223", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.14772001124534345`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]223, "->", {-0.14772001124534345`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585809375795*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]224", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.16921470421954868`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]224, "->", {-0.16921470421954868`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.66658580941181*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]225", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.4267184401252101`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]225, "->", {-0.4267184401252101, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858094488244`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]230", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.189724506861748`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]230, "->", {-0.189724506861748, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.66658580948584*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]231", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.2826777476832029`", ",", "0"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]231, "->", {0.2826777476832029, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858095228543`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]232", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.43677729433028684`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]232, "->", {-0.43677729433028684`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858095718737`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]233", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.17060703679548272`", ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]233, "->", {0.17060703679548272`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858096088886`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]234", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5432503349187642`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]234, "->", {-0.5432503349187642, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585809644903*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]235", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.10563362350952421`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]235, "->", {-0.10563362350952421`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858096809187`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]240", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.10418464640521777`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]240, "->", {-0.10418464640521777`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858097169323`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]241", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8470254485000597`"}], ",", "0"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]241, "->", {-0.8470254485000597, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585809752947*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]242", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8218370020604168`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]242, "->", {-0.8218370020604168, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585809789963*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]243", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.23475128424875766`"}], ",", "0"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]243, "->", {-0.23475128424875766`, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585809825976*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]244", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.70848969835263`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]244, "->", {-0.70848969835263, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585809862991*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]245", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5184855726126893`"}], ",", "0"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]245, "->", {-0.5184855726126893, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858099000063`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]250", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.22802154784783163`"}], ",", "0"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]250, "->", {-0.22802154784783163`, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585809936021*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]251", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.14961679897110858`", ",", "0"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]251, "->", {0.14961679897110858`, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858099740353`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]252", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.30968983580369724`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]252, "->", {-0.30968983580369724`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.66658581001005*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]253", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5461769886463086`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]253, "->", {-0.5461769886463086, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858100460644`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]254", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.23936451021830032`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]254, "->", {-0.23936451021830032`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858100830793`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]255", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.10253028522323486`"}], ",", "2"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]255, "->", {-0.10253028522323486`, 2}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858101230955`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]260", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6401620166460519`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]260, "->", {-0.6401620166460519, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858101601105`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]261", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2668025555371929`"}], ",", "0"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]261, "->", {-0.2668025555371929, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585810196125*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]262", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.38081906925822545`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]262, "->", {-0.38081906925822545`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585810233139*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]263", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.44915054659036213`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]263, "->", {-0.44915054659036213`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858102701545`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]264", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.11387451867186413`", ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]264, "->", {0.11387451867186413`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585810307171*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]265", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5485427600177692`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]265, "->", {-0.5485427600177692, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585810344184*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]310", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.4402227540387068`", ",", "0"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]310, "->", {0.4402227540387068, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.66658581035719*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]311", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8150543100220867`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]311, "->", {-0.8150543100220867, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858103701944`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]312", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.38439761419594437`", ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]312, "->", {0.38439761419594437`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858103831997`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]313", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1365298735619784`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]313, "->", {-0.1365298735619784, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585810396206*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]314", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.2747415995623269`", ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]314, "->", {0.2747415995623269, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858104092107`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]315", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.12732751409110948`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]315, "->", {-0.12732751409110948`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585810422216*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]316", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.546499307016284`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]316, "->", {-0.546499307016284, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585810435221*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]320", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.4155568908652166`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]320, "->", {-0.4155568908652166, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585810448226*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]321", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.30646264718256694`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]321, "->", {-0.30646264718256694`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858104622326`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]322", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5070334110726459`"}], ",", "0"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]322, "->", {-0.5070334110726459, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858104772377`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]323", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.20090819813843627`", ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]323, "->", {0.20090819813843627`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858104912434`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]324", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.366677526913695`", ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]324, "->", {0.366677526913695, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858105072503`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]325", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.12021287975211774`", ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]325, "->", {0.12021287975211774`, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585810522256*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]326", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5299166545796427`"}], ",", "0"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]326, "->", {-0.5299166545796427, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858105362616`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]330", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.16431344320819602`"}], ",", "0"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]330, "->", {-0.16431344320819602`, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585810549267*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]331", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3397880401440255`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]331, "->", {-0.3397880401440255, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585810562272*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]332", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.9038756050990693`"}], ",", "0"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]332, "->", {-0.9038756050990693, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858105752773`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]333", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3644295568069601`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]333, "->", {-0.3644295568069601, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858105882826`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]334", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1250458417593922`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]334, "->", {-0.1250458417593922, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585810601288*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]335", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.4713328470535898`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]335, "->", {-0.4713328470535898, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.666585810614293*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "\[Theta]336", "\[InvisibleSpace]", "\<\"->\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3350434766402331`"}], ",", "1"}], "}"}]}],
  SequenceForm[$CellContext`\[Theta]336, "->", {-0.3350434766402331, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.666348502948645*^9, 3.6663485252006116`*^9}, {
   3.6663486683192883`*^9, 3.6663486942187266`*^9}, 3.6663490603372717`*^9, 
   3.6663520558504686`*^9, 3.6664377637730837`*^9, 3.6664381036043386`*^9, 
   3.6664398264561014`*^9, 3.6664399769484396`*^9, 3.6664401546286783`*^9, 
   3.6665854275594473`*^9, 3.6665858106282988`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Theta]min", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2.4249", ",", 
        RowBox[{"-", "1.3092"}], ",", " ", "1.5766", ",", 
        RowBox[{"-", "10.3528"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.6063", ",", 
        RowBox[{"-", "1.8374"}], ",", " ", "1.7387", ",", 
        RowBox[{"-", "10.4571"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"10.340", ",", 
       RowBox[{"-", "10.279"}], ",", 
       RowBox[{"-", "10.413"}]}], "}"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"rule\[Theta]", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[Theta]", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Theta]min", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"k", ",", " ", "1", ",", " ", 
           RowBox[{"Length", "[", 
            RowBox[{
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", " ", 
       RowBox[{"Length", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6663543126984687`*^9, 3.6663543922865424`*^9}, {
  3.6663544308230724`*^9, 3.6663544325987883`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2.4249`", ",", 
       RowBox[{"-", "1.3092`"}], ",", "1.5766`", ",", 
       RowBox[{"-", "10.3528`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.6063`", ",", 
       RowBox[{"-", "1.8374`"}], ",", "1.7387`", ",", 
       RowBox[{"-", "10.4571`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"10.34`", ",", 
      RowBox[{"-", "10.279`"}], ",", 
      RowBox[{"-", "10.413`"}]}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6663543714521475`*^9, 3.66635439394121*^9}, 
   3.6663544336952305`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Theta]110", "\[Rule]", "2.4249`"}], ",", 
   RowBox[{"\[Theta]111", "\[Rule]", 
    RowBox[{"-", "1.3092`"}]}], ",", 
   RowBox[{"\[Theta]112", "\[Rule]", "1.5766`"}], ",", 
   RowBox[{"\[Theta]113", "\[Rule]", 
    RowBox[{"-", "10.3528`"}]}], ",", 
   RowBox[{"\[Theta]120", "\[Rule]", "2.6063`"}], ",", 
   RowBox[{"\[Theta]121", "\[Rule]", 
    RowBox[{"-", "1.8374`"}]}], ",", 
   RowBox[{"\[Theta]122", "\[Rule]", "1.7387`"}], ",", 
   RowBox[{"\[Theta]123", "\[Rule]", 
    RowBox[{"-", "10.4571`"}]}], ",", 
   RowBox[{"\[Theta]210", "\[Rule]", "10.34`"}], ",", 
   RowBox[{"\[Theta]211", "\[Rule]", 
    RowBox[{"-", "10.279`"}]}], ",", 
   RowBox[{"\[Theta]212", "\[Rule]", 
    RowBox[{"-", "10.413`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6663543714521475`*^9, 3.66635439394121*^9}, 
   3.6663544336972313`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"costF", "/.", "rule\[Theta]"}]], "Input",
 CellChangeTimes->{{3.666354441462361*^9, 3.6663544546206636`*^9}}],

Cell[BoxData["0.0000334273804132931`"], "Output",
 CellChangeTimes->{{3.666354445458971*^9, 3.666354455264923*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{"costF", ",", " ", "\[Theta]flat"}], "]"}]], "Input",
 CellChangeTimes->{{3.66635449426364*^9, 3.6663545047578683`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindMinimum", "::", "\<\"lstol\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"The line search decreased \
the step size to within the tolerance specified by AccuracyGoal and \
PrecisionGoal but was unable to find a sufficient decrease in the function. \
You may need more than \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(MachinePrecision\\), \\\"MT\\\
\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" digits of working precision to \
meet these tolerances.\\\\\\\"\\\", \\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindMinimum/lstol\\\", ButtonNote -> \
\\\"FindMinimum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.666354505027978*^9, 3.6663547061100135`*^9, 
  3.66643784868813*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.4802973661668756`*^-16", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]110", "\[Rule]", 
      RowBox[{"-", "17.27758601833022`"}]}], ",", 
     RowBox[{"\[Theta]111", "\[Rule]", "12.116639936828337`"}], ",", 
     RowBox[{"\[Theta]112", "\[Rule]", 
      RowBox[{"-", "5.667111888290084`"}]}], ",", 
     RowBox[{"\[Theta]113", "\[Rule]", "58.72808422073404`"}], ",", 
     RowBox[{"\[Theta]120", "\[Rule]", 
      RowBox[{"-", "17.27758601832988`"}]}], ",", 
     RowBox[{"\[Theta]121", "\[Rule]", "12.116639936828491`"}], ",", 
     RowBox[{"\[Theta]122", "\[Rule]", 
      RowBox[{"-", "5.667111888290616`"}]}], ",", 
     RowBox[{"\[Theta]123", "\[Rule]", "58.72808422073453`"}], ",", 
     RowBox[{"\[Theta]210", "\[Rule]", 
      RowBox[{"-", "57.32043422633417`"}]}], ",", 
     RowBox[{"\[Theta]211", "\[Rule]", "46.640904743036415`"}], ",", 
     RowBox[{"\[Theta]212", "\[Rule]", "46.64090474303778`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6663545050289783`*^9, 3.666354706121019*^9, 
  3.666437848697134*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rule\[Theta]", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[Theta]", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10"}], ",", " ", "10"}], "}"}], "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"k", ",", " ", "1", ",", " ", 
           RowBox[{"Length", "[", 
            RowBox[{
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", " ", 
       RowBox[{"Length", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"costF", "/.", "rule\[Theta]"}]}], "Input",
 CellChangeTimes->{{3.6663545480153017`*^9, 3.666354583271509*^9}, {
  3.6663546319451246`*^9, 3.666354656465006*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Theta]110", "\[Rule]", 
    RowBox[{"-", "1.4874861454911148`"}]}], ",", 
   RowBox[{"\[Theta]111", "\[Rule]", 
    RowBox[{"-", "9.43311968798458`"}]}], ",", 
   RowBox[{"\[Theta]112", "\[Rule]", "7.061356051940038`"}], ",", 
   RowBox[{"\[Theta]113", "\[Rule]", "8.145828647303887`"}], ",", 
   RowBox[{"\[Theta]120", "\[Rule]", 
    RowBox[{"-", "6.702971738269458`"}]}], ",", 
   RowBox[{"\[Theta]121", "\[Rule]", "8.663430841375003`"}], ",", 
   RowBox[{"\[Theta]122", "\[Rule]", 
    RowBox[{"-", "2.6534210743783326`"}]}], ",", 
   RowBox[{"\[Theta]123", "\[Rule]", "9.566092780424292`"}], ",", 
   RowBox[{"\[Theta]210", "\[Rule]", "9.006874469934026`"}], ",", 
   RowBox[{"\[Theta]211", "\[Rule]", "7.855361353987604`"}], ",", 
   RowBox[{"\[Theta]212", "\[Rule]", 
    RowBox[{"-", "8.046862563530187`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6663546572403193`*^9, 3.66635467203228*^9}}],

Cell[BoxData["5.614070386270072`"], "Output",
 CellChangeTimes->{{3.6663546572403193`*^9, 3.6663546720332804`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMinimize", "[", 
  RowBox[{"costF", ",", "\[Theta]flat"}], "]"}]], "Input",
 CellChangeTimes->{{3.6663547638932996`*^9, 3.666354772864915*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6858632632219392`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]110", "\[Rule]", "0.08741041218801508`"}], ",", 
     RowBox[{"\[Theta]111", "\[Rule]", 
      RowBox[{"-", "0.005142249840323101`"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.666354775036791*^9, 3.666438117449887*^9, 
  3.666439835196604*^9, 3.666439984089302*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1613, 717},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"7.0 for Microsoft Windows (64-bit) (February 18, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 215, 4, 83, "Title"],
Cell[CellGroupData[{
Cell[819, 30, 154, 2, 71, "Section"],
Cell[CellGroupData[{
Cell[998, 36, 7134, 187, 192, "Input"],
Cell[8135, 225, 614, 10, 30, "Output"],
Cell[CellGroupData[{
Cell[8774, 239, 1813, 40, 80, "Print"],
Cell[10590, 281, 2755, 54, 95, "Print"],
Cell[13348, 337, 2068, 42, 50, "Print"]
}, Open  ]],
Cell[15431, 382, 3817, 100, 88, "Output"],
Cell[19251, 484, 5800, 135, 126, "Output"]
}, Open  ]],
Cell[25066, 622, 1488, 35, 72, "Input"],
Cell[CellGroupData[{
Cell[26579, 661, 2003, 50, 52, "Input"],
Cell[28585, 713, 2258, 54, 50, "Output"],
Cell[30846, 769, 2256, 54, 50, "Output"]
}, Open  ]],
Cell[33117, 826, 301, 9, 47, "Input"],
Cell[CellGroupData[{
Cell[33443, 839, 4493, 101, 52, "Input"],
Cell[37939, 942, 8124, 235, 158, "Output"],
Cell[46066, 1179, 12506, 276, 259, "Output"]
}, Open  ]],
Cell[58587, 1458, 2803, 69, 49, "Input"],
Cell[CellGroupData[{
Cell[61415, 1531, 902, 16, 31, "Input"],
Cell[62320, 1549, 101439, 2241, 2565, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163796, 3795, 529, 13, 31, "Input"],
Cell[164328, 3810, 353757, 5792, 645, 117691, 1920, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[518122, 9607, 103, 1, 36, "Subsection"],
Cell[518228, 9610, 571, 13, 52, "Input"],
Cell[CellGroupData[{
Cell[518824, 9627, 1249, 32, 152, "Input"],
Cell[CellGroupData[{
Cell[520098, 9663, 592, 11, 23, "Print"],
Cell[520693, 9676, 519, 9, 23, "Print"],
Cell[521215, 9687, 647, 12, 23, "Print"],
Cell[521865, 9701, 644, 12, 23, "Print"],
Cell[522512, 9715, 640, 12, 23, "Print"],
Cell[523155, 9729, 662, 13, 23, "Print"],
Cell[523820, 9744, 662, 13, 23, "Print"],
Cell[524485, 9759, 666, 13, 23, "Print"],
Cell[525154, 9774, 666, 13, 23, "Print"],
Cell[525823, 9789, 666, 13, 23, "Print"],
Cell[526492, 9804, 666, 13, 23, "Print"],
Cell[527161, 9819, 666, 13, 23, "Print"],
Cell[527830, 9834, 642, 12, 23, "Print"],
Cell[528475, 9848, 647, 12, 23, "Print"],
Cell[529125, 9862, 647, 12, 23, "Print"],
Cell[529775, 9876, 647, 12, 23, "Print"],
Cell[530425, 9890, 647, 12, 23, "Print"],
Cell[531075, 9904, 664, 13, 23, "Print"],
Cell[531742, 9919, 666, 13, 23, "Print"],
Cell[532411, 9934, 669, 13, 23, "Print"],
Cell[533083, 9949, 664, 13, 23, "Print"],
Cell[533750, 9964, 666, 13, 23, "Print"],
Cell[534419, 9979, 664, 13, 23, "Print"],
Cell[535086, 9994, 666, 13, 23, "Print"],
Cell[535755, 10009, 664, 13, 23, "Print"],
Cell[536422, 10024, 669, 13, 23, "Print"],
Cell[537094, 10039, 667, 13, 23, "Print"],
Cell[537764, 10054, 666, 13, 23, "Print"],
Cell[538433, 10069, 666, 13, 23, "Print"],
Cell[539102, 10084, 661, 13, 23, "Print"],
Cell[539766, 10099, 644, 12, 23, "Print"],
Cell[540413, 10113, 669, 13, 23, "Print"],
Cell[541085, 10128, 647, 12, 23, "Print"],
Cell[541735, 10142, 664, 13, 23, "Print"],
Cell[542402, 10157, 669, 13, 23, "Print"],
Cell[543074, 10172, 669, 13, 23, "Print"],
Cell[543746, 10187, 664, 13, 23, "Print"],
Cell[544413, 10202, 664, 13, 23, "Print"],
Cell[545080, 10217, 667, 13, 23, "Print"],
Cell[545750, 10232, 660, 13, 23, "Print"],
Cell[546413, 10247, 666, 13, 23, "Print"],
Cell[547082, 10262, 667, 13, 23, "Print"],
Cell[547752, 10277, 647, 12, 23, "Print"],
Cell[548402, 10291, 666, 13, 23, "Print"],
Cell[549071, 10306, 666, 13, 23, "Print"],
Cell[549740, 10321, 669, 13, 23, "Print"],
Cell[550412, 10336, 669, 13, 23, "Print"],
Cell[551084, 10351, 666, 13, 23, "Print"],
Cell[551753, 10366, 664, 13, 23, "Print"],
Cell[552420, 10381, 667, 13, 23, "Print"],
Cell[553090, 10396, 669, 13, 23, "Print"],
Cell[553762, 10411, 645, 12, 23, "Print"],
Cell[554410, 10425, 664, 13, 23, "Print"],
Cell[555077, 10440, 641, 12, 23, "Print"],
Cell[555721, 10454, 666, 13, 23, "Print"],
Cell[556390, 10469, 647, 12, 23, "Print"],
Cell[557040, 10483, 664, 13, 23, "Print"],
Cell[557707, 10498, 644, 12, 23, "Print"],
Cell[558354, 10512, 667, 13, 23, "Print"],
Cell[559024, 10527, 662, 13, 23, "Print"],
Cell[559689, 10542, 664, 13, 23, "Print"],
Cell[560356, 10557, 669, 13, 23, "Print"],
Cell[561028, 10572, 666, 13, 23, "Print"],
Cell[561697, 10587, 647, 12, 23, "Print"],
Cell[562347, 10601, 642, 12, 23, "Print"],
Cell[562992, 10615, 645, 12, 23, "Print"],
Cell[563640, 10629, 666, 13, 23, "Print"],
Cell[564309, 10644, 667, 13, 23, "Print"],
Cell[564979, 10659, 664, 13, 23, "Print"],
Cell[565646, 10674, 666, 13, 23, "Print"],
Cell[566315, 10689, 666, 13, 23, "Print"],
Cell[566984, 10704, 664, 13, 23, "Print"],
Cell[567651, 10719, 664, 13, 23, "Print"],
Cell[568318, 10734, 666, 13, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[569033, 10753, 2110, 59, 52, "Input"],
Cell[571146, 10814, 651, 19, 30, "Output"],
Cell[571800, 10835, 885, 21, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572722, 10861, 133, 2, 31, "Input"],
Cell[572858, 10865, 115, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[573010, 10871, 174, 3, 31, "Input"],
Cell[573187, 10876, 876, 15, 21, "Message"],
Cell[574066, 10893, 1091, 23, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[575194, 10921, 1479, 39, 52, "Input"],
Cell[576676, 10962, 958, 19, 30, "Output"],
Cell[577637, 10983, 115, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[577789, 10989, 168, 3, 31, "Input"],
Cell[577960, 10994, 396, 9, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
